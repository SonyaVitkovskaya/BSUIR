import matplotlib.pyplot as plt
import numpy as np

# Данные для графиков

# Зависимость от порогового значения ошибки
max_error = [1100, 1200, 1350, 1500, 1700, 1900, 2300, 2500, 3000]
iterations_error = [
    [593, 624, 611, 598, 527],
    [255, 265, 256, 239, 217],
    [124, 117, 120, 114, 109],
    [87, 75, 76, 82, 77],
    [60, 55, 53, 59, 57],
    [44, 42, 39, 40, 45],
    [26, 28, 24, 25, 29],
    [22, 24, 20, 21, 25],
    [16, 17, 14, 16, 17],
]

# Зависимость от коэффициента обучения
learning_rate = [0.0001, 0.0002, 0.0003, 0.0004, 0.0005, 0.0006, 0.0007, 0.0008, 0.0009, 0.001, 0.0012]
iterations_lr = [
    [547, 521, 523, 498, 507],
    [236, 248, 226, 223, 231],
    [141, 126, 135, 130, 128],
    [85, 84, 81, 75, 79],
    [56, 58, 52, 57, 53],
    [37, 40, 38, 38, 38],
    [30, 30, 29, 28, 29],
    [24, 19, 20, 22, 21],
    [16, 15, 16, 17, 16],
    [14, 13, 14, 11, 13],
    [None, None, None, None, None],
]

# Зависимость от коэффициента сжатия через Z
Z = [
    26.93998355713894, 20.206372045220967, 13.471837741537618,
    10.104224483502929, 8.083545761039389, 6.7363804563831975,
    5.052371897003649, 3.3683056364570843, 2.526250867319405,
    2.021011081186653, 1.6841816717778273
]
iterations_z = [
    [99, 97, 100, 102, 95],
    [87, 85, 88, 91, 90],
    [72, 74, 70, 69, 71],
    [66, 65, 64, 68, 67],
    [65, 66, 63, 64, 66],
    [72, 70, 71, 73, 74],
    [69, 71, 68, 70, 69],
    [79, 81, 78, 80, 77],
    [80, 79, 81, 78, 82],
    [86, 87, 92, 86, 77],
    [88, 78, 76, 89, 82],
]

# Функция для построения графика

def plot_graph(x, y, xlabel, ylabel, title, x_missing=None):
    means = [np.mean(values) if all(v is not None for v in values) else None for values in y]

    plt.figure(figsize=(10, 6))

    # Отображение всех точек
    for i, values in enumerate(y):
        plt.scatter([x[i]] * len(values), values, color="blue", alpha=0.6)

    # Линия среднего значения
    plt.plot(
        [xi for xi, mean in zip(x, means) if mean is not None],
        [mean for mean in means if mean is not None],
        color="red",
        marker="o",
    )

    # Отметка для отсутствующего значения
    if x_missing is not None:
        plt.axvline(x=x_missing, color="gray", linestyle="--", label="Нет данных")

    plt.xlabel(xlabel)
    plt.ylabel(ylabel)
    plt.title(title)
    plt.legend()
    plt.grid(True)
    plt.show()

# Построение графиков
plot_graph(
    max_error,
    iterations_error,
    xlabel="Максимально допустимая ошибка",
    ylabel="Количество итераций",
    title="Зависимость количества итераций от порогового значения ошибки",
)

plot_graph(
    learning_rate,
    iterations_lr,
    xlabel="Коэффициент обучения",
    ylabel="Количество итераций",
    title="Зависимость количества итераций от коэффициента обучения",
    x_missing=0.0012,
)

plot_graph(
    Z,
    iterations_z,
    xlabel="Коэффициент сжатия (Z)",
    ylabel="Количество итераций",
    title="Зависимость количества итераций от коэффициента сжатия",
)
