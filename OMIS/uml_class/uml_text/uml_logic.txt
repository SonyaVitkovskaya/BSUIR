@startuml
skinparam classAttributeIconSize 0
skinparam fixCircleLabelOverlapping true 
skinparam linetype ortho

class Запуск_программы <<main>> <<injector>>{
+запуск_программы()
}

class Главный_контроллер <<injector>>{
#приложение: Приложение
-контроллер_сотрудников: Контроллер_сотрудников
-контроллер_менеджера: Контроллер_менеджера
-контроллер_постояльцев: Контроллер_постояльцев
-контроллер_оповещений: Контроллер_оповещений
-контроллер_ресторана: Контроллер_ресторана
-контроллер_номеров: Контроллер_номеров
-контроллер_черного_списка: Контроллер_черного_списка
-контроллер_авторизации: Контроллер_авторизации
-контроллер_регистрации: Контролллер_регистрации
-контроллер_бронирования: Контроллер_бронирования
+запустить(): void
}

interface Контроллер_сотрудников {
+добавить_сотрудника(Сотрудник): Сотрудник
+получить_всех_сотрудников():  List<Сотрудник>
+получить_сотрудника(серия_номер_паспорта: str): Сотрудник
+изменить_сотрудника(Сотрудник): Сотрудник
}

class Базовый_контроллер_сотрудников <<control>>{
-репозиторий_данных: Репозиторий_данных
+добавить_сотрудника(Сотрудник): Сотрудник
+получить_всех_сотрудников():  List<Сотрудник>
+получить_сотрудника(серия_номер_паспорта: str): Сотрудник
+изменить_сотрудника(Сотрудник): Сотрудник
}

interface Контроллер_менеджера {
+иземнить_менеджера(): Менеджер
+получить_менеджера(): Менеджер
}

class Базовый_контроллер_менеджера <<control>>{
-репозиторий_данных: Репозиторий_данных
+иземнить_менеджера(): Менеджер
+получить_менеджера(): Менеджер
}

interface Контроллер_постояльцев {
+добавить_постояльца(Постоялец): Постоялец
+получить_всех_постояльцев():  List<Постоялец>
+получить_постояльца(серия_номер_паспорта: str): Постоялец
+изменить_постояльца(Постоялец): Постоялец
}

class Базовый_контроллер_постояльцев <<control>>{
-репозиторий_данных: Репозиторий_данных
+добавить_постояльца(Постоялец): Постоялец
+получить_всех_постояльцев():  List<Постоялец>
+получить_постояльца(серия_номер_паспорта: str): Постоялец
+изменить_постояльца(Постоялец): Постоялец
}

interface Контроллер_оповещений {
+создать_оповещение(отправитель, получатель): Оповещение
+получить_все_оповещения(): List<Оповещение>
+получить_историю_оповещений_пользователя(Пользователь): List<Оповещение>
}

class Базовый_контроллер_оповещений <<control>>{
-репозиторий_данных: Репозиторий_данных
+создать_оповещение(отправитель, получатель): Оповещение
+получить_все_оповещения(): List<Оповещение>
+получить_историю_оповещений_пользователя(Пользователь): List<Оповещение>
}

interface Контроллер_ресторана {
+создать_заказ(): void
+добавить_столик(столик: Столик): Столик
+добавить_бронь_столика(столик: Столик): Столик
+получить_меню(): Map<блюдо: str, цена: float>
}

class Базовый_контроллер_ресторана <<control>>{
-репозиторий_данных: Репозиторий_данных
+создать_заказ(): void
+добавить_столик(столик: Столик): Столик
+добавить_бронь_столика(столик: Столик): Столик
+получить_меню(): Map<блюдо: str, цена: float>
}

interface Контроллер_черного_списка {
+добавить_постояльца(Постоялец):void
+получить_весь_список(): List<Постоялец>
+проверить_наличие(Постоялец): bool
}

class Базовый_контроллер_черного_списка <<control>>{
-репозиторий_данных: Репозиторий_данных
+добавить_постояльца(Постоялец):void
+получить_весь_список(): List<Постоялец>
+проверить_наличие(Постоялец): bool
}

interface Контроллер_номеров {
+добавить_номер(Номер): void
+получить_номер(номер: int): Номер
+получить_свободные_номера(): List<Номер>
+изменить_номер(Номер): Номер
}

class Базовый_контроллер_номеров <<control>>{
-репозиторий_данных: Репозиторий_данных
+добавить_номер(Номер): void
+получить_номер(номер: int): Номер
+получить_свободные_номера(): List<Номер>
+изменить_номер(Номер): Номер
}

interface Контроллер_авторизации{
+авторизация_сотрудника(): void
+авторизация_менеджера(): void
+авторизация_постояльца(): void
}

class Базовый_контроллер_авторизации <<control>>{
-контроллер_сотрудников: Контроллер_сотрудников
-контроллер_менеджера: Контроллер_менеджера
-контроллер_постояльцев: Контроллер_постояльцев
+авторизация_сотрудника(): void
+авторизация_менеджера(): void
+авторизация_постояльца(): void
}

interface Контроллер_регистрации{
+регистрация_сотрудника(): void
}

class Базовый_контроллер_авторизации <<control>>{
-контроллер_сотрудников: Контроллер_сотрудников
+регистрация_сотрудника(): void
}

interface Контроллер_бронирования{
+добавить_бронь(): void
}

class Базовый_контроллер_бронирования <<control>>{
-контроллер_постояльцев: Контроллер_постояльцев
-контроллер_номеров: Контроллер_номеров
+добавить_бронь(): void
}

interface Репозиторий_данных{
 +получить_постояльцев(): List<Постоялец>
 +получить_менеджера(): Менеджер
 +получить_сотрудников(): List<Сотрудник>
 +получить_ресторан(): Ресторан
 +получить_историю_оповещений(): История_оповещений
 +получить_черный_список(): Черный_список
 +получить_номера(): List<Номер>
}
Контроллер_бронирования <|.. Базовый_контроллер_бронирования  
Контроллер_регистрации  <|.. Базовый_контроллер_регистрации  
Контроллер_авторизации  <|.. Базовый_контроллер_авторизации  
Контроллер_номеров <|.. Базовый_контроллер_номеров 
Контроллер_сотрудников <|.. Базовый_контроллер_сотрудников 
Контроллер_менеджера  <|.. Базовый_контроллер_менеджера 
Контроллер_постояльцев<|.. Базовый_контроллер_постояльцев
Контроллер_оповещений<|.. Базовый_контроллер_оповещений
Контроллер_ресторана<|.. Базовый_контроллер_ресторана
Контроллер_черного_списка<|.. Базовый_контроллер_черного_списка

Базовый_контроллер_номеров "1" o-- "1" Репозиторий_данных: -репозиторий_данных
Базовый_контроллер_сотрудников "1" o-- "1" Репозиторий_данных: -репозиторий_данных
Базовый_контроллер_менеджера "1" o-- "1" Репозиторий_данных: -репозиторий_данных
Базовый_контроллер_постояльцев"1" o-- "1" Репозиторий_данных: -репозиторий_данных
Базовый_контроллер_оповещений"1" o-- "1" Репозиторий_данных: -репозиторий_данных
Базовый_контроллер_ресторана"1" o-- "1" Репозиторий_данных: -репозиторий_данных
Базовый_контроллер_черного_списка "1" o-- "1" Репозиторий_данных: -репозиторий_данных

Главный_контроллер "1" o-- "1" Контроллер_номеров : -контроллер_номеров
Главный_контроллер "1" o-- "1" Контроллер_сотрудников: -контроллер_сотрудников
Главный_контроллер "1" o-- "1" Контроллер_менеджера: -контроллер_менеджера
Главный_контроллер "1" o-- "1" Контроллер_постояльцев: -контроллер_постояльцев
Главный_контроллер "1" o-- "1" Контроллер_оповещений: -контроллер_оповещений
Главный_контроллер "1" o-- "1" Контроллер_ресторана: -контроллер_ресторана
Главный_контроллер "1" o-- "1" Контроллер_черного_списка: -контроллер_черного_списка
Главный_контроллер "1" o-- "1" Контроллер_авторизации  : -контроллер_авторизации 
Главный_контроллер "1" o-- "1" Контроллер_регистрации  : -контроллер_регистрации
Главный_контроллер "1" o-- "1" Контроллер_бронирования  : -контроллер_бронирования  

Базовый_контроллер_авторизации "1" o-- "1" Контроллер_сотрудников: -контроллер_сотрудников
Базовый_контроллер_авторизации "1" o-- "1" Контроллер_менеджера: -контроллер_менеджера
Базовый_контроллер_авторизации "1" o-- "1" Контроллер_постояльцев: -контроллер_постояльцев

Базовый_контроллер_регистрации "1" o-- "1" Контроллер_сотрудников: -контроллер_сотрудников

Базовый_контроллер_бронирования "1" o-- "1" Контроллер_номеров: -контроллер_номеров
Базовый_контроллер_бронирования "1" o-- "1" Контроллер_постояльцев: -контроллер_постояльцев

Базовый_контроллер_номеров <.. Главный_контроллер : <<use>>
Базовый_контроллер_сотрудников <.. Главный_контроллер : <<use>>
Базовый_контроллер_менеджера <.. Главный_контроллер : <<use>>
Базовый_контроллер_постояльцев<.. Главный_контроллер : <<use>>
Базовый_контроллер_оповещений<.. Главный_контроллер : <<use>>
Базовый_контроллер_ресторана<.. Главный_контроллер : <<use>>
Базовый_контроллер_черного_списка<.. Главный_контроллер : <<use>>
Базовый_контроллер_авторизации <.. Главный_контроллер : <<use>>
Базовый_контроллер_регистрации <.. Главный_контроллер : <<use>>
Базовый_контроллер_бронирования <.. Главный_контроллер : <<use>>

Базовый_контроллер_постояльцев<.. Базовый_контроллер_бронирования : <<use>>
Базовый_контроллер_номеров <.. Базовый_контроллер_бронирования : <<use>>
Базовый_контроллер_сотрудников <.. Базовый_контроллер_авторизации : <<use>>
Базовый_контроллер_постояльцев<.. Базовый_контроллер_авторизации : <<use>>
Базовый_контроллер_менеджера <.. Базовый_контроллер_авторизации : <<use>>
Базовый_контроллер_сотрудников <.. Базовый_контроллер_регистрации : <<use>>

Главный_контроллер <.. Запуск_программы: <<instantiate>>
Базовый_контроллер_черного_списка <.. Запуск_программы: <<instantiate>>
Базовый_контроллер_сотрудников <.. Запуск_программы: <<instantiate>>
Базовый_контроллер_менеджера <.. Запуск_программы: <<instantiate>>
Базовый_контроллер_постояльцев<.. Запуск_программы: <<instantiate>>
Базовый_контроллер_оповещений<.. Запуск_программы: <<instantiate>>
Базовый_контроллер_ресторана<.. Запуск_программы: <<instantiate>>
Базовый_контроллер_номеров <.. Запуск_программы: <<instantiate>>
Базовый_контроллер_авторизации <.. Запуск_программы: <<instantiate>>
Базовый_контроллер_регистрации <.. Запуск_программы: <<instantiate>>
Базовый_контроллер_бронирования <.. Запуск_программы: <<instantiate>>



@enduml