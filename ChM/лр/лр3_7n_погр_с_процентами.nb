(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    172042,       4019]
NotebookOptionsPosition[    169404,       3933]
NotebookOutlinePosition[    169748,       3948]
CellTagsIndexPosition[    169705,       3945]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{"n", "=", "7"}], "\[IndentingNewLine]", 
 RowBox[{"b", "=", "2"}], "\[IndentingNewLine]", 
 RowBox[{"a", "=", 
  RowBox[{"-", "2"}]}], "\[IndentingNewLine]", 
 RowBox[{"h", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"b", "-", "a"}], ")"}], "/", "n"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"XDT", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"YDT", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ",", 
    RowBox[{"i", "\[LessEqual]", "n"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"xdata", "[", "i", "]"}], "=", 
      RowBox[{"a", "+", 
       RowBox[{"i", "\[Times]", "h"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ydata", "[", "i", "]"}], "=", 
      RowBox[{"N", "[", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"-", 
          RowBox[{"xdata", "[", "i", "]"}]}], "]"}], "+", 
        RowBox[{"0.01", "*", 
         RowBox[{"Exp", "[", 
          RowBox[{"xdata", "[", "i", "]"}], "]"}], "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"i", "+", "2"}]]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"XDT", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"XDT", ",", 
        RowBox[{"xdata", "[", "i", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"YDT", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"YDT", ",", 
        RowBox[{"ydata", "[", "i", "]"}]}], "]"}]}], ";"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Array", "[", 
   RowBox[{"xdata", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "+", "1"}], ",", "0"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Array", "[", 
   RowBox[{"ydata", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "+", "1"}], ",", "0"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "XDT", "]"}], 
  RowBox[{"MatrixForm", "[", "YDT", "]"}]}]}], "Input",
 CellChangeTimes->{
  3.877957124132818*^9, {3.877957363308284*^9, 3.877957365216037*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{"-", "2"}]},
        {
         RowBox[{"-", 
          FractionBox["10", "7"]}]},
        {
         RowBox[{"-", 
          FractionBox["6", "7"]}]},
        {
         RowBox[{"-", 
          FractionBox["2", "7"]}]},
        {
         FractionBox["2", "7"]},
        {
         FractionBox["6", "7"]},
        {
         FractionBox["10", "7"]},
        {"2"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], " ", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"7.390409451763016`"},
        {"4.170337373233679`"},
        {"2.36066217084043`"},
        {"1.3231974245165972`"},
        {"0.7647844150497595`"},
        {"0.4008086612531134`"},
        {"0.2813783752777568`"},
        {"0.0614447222473062`"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.877957421570462*^9, 3.8779574216069937`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Array", "[", 
     RowBox[{"difftab", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n", "+", "1"}], ",", 
        RowBox[{"n", "+", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"k", "=", "1"}], ",", 
      RowBox[{"k", "\[LessEqual]", "n"}], ",", 
      RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "n"}], ",", 
        RowBox[{"i", "\[GreaterEqual]", 
         RowBox[{"n", "-", "k"}]}], ",", 
        RowBox[{"i", "--"}], ",", 
        RowBox[{
         RowBox[{"difftab", "[", 
          RowBox[{"i", ",", "k"}], "]"}], "=", "\"\<\>\""}]}], "]"}]}], "]"}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "0"}], ",", 
      RowBox[{"i", "\[LessEqual]", "n"}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{
       RowBox[{"difftab", "[", 
        RowBox[{"i", ",", "0"}], "]"}], "=", 
       RowBox[{"ydata", "[", "i", "]"}]}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", " ", "[", 
     RowBox[{
      RowBox[{"k", "=", "1"}], ",", " ", 
      RowBox[{"k", "\[LessEqual]", "n"}], ",", 
      RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "0"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"n", "-", "k"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"difftab", "[", 
          RowBox[{"i", ",", "k"}], "]"}], "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"difftab", "[", 
             RowBox[{
              RowBox[{"i", "+", "1"}], ",", 
              RowBox[{"k", "-", "1"}]}], "]"}], "-", 
            RowBox[{"difftab", "[", 
             RowBox[{"i", ",", 
              RowBox[{"k", "-", "1"}]}], "]"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xdata", "[", 
             RowBox[{"i", "+", "k"}], "]"}], "-", 
            RowBox[{"xdata", "[", "i", "]"}]}], ")"}]}]}]}], "]"}]}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tab1", " ", "=", " ", 
     RowBox[{"Array", "[", 
      RowBox[{"difftab", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"n", "+", "1"}], ",", 
         RowBox[{"n", "+", "1"}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"PaddedForm", "[", 
    RowBox[{
     RowBox[{"TableForm", "[", "tab1", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "5"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8779571348924694`*^9, 3.8779571395353003`*^9}, 
   3.8779574028604403`*^9}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      InterpretationBox["\<\" 7.39041\"\>",
       7.390409451763016,
       AutoDelete->True], 
      InterpretationBox["\<\"-5.63513\"\>",
       -5.635126137426341,
       AutoDelete->True], 
      InterpretationBox["\<\" 2.15967\"\>",
       2.1596702165833865`,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.57005\"\>",
       -0.5700467241741378,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.13483\"\>",
       0.13483260249854484`,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.04602\"\>",
       -0.04602276659961638,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.02644\"\>",
       0.026435517038086234`,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.01714\"\>",
       -0.017141189801588495`,
       AutoDelete->True]},
     {
      InterpretationBox["\<\" 4.17034\"\>",
       4.170337373233679,
       AutoDelete->True], 
      InterpretationBox["\<\"-3.16693\"\>",
       -3.166931604188185,
       AutoDelete->True], 
      InterpretationBox["\<\" 1.18245\"\>",
       1.1824472608562933`,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.26186\"\>",
       -0.2618579184631782,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.00334\"\>",
       0.003338983642498055,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.04461\"\>",
       0.044613291816679286`,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.04213\"\>",
       -0.042129242168267744`,
       AutoDelete->True], "\<\"\"\>"},
     {
      InterpretationBox["\<\" 2.36066\"\>",
       2.36066217084043,
       AutoDelete->True], 
      InterpretationBox["\<\"-1.81556\"\>",
       -1.8155633060667071`,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.73355\"\>",
       0.7335479720622735,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.25423\"\>",
       -0.25422595585175406`,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.13081\"\>",
       0.13080553169015316`,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.09983\"\>",
       -0.09982982418881012,
       AutoDelete->True], "\<\"\"\>", "\<\"\"\>"},
     {
      InterpretationBox["\<\" 1.32320\"\>",
       1.3231974245165972`,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.97722\"\>",
       -0.9772227665669659,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.29773\"\>",
       0.29773204774498085`,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.04476\"\>",
       0.04475811658288177,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.15442\"\>",
       -0.15442253742073292`,
       AutoDelete->True], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {
      InterpretationBox["\<\" 0.76478\"\>",
       0.7647844150497595,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.63696\"\>",
       -0.6369575691441307,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.37446\"\>",
       0.3744602476013496,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.30821\"\>",
       -0.30820768323593634`,
       AutoDelete->True], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {
      InterpretationBox["\<\" 0.40081\"\>",
       0.4008086612531134,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.20900\"\>",
       -0.20900300045687403`,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.15390\"\>",
       -0.1538957808031127,
       AutoDelete->
        True], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {
      InterpretationBox["\<\" 0.28138\"\>",
       0.2813783752777568,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.38488\"\>",
       -0.38488389280328855`,
       AutoDelete->
        True], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>"},
     {
      InterpretationBox["\<\" 0.06144\"\>",
       0.0614447222473062,
       AutoDelete->
        True], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]],
  PaddedForm[#, {6, 5}]& ]], "Output",
 CellChangeTimes->{
  3.877957143193266*^9, {3.8779572260785527`*^9, 3.8779572352037697`*^9}, 
   3.877957406557626*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pln", " ", "=", " ", 
   RowBox[{
    RowBox[{"difftab", "[", 
     RowBox[{"0", ",", "0"}], "]"}], "+", 
    RowBox[{
     RowBox[{"difftab", "[", 
      RowBox[{"0", ",", "1"}], "]"}], "\[Times]", 
     RowBox[{"(", 
      RowBox[{"x", "-", 
       RowBox[{"xdata", "[", "0", "]"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "7"}], ";", 
  RowBox[{"lst", "=", 
   RowBox[{"List", "[", "pln", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"k", "=", "2"}], ",", 
    RowBox[{"k", "\[LessEqual]", "n"}], ",", 
    RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pln", "=", 
      RowBox[{
       RowBox[{"lst", "[", 
        RowBox[{"[", 
         RowBox[{"k", "-", "1"}], "]"}], "]"}], "+", 
       RowBox[{
        RowBox[{"difftab", "[", 
         RowBox[{"0", ",", "k"}], "]"}], "\[Times]", 
        RowBox[{
         UnderoverscriptBox["\[Product]", 
          RowBox[{"i", "=", "0"}], 
          RowBox[{"k", "-", "1"}]], 
         RowBox[{"(", 
          RowBox[{"x", "-", 
           RowBox[{"xdata", "[", "i", "]"}]}], ")"}]}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"lst", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"lst", ",", "pln"}], "]"}]}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nwtn", "[", "x_", "]"}], ":=", 
   RowBox[{"N", "[", 
    RowBox[{"lst", "[", 
     RowBox[{"[", "n", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ColumnForm", "[", "lst", "]"}]}], "Input"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{"7.390409451763016`", "\[VeryThinSpace]", "-", 
      RowBox[{"5.635126137426341`", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}]}]},
    {
     RowBox[{"7.390409451763016`", "\[VeryThinSpace]", "-", 
      RowBox[{"5.635126137426341`", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "+", 
      RowBox[{"2.1596702165833865`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}]}]},
    {
     RowBox[{"7.390409451763016`", "\[VeryThinSpace]", "-", 
      RowBox[{"5.635126137426341`", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "+", 
      RowBox[{"2.1596702165833865`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "-", 
      RowBox[{"0.5700467241741378`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}]}]},
    {
     RowBox[{"7.390409451763016`", "\[VeryThinSpace]", "-", 
      RowBox[{"5.635126137426341`", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "+", 
      RowBox[{"2.1596702165833865`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "-", 
      RowBox[{"0.5700467241741378`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "+", 
      RowBox[{"0.13483260249854484`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["2", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}]}]},
    {
     RowBox[{"7.390409451763016`", "\[VeryThinSpace]", "-", 
      RowBox[{"5.635126137426341`", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "+", 
      RowBox[{"2.1596702165833865`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "-", 
      RowBox[{"0.5700467241741378`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "+", 
      RowBox[{"0.13483260249854484`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["2", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "-", 
      RowBox[{"0.04602276659961638`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["2", "7"]}], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["2", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}]}]},
    {
     RowBox[{"7.390409451763016`", "\[VeryThinSpace]", "-", 
      RowBox[{"5.635126137426341`", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "+", 
      RowBox[{"2.1596702165833865`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "-", 
      RowBox[{"0.5700467241741378`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "+", 
      RowBox[{"0.13483260249854484`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["2", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "-", 
      RowBox[{"0.04602276659961638`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["2", "7"]}], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["2", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "+", 
      RowBox[{"0.026435517038086234`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["6", "7"]}], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["2", "7"]}], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["2", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}]}]},
    {
     RowBox[{"7.390409451763016`", "\[VeryThinSpace]", "-", 
      RowBox[{"5.635126137426341`", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "+", 
      RowBox[{"2.1596702165833865`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "-", 
      RowBox[{"0.5700467241741378`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "+", 
      RowBox[{"0.13483260249854484`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["2", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "-", 
      RowBox[{"0.04602276659961638`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["2", "7"]}], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["2", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "+", 
      RowBox[{"0.026435517038086234`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["6", "7"]}], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["2", "7"]}], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["2", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "-", 
      RowBox[{"0.017141189801588495`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["10", "7"]}], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["6", "7"]}], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["2", "7"]}], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["2", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}]}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  ColumnForm[{
   7.390409451763016 - 5.635126137426341 (2 + $CellContext`x), 
    7.390409451763016 - 5.635126137426341 (2 + $CellContext`x) + 
    2.1596702165833865` (Rational[10, 7] + $CellContext`x) (
      2 + $CellContext`x), 7.390409451763016 - 
    5.635126137426341 (2 + $CellContext`x) + 
    2.1596702165833865` (Rational[10, 7] + $CellContext`x) (
      2 + $CellContext`x) - 
    0.5700467241741378 (Rational[6, 7] + $CellContext`x) (
     Rational[10, 7] + $CellContext`x) (2 + $CellContext`x), 
    7.390409451763016 - 5.635126137426341 (2 + $CellContext`x) + 
    2.1596702165833865` (Rational[10, 7] + $CellContext`x) (
      2 + $CellContext`x) - 
    0.5700467241741378 (Rational[6, 7] + $CellContext`x) (
     Rational[10, 7] + $CellContext`x) (2 + $CellContext`x) + 
    0.13483260249854484` (Rational[2, 7] + $CellContext`x) (
      Rational[6, 7] + $CellContext`x) (Rational[10, 7] + $CellContext`x) (
      2 + $CellContext`x), 7.390409451763016 - 
    5.635126137426341 (2 + $CellContext`x) + 
    2.1596702165833865` (Rational[10, 7] + $CellContext`x) (
      2 + $CellContext`x) - 
    0.5700467241741378 (Rational[6, 7] + $CellContext`x) (
     Rational[10, 7] + $CellContext`x) (2 + $CellContext`x) + 
    0.13483260249854484` (Rational[2, 7] + $CellContext`x) (
      Rational[6, 7] + $CellContext`x) (Rational[10, 7] + $CellContext`x) (
      2 + $CellContext`x) - 
    0.04602276659961638 (Rational[-2, 7] + $CellContext`x) (
     Rational[2, 7] + $CellContext`x) (Rational[6, 7] + $CellContext`x) (
     Rational[10, 7] + $CellContext`x) (2 + $CellContext`x), 
    7.390409451763016 - 5.635126137426341 (2 + $CellContext`x) + 
    2.1596702165833865` (Rational[10, 7] + $CellContext`x) (
      2 + $CellContext`x) - 
    0.5700467241741378 (Rational[6, 7] + $CellContext`x) (
     Rational[10, 7] + $CellContext`x) (2 + $CellContext`x) + 
    0.13483260249854484` (Rational[2, 7] + $CellContext`x) (
      Rational[6, 7] + $CellContext`x) (Rational[10, 7] + $CellContext`x) (
      2 + $CellContext`x) - 
    0.04602276659961638 (Rational[-2, 7] + $CellContext`x) (
     Rational[2, 7] + $CellContext`x) (Rational[6, 7] + $CellContext`x) (
     Rational[10, 7] + $CellContext`x) (2 + $CellContext`x) + 
    0.026435517038086234` (Rational[-6, 7] + $CellContext`x) (
      Rational[-2, 7] + $CellContext`x) (Rational[2, 7] + $CellContext`x) (
      Rational[6, 7] + $CellContext`x) (Rational[10, 7] + $CellContext`x) (
      2 + $CellContext`x), 7.390409451763016 - 
    5.635126137426341 (2 + $CellContext`x) + 
    2.1596702165833865` (Rational[10, 7] + $CellContext`x) (
      2 + $CellContext`x) - 
    0.5700467241741378 (Rational[6, 7] + $CellContext`x) (
     Rational[10, 7] + $CellContext`x) (2 + $CellContext`x) + 
    0.13483260249854484` (Rational[2, 7] + $CellContext`x) (
      Rational[6, 7] + $CellContext`x) (Rational[10, 7] + $CellContext`x) (
      2 + $CellContext`x) - 
    0.04602276659961638 (Rational[-2, 7] + $CellContext`x) (
     Rational[2, 7] + $CellContext`x) (Rational[6, 7] + $CellContext`x) (
     Rational[10, 7] + $CellContext`x) (2 + $CellContext`x) + 
    0.026435517038086234` (Rational[-6, 7] + $CellContext`x) (
      Rational[-2, 7] + $CellContext`x) (Rational[2, 7] + $CellContext`x) (
      Rational[6, 7] + $CellContext`x) (Rational[10, 7] + $CellContext`x) (
      2 + $CellContext`x) - 
    0.017141189801588495` (Rational[-10, 7] + $CellContext`x) (
     Rational[-6, 7] + $CellContext`x) (Rational[-2, 7] + $CellContext`x) (
     Rational[2, 7] + $CellContext`x) (Rational[6, 7] + $CellContext`x) (
     Rational[10, 7] + $CellContext`x) (2 + $CellContext`x)}],
  Editable->False]], "Output",
 CellChangeTimes->{3.877957238584155*^9, 3.877957410188903*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColumnForm", "[", 
  RowBox[{"Collect", "[", 
   RowBox[{"lst", ",", "x"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.87795715518418*^9, 3.8779571561533556`*^9}, 
   3.877957259562193*^9}],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{
      RowBox[{"-", "3.8798428230896658`"}], "-", 
      RowBox[{"5.635126137426341`", " ", "x"}]}]},
    {
     RowBox[{"2.290643510005724`", "\[VeryThinSpace]", "+", 
      RowBox[{"1.769457462288127`", " ", "x"}], "+", 
      RowBox[{"2.1596702165833865`", " ", 
       SuperscriptBox["x", "2"]}]}]},
    {
     RowBox[{"0.8946107161098773`", "\[VeryThinSpace]", "-", 
      RowBox[{"1.5344868165987124`", " ", "x"}], "-", 
      RowBox[{"0.28338717273434666`", " ", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"0.5700467241741378`", " ", 
       SuperscriptBox["x", "3"]}]}]},
    {
     RowBox[{"0.9889542280622123`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.9810048798116826`", " ", "x"}], "+", 
      RowBox[{"0.6631927305207437`", " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"0.04633088724778145`", " ", 
       SuperscriptBox["x", "3"]}], "+", 
      RowBox[{"0.13483260249854484`", " ", 
       SuperscriptBox["x", "4"]}]}]},
    {
     RowBox[{"0.9981549477489331`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.9592298432197781`", " ", "x"}], "+", 
      RowBox[{"0.5665851738101788`", " ", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"0.2166563504643121`", " ", 
       SuperscriptBox["x", "3"]}], "-", 
      RowBox[{"0.06240782578552534`", " ", 
       SuperscriptBox["x", "4"]}], "-", 
      RowBox[{"0.04602276659961638`", " ", 
       SuperscriptBox["x", "5"]}]}]},
    {
     RowBox[{"1.0026848632049745`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.9537939446725288`", " ", "x"}], "+", 
      RowBox[{"0.5065134616236737`", " ", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"0.29064496957965547`", " ", 
       SuperscriptBox["x", "3"]}], "-", 
      RowBox[{"0.008457791013920773`", " ", 
       SuperscriptBox["x", "4"]}], "+", 
      RowBox[{"0.04461329181667928`", " ", 
       SuperscriptBox["x", "5"]}], "+", 
      RowBox[{"0.026435517038086234`", " ", 
       SuperscriptBox["x", "6"]}]}]},
    {
     RowBox[{"1.0068809572328519`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.9516958976585892`", " ", "x"}], "+", 
      RowBox[{"0.4473438735039046`", " ", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"0.32022976363954003`", " ", 
       SuperscriptBox["x", "3"]}], "+", 
      RowBox[{"0.08949186499515635`", " ", 
       SuperscriptBox["x", "4"]}], "+", 
      RowBox[{"0.09358811982121784`", " ", 
       SuperscriptBox["x", "5"]}], "-", 
      RowBox[{"0.007846862565090748`", " ", 
       SuperscriptBox["x", "6"]}], "-", 
      RowBox[{"0.017141189801588495`", " ", 
       SuperscriptBox["x", "7"]}]}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  ColumnForm[{-3.8798428230896658` - 5.635126137426341 $CellContext`x, 
    2.290643510005724 + 1.769457462288127 $CellContext`x + 
    2.1596702165833865` $CellContext`x^2, 0.8946107161098773 - 
    1.5344868165987124` $CellContext`x - 
    0.28338717273434666` $CellContext`x^2 - 
    0.5700467241741378 $CellContext`x^3, 0.9889542280622123 - 
    0.9810048798116826 $CellContext`x + 0.6631927305207437 $CellContext`x^2 + 
    0.04633088724778145 $CellContext`x^3 + 
    0.13483260249854484` $CellContext`x^4, 0.9981549477489331 - 
    0.9592298432197781 $CellContext`x + 0.5665851738101788 $CellContext`x^2 - 
    0.2166563504643121 $CellContext`x^3 - 
    0.06240782578552534 $CellContext`x^4 - 
    0.04602276659961638 $CellContext`x^5, 1.0026848632049745` - 
    0.9537939446725288 $CellContext`x + 0.5065134616236737 $CellContext`x^2 - 
    0.29064496957965547` $CellContext`x^3 - 
    0.008457791013920773 $CellContext`x^4 + 
    0.04461329181667928 $CellContext`x^5 + 
    0.026435517038086234` $CellContext`x^6, 1.0068809572328519` - 
    0.9516958976585892 $CellContext`x + 0.4473438735039046 $CellContext`x^2 - 
    0.32022976363954003` $CellContext`x^3 + 
    0.08949186499515635 $CellContext`x^4 + 
    0.09358811982121784 $CellContext`x^5 - 
    0.007846862565090748 $CellContext`x^6 - 
    0.017141189801588495` $CellContext`x^7}],
  Editable->False]], "Output",
 CellChangeTimes->{3.8779572612100325`*^9, 3.8779574147210474`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"data", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "7.390409451763016`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["10", "7"]}], ",", "4.170337373233679`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["6", "7"]}], ",", "2.36066217084043`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["2", "7"]}], ",", "1.3231974245165972`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["2", "7"], ",", "0.7647844150497595`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["6", "7"], ",", "0.4008086612531134`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["10", "7"], ",", "0.2813783752777568`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "0.0614447222473062`"}], "}"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inpln", ":=", 
   RowBox[{"InterpolatingPolynomial", "[", 
    RowBox[{"data", ",", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Collect", "[", 
  RowBox[{"inpln", ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8779572806939487`*^9, 3.8779573069919567`*^9}, {
  3.8779574365068216`*^9, 3.8779574714590425`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "7.390409451763016`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["10", "7"]}], ",", "4.170337373233679`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["6", "7"]}], ",", "2.36066217084043`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["2", "7"]}], ",", "1.3231974245165972`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["2", "7"], ",", "0.7647844150497595`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["6", "7"], ",", "0.4008086612531134`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["10", "7"], ",", "0.2813783752777568`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0.0614447222473062`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.877957482254128*^9}],

Cell[BoxData[
 RowBox[{"1.00688095723285`", "\[VeryThinSpace]", "-", 
  RowBox[{"0.9516958976585888`", " ", "x"}], "+", 
  RowBox[{"0.4473438735039045`", " ", 
   SuperscriptBox["x", "2"]}], "-", 
  RowBox[{"0.32022976363954003`", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"0.08949186499515661`", " ", 
   SuperscriptBox["x", "4"]}], "+", 
  RowBox[{"0.09358811982121776`", " ", 
   SuperscriptBox["x", "5"]}], "-", 
  RowBox[{"0.007846862565090814`", " ", 
   SuperscriptBox["x", "6"]}], "-", 
  RowBox[{"0.017141189801588477`", " ", 
   SuperscriptBox["x", "7"]}]}]], "Output",
 CellChangeTimes->{3.8779574822572517`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"-", "x"}], "]"}], ",", 
     RowBox[{"nwtn", "[", "x_", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"a", "-", "h"}], ",", 
     RowBox[{"b", "+", "h"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.877957419414835*^9, 3.8779574319919944`*^9}, {
  3.877957480383151*^9, 3.8779575245362544`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAADAR8FkmSBMD3vD/UQysqQMmfqyAO
jwTAEOLo3rQgKkCGO9sq04sEwOWqIiwqFipAAHM6P12FBMDLzWiHIQEqQPXh
+GdxeATA7KhKEUPXKUDev3W5mV4EwGjmAfVPhClAsHtvXOoqBMACDPk0heEo
QFPzYqKLwwPAzoDfjgGoJ0DS8cBgauMCwMcP4nQ5NCVAX1hHaiMSAsBYDIBN
7yQjQAi0ZWH3RAHAadjDZL5RIUDpHvuKZ2YAwLCcRxtZEh9AsONx/2Mt/78x
Jw/cLBMcQP2n200xa/2/bDJ0/xUnGUCCVnV3NLH7v1s03B5wlBZAJdVfN+wU
+r/cjm/B7moUQDZyOFzcVfi/XF8eHndOEkBk32EXgbT2vxjn6HR3iBBAyza7
rVsb9b/z5kCyPOwNQKCsAqluX/O/qIsb7mzZCkCS8po6NsHxv1iOhSdSRAhA
81YhMTYA8L+mCRszVL8FQBpLrwXYjuy/5Mb5YFCHA0CIiL3VrFjpvyZpGGft
qQFA0wKob/Lc5b/T/bJpFq//P1kdNDahnOK/WTvWH3mf/D936TiNgS3evzYu
8iCYo/k/HUHJGphC179YnABEJQP3PzfZnAGBztC/cJpKohPO9D8Y1lH4lp7D
v+92l6l+pvI/sOrBf0I3qr+Xr1ZiMNfwP/Y7xnsbBak/CDrY+k157j8ypWI2
mybEP3I9uAS9Vus/P52mbSWP0D/1WRQIcLToPytuY6wbltc/UcW/4sci5j82
lmB+OnzePyQ8KRKz3+M/5T6Ne8N14j8aqeGMCvnhP9L1De748uU/YHHmj8Ad
4D+FDO0zxTTpPzApGyH6HN0/x05swyVm7D/ZpCu2O1naPyxUD4kV3e8/RNoy
zRSl1z+sXAgRTozxPwbiy6F9X9U/0/Ca+NhM8z+jDEKD9ifTP9203Emv7/Q/
l482KUtL0T+vju6/T4r2P+8J6h70Sc8/EkoS0bdH+D8igCiqnxDMP1g15Utr
5/k/vy0ngz1byT8vAsph5qn7P1BaU+Mvt8Y/zuR+nCtk/T/N19sp/2PEP1D3
4kC8AP8/pqVtntRvwj+ydSxACmAAQMYZ9XKBh8A/rQe/FNwwAUD51R9dotq9
P4ykufuS/QFAbTXvWKEDuz80Mj2wrdsCQJRZxSPfPLg/zVeYGe6qA0A6Ilfm
rue1P37mi4WLrgNA36GLNsvdtT8udX/xKLIDQG+Kuf3r07U/kJJmyWO5A0Ae
b/LoOsC1P1TNNHnZxwNA2VOh+g2ZtT/cQtHYxOQDQBm5MEyHS7U/7C0KmJse
BEAD6+fguLO0P528/QM5IgRAp0TqOWCqtD9OS/Fv1iUEQLEIIcsLobQ/sGjY
RxEtBECK9o2Ob460P3SjpveGOwRANItEZGlptD/8GENXclgEQAXC6qQkILQ/
rac2ww9cBEAWWnmeDhe0P142Ki+tXwRAcuInsvwNtD/AUxEH6GYEQJI2fSDl
+7M/hI7ftl11BEATy2Ll5tezPzUd0yL7eARAouREfPHOsz/mq8aOmHwEQHB7
jR4AxrM/SMmtZtODBEBzJwV+KbSzP/lXodJwhwRAMs+PN0Srsz+q5pQ+DosE
QIsYOPViorM/W3WIqquOBEBQ2i21hZmzPwwEfBZJkgRA4ryhdayQsz+YvU1t

     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
if///xaWefywI4cuQfwP196TUQ==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->NCache[{{
      Rational[-18, 7], 
      Rational[18, 7]}, {-4.503854294269933, 
     15.72195543735527}}, {{-2.5714285714285716`, 
    2.5714285714285716`}, {-4.503854294269933, 15.72195543735527}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.877957490187439*^9, 3.877957526037119*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"-", "x"}], "]"}], ",", 
     RowBox[{"nwtn", "[", "x_", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"a", "-", 
      RowBox[{"2", "h"}]}], ",", 
     RowBox[{"b", "+", 
      RowBox[{"2", "h"}]}]}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwBcQSO+yFib1JlAgAAAEYAAAACAAAAIToaYdefB8BLcehgBjUzQOR8lsvz
FQfAChZ0BpzqMUDK3QFJKxYGwGq687MxoC9AffgmPmcbBcBwPid1JvsrQAK0
pBtiCwTArDDU1TOAKEDRtYw4hA0DwMMpMcf3pCVAcljNPWX6AcAqpN0Ccuwi
QOC0x7pK7ADAEUosMN6VIEAyr1juruD/v6XkvIzDVB1ARzbTN0a+/b9AtTEJ
B6sZQPJJIgAswPu/9yZ8OZmpFkA30eS3Gsz5vyTbv2zUDhRAIJpYQIet978H
RrVCxZERQJ7voEdCs/W/P2o6x6YND0DAhpofe47zv+Sp0A7VKAtAfJEH57xz
8b8t/CoL7M8HQJtRklqa+u6/VaK3KTUQBUCFA3iItrjqv8q6n1J8cAJAms4G
tG+/5r8ZSfr7O0kAQPYc+IAkceK/ojtFq614/D8MpaBZ1m3cvy4GfH6u8vg/
gkKjrJ2K1L/ldTmxIg72Pw3N1YS4+se/EPbtVOxL8z+E8xJOUwWwv5Q8HwyG
CPE/3/Kc7HaUrj9GRTK6CyXuPxXmzZf2oMg/LKsLpiBm6j9jFei+LT3UP7NX
eqwOU+c/LTEk7+jT3D81BbT+LmXkP0c/yTBAoeI/q8X9bK7g4T/NTFfs7o/m
P2FXZIront8/DNeCBqLT6j8VfCMv8KzbPyBIBSO4zu4/QbS/+i9w2D8AaVAw
3lrxP+EdnfTtodU/TOxsfuJ48z8Eeb2ChfPSPwPjtE2YcvU/WbmISAjA0D8W
mEtM0Jb3Pz+ctgK5Tc0/lMANzLmW+T/jMomcY9zJP3d1XFyajPs/bvrFA+7g
xj+36Pkb/az9P63Lvh4ECMQ/Yc/CXBGp/z9BX0jZyrHBPzQ6bebT5wBA666l
2Bbwvj/qUr+mGvYBQMdKDqbmHLs/ViWnJzryAkCiz/oX7vi3P/BWNsCaAwRA
0W9yExD6tD8/QlsZ1AIFQBgdbhjchLI/wXPG+gj9BUApE8xhpWOwP3EE2fN+
DAdAYJdUcJi1rD/WToGtzQkIQFeRKCSHXqk/PP2qvzgOCEAI4200iFCpP6Or
1NGjEghAPJda/ZBCqT9wCCj2eRsIQOaJIqi5Jqk/C8LOPiYtCECDnLrqZu+o
P0A1HNB+UAhAfNcfdi2CqD+rG7fyL5cIQA67Bq9Nrac/EsrgBJubCEDS+jjA
PaCnP3h4ChcGoAhAFMg3BjWTpz9G1V073KgIQMI9tiA5eac/4I4EhIi6CEAo
iO8gl0WnPxYCUhXh3QhACes836bfpj98sHsnTOIIQAnV6WQI06Y/416lObfm
CED74cvgcMamP7C7+F2N7whA/qPUq1atpj9LdZ+mOQEJQKrp8yN1e6Y/siPJ
uKQFCUA8JzbwDW+mPxjS8soPCglAE9wulK1ipj/mLkbv5RIJQMYsLFQBSqY/
TN1vAVEXCUABPapotT2mP7OLmRO8GwlA4qrRRXAxpj8aOsMlJyAJQCdf5Ocx
JaY/gOjsN5IkCUAeUyZL+himP71nEWw=
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVlnk8VF8bwMcsKCokEbKGLCGiRZ6TNhVCiighUUopRSEUFVlSIklSlh+l
oiRK7s2WhMy1FkklZF8HY/Ce96/7+X6efTnnHgWXM9bH6DQaLZ+PRvv/V4O3
KHX6Fovcc7bHiX+dHvpa1EWXDWeRju8SwnOl9JDf4g0lXpdYpOyLTd2MtrWo
LvcHkrRnkRb8kyr3j65Fl6dUjN2lWeTzuwnnJQN10amhpNWqy1mktOq3GJEz
usi+S2xZtxiLTJbleUs56SKDhrk+t4UsMvo8a9thE100+LLpvts0k1x8/Dn9
mYAucnS/PnGsmUneP+g9aBGng1DT32zXWCZ5/vo6Bd+L2mhNjUOC8i0m+YhT
wdjnqI1kytghnTeZpND6ryyzbdpoKveDvetVJll+mv7nrog2yomKE3Q9yyTb
Cxe5Bj5dgxS2b3c9updJbihQmIr9o4XoeWnSLkJMcmrw2dm+E5pogY1kmocA
k6z8cOFTjo0mEhmP0PRmMEkv9solkaCJ5PS9N4fOMMg9fXTx0GWayChvy5GM
PgapfjbCzrdEA/nktT/p/cIg/31/Y3hAXgP15kmqe0cyyBwea+H+vtVoxCby
lX8YgzS/oPn8WctqNDU+vzE0lEEuTX7ksaxiNRJY170nLoBBjr3oa1d4vBop
v3nj+fYUgyzeSHOQsVuNHN9Y586YMcjHZZ+srn1WQ+w3ketDFzFI35j28oRC
VXSo4HGR4QIGOfWPcvjynyrqepeP+pgMUsSZ5y4ar4p4RIepNY9OWv66dLX5
nCpSqdI/KN9HJ/fnXlbcpaWK/NrbLhVV0slWATj/PF0FKQpovR8PoZORYV1J
31NXoewFJpAZRCfNLEUk995dhQyFbUsd/OlkQsuQfkPoKmQmeuVLyTk6CRtD
55e4rUI+0o2tMc50kuExHb1n9SpUpX2Zpwl0Uvnfi/vkK2V0zq5m8zEuH1mY
ML1gOVsJdW75WK/J4SMl6/L5C0qV0AGNNyfGR/jI3cIlT93yldCGuaS4kH98
5F/GsdT+B0qIlnZq4HELH5mrHH7hvrsSih4Setiez0eavr7MdudTQlnXd/Ns
vfnIzIklf1yNFVFH3qd3u/tpZHe1w5kb3+XRyZ2FA/Y9NHLCQSKvsk4ecb49
lT/ZSSMDqbgYsU/ySHg+6npEG420QFVdxGt5ZLjLxrq6mkbu9Bj+ExQlj6J/
dPwzf04jQ8p7VSJN5JERP1fS6jSNfNAg+Ur+mBxa+9Ju8EXHPBF482xfkKUs
srgfuGdVyzzh6N/r4wKyyCMkLfPB13nCDYyofWtkUartsEtY8Tzhc8Ev00VY
FonTwpqdk+aJEPUHWWs+y6BJy7ekuN08Ef2xh3VmuwwqGl0W6/d1jrAqufRw
sak02mlQb7ijeJYgVqh8Yp6TQvHnxmvN82eJ+Zq737muUqjzxTK3/S9mieZr
VUpcWyl0VdXurmvyLLFJ5P5qcWMpVCT5Y/hq4CwhGhVVlrdQCq2d6coijGeJ
QYtnF5PTJZEMyZXeQPAI2x9z45W/lqPRXYo0TXKGKGI4M6zPSiBDdufbFdXT
RKHY74GXvUuRfKIduvF8kuAcPvuq/7ooSh5K2WnyeoK44/5JiZJegsjriXL+
0WOEi+kGjRO7hVDAbYHuIu8Rwt/65qToqAB6YHXHPpE7SHTnJMU5q7LQNcbF
sPyCXiKxokJWw4eOEmv5884QXcTJ7Xo3bIGGODJTwcpnfxPCnvkOhAUPhNNT
DjZ5thELl4i/7i6dgqsmqdkPbzYQ550dFizonYBFNY2hBdxPhL/Er4skjEHo
mJjFPlYOoesmdyR1+Qj8HE3q97n7ArzsVVzBexCWddXc46RUwsa1aW/OU71w
dFlPsdbmBujRjo4UL+oGLV3loZ76NoCjplKlqZ2wEz7roMe/4Q5hYVJc/wtq
zGz7B291gVri08LWlnbgcImC2ZQuqJQffSpe3g4rs9SuCb/qAp0btfG2ue3g
xeLKqjd0geaZ0YiZ8HYQL07ae0yyG+Sn7mt/2NQOh7R/v2pN6YZ+s2V5uo9/
QL+o56XK3B44vsPm27rzbSDcfJX/SX0veE2p/ru5+TvUdYw7Rv/phbKMwsBy
re9wt9ftrd9YLxzyrkgXWvkdZOd2H9+3tA/aboY2v5v7BmtWLa1i7uuDSKUq
8QzyG1h5p0a5U30QtjXE/t2ObxC/pExci90PTmL+CVqHWsBeysBT6lc/dFr5
nRgxb4GVSpnlrJF+yFy3e1cJtMB/BpE+7SIDIF8y5Rqh1AIFh21ablkOQFnV
5oNFfc3Q+qzzwejXAQiNW38rNbAZ5E1ZSgW1g7AtS5bb8qIJTPNn9GzaB6HT
75bt3SdNcEZ5dNvwwCDE7N6YcTi+CYppP93UFg2B5Q65LSsCm+BQYcHThD1D
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
02rupquQw3ZLT5bG8yPyieOg/UsV8n+IW7Ts
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->NCache[{{
      Rational[-22, 7], 
      Rational[22, 7]}, {-11.342490624477591`, 
     19.207128578900022`}}, {{-3.142857142857143, 
    3.142857142857143}, {-11.342490624477591`, 19.207128578900022`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.877957535700612*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Pln", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{
   RowBox[{"P", "[", 
    RowBox[{"n", "+", "1"}], "]"}], "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "n"}], ",", 
   RowBox[{"i", "\[GreaterEqual]", "0"}], ",", 
   RowBox[{"i", "--"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"P", "[", "i", "]"}], "=", 
     RowBox[{
      RowBox[{"difftab", "[", 
       RowBox[{"0", ",", "i"}], "]"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", 
         RowBox[{"xdata", "[", "i", "]"}]}], ")"}], 
       RowBox[{"P", "[", 
        RowBox[{"i", "+", "1"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Pln", "=", 
     RowBox[{"Append", "[", 
      RowBox[{"Pln", ",", 
       RowBox[{"P", "[", "i", "]"}]}], "]"}]}], ";"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ColumnForm", "[", "Pln", "]"}]}], "Input"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{"-", "0.017141189801588495`"}]},
    {
     RowBox[{"0.026435517038086234`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.017141189801588495`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["10", "7"]}], "+", "x"}], ")"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", "0.04602276659961638`"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.026435517038086234`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.017141189801588495`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["10", "7"]}], "+", "x"}], ")"}]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["6", "7"]}], "+", "x"}], ")"}]}]}]},
    {
     RowBox[{"0.13483260249854484`", "\[VeryThinSpace]", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.04602276659961638`"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.026435517038086234`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.017141189801588495`", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                FractionBox["10", "7"]}], "+", "x"}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["6", "7"]}], "+", "x"}], ")"}]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["2", "7"]}], "+", "x"}], ")"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", "0.5700467241741378`"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.13483260249854484`", "\[VeryThinSpace]", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.04602276659961638`"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"0.026435517038086234`", "\[VeryThinSpace]", "-", 
               RowBox[{"0.017141189801588495`", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox["10", "7"]}], "+", "x"}], ")"}]}]}], ")"}], 
             " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                FractionBox["6", "7"]}], "+", "x"}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["2", "7"]}], "+", "x"}], ")"}]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["2", "7"], "+", "x"}], ")"}]}]}]},
    {
     RowBox[{"2.1596702165833865`", "\[VeryThinSpace]", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.5700467241741378`"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.13483260249854484`", "\[VeryThinSpace]", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "0.04602276659961638`"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"0.026435517038086234`", "\[VeryThinSpace]", "-", 
                  RowBox[{"0.017141189801588495`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["10", "7"]}], "+", "x"}], ")"}]}]}], ")"}], 
                " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox["6", "7"]}], "+", "x"}], ")"}]}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                FractionBox["2", "7"]}], "+", "x"}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["2", "7"], "+", "x"}], ")"}]}]}], ")"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", "5.635126137426341`"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2.1596702165833865`", "\[VeryThinSpace]", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.5700467241741378`"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"0.13483260249854484`", "\[VeryThinSpace]", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "0.04602276659961638`"}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"0.026435517038086234`", "\[VeryThinSpace]", "-", 
                    RowBox[{"0.017141189801588495`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["10", "7"]}], "+", "x"}], ")"}]}]}], ")"}], 
                   " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["6", "7"]}], "+", "x"}], ")"}]}]}], ")"}], 
                " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox["2", "7"]}], "+", "x"}], ")"}]}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["2", "7"], "+", "x"}], ")"}]}]}], ")"}]}]}], 
        ")"}]}]}]},
    {
     RowBox[{"7.390409451763016`", "\[VeryThinSpace]", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "5.635126137426341`"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"2.1596702165833865`", "\[VeryThinSpace]", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "0.5700467241741378`"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"0.13483260249854484`", "\[VeryThinSpace]", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.04602276659961638`"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.026435517038086234`", "\[VeryThinSpace]", "-", 
                    RowBox[{"0.017141189801588495`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["10", "7"]}], "+", "x"}], ")"}]}]}], ")"}], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["6", "7"]}], "+", "x"}], ")"}]}]}], ")"}], 
                   " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["2", "7"]}], "+", "x"}], ")"}]}]}], ")"}], 
                " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox["2", "7"], "+", "x"}], ")"}]}]}], ")"}]}]}], 
           ")"}]}]}], ")"}]}]}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  ColumnForm[{-0.017141189801588495`, 0.026435517038086234` - 
    0.017141189801588495` (
     Rational[-10, 7] + $CellContext`x), -0.04602276659961638 + (
      0.026435517038086234` - 
      0.017141189801588495` (Rational[-10, 7] + $CellContext`x)) (
      Rational[-6, 7] + $CellContext`x), 
    0.13483260249854484` + (-0.04602276659961638 + (0.026435517038086234` - 
        0.017141189801588495` (Rational[-10, 7] + $CellContext`x)) (
        Rational[-6, 7] + $CellContext`x)) (
      Rational[-2, 7] + $CellContext`x), -0.5700467241741378 + (
      0.13483260249854484` + (-0.04602276659961638 + (0.026435517038086234` - 
          0.017141189801588495` (Rational[-10, 7] + $CellContext`x)) (
          Rational[-6, 7] + $CellContext`x)) (
        Rational[-2, 7] + $CellContext`x)) (Rational[2, 7] + $CellContext`x), 
    2.1596702165833865` + (
      Rational[6, 7] + $CellContext`x) (-0.5700467241741378 + (
        0.13483260249854484` + (-0.04602276659961638 + (0.026435517038086234` - 
            0.017141189801588495` (Rational[-10, 7] + $CellContext`x)) (
            Rational[-6, 7] + $CellContext`x)) (
          Rational[-2, 7] + $CellContext`x)) (
        Rational[2, 7] + $CellContext`x)), -5.635126137426341 + (
      Rational[10, 7] + $CellContext`x) (
      2.1596702165833865` + (
        Rational[
         6, 7] + $CellContext`x) (-0.5700467241741378 + (
          0.13483260249854484` + (-0.04602276659961638 + (
              0.026435517038086234` - 
              0.017141189801588495` (Rational[-10, 7] + $CellContext`x)) (
              Rational[-6, 7] + $CellContext`x)) (
            Rational[-2, 7] + $CellContext`x)) (
          Rational[2, 7] + $CellContext`x))), 
    7.390409451763016 + (
      2 + $CellContext`x) (-5.635126137426341 + (
        Rational[10, 7] + $CellContext`x) (
        2.1596702165833865` + (
          Rational[
           6, 7] + $CellContext`x) (-0.5700467241741378 + (
            0.13483260249854484` + (-0.04602276659961638 + (
                0.026435517038086234` - 
                0.017141189801588495` (Rational[-10, 7] + $CellContext`x)) (
                Rational[-6, 7] + $CellContext`x)) (
              Rational[-2, 7] + $CellContext`x)) (
            Rational[2, 7] + $CellContext`x))))}],
  Editable->False]], "Output",
 CellChangeTimes->{3.877957543552608*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"P", "[", "0", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"7.390409451763016`", "\[VeryThinSpace]", "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", "+", "x"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "5.635126137426341`"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"2.1596702165833865`", "\[VeryThinSpace]", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "0.5700467241741378`"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"0.13483260249854484`", "\[VeryThinSpace]", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "0.04602276659961638`"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"0.026435517038086234`", "\[VeryThinSpace]", "-", 
                    RowBox[{"0.017141189801588495`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["10", "7"]}], "+", "x"}], ")"}]}]}], ")"}], 
                  " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox["6", "7"]}], "+", "x"}], ")"}]}]}], ")"}], 
               " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox["2", "7"]}], "+", "x"}], ")"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox["2", "7"], "+", "x"}], ")"}]}]}], ")"}]}]}], 
       ")"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.877957550826398*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"nwtn", "[", "x_", "]"}], ":=", 
   RowBox[{"P", "[", "0", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"m", "=", "70"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"XDAT", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"YDAT", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"nwtnDAT", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"MR", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ",", 
    RowBox[{"i", "\[LessEqual]", "m"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"xdatas", "[", "i", "]"}], "=", 
      RowBox[{"a", "+", 
       RowBox[{"i", "\[Times]", 
        FractionBox["h", "10"]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ydatas", "[", "i", "]"}], "=", 
      RowBox[{"N", "[", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         RowBox[{"xdatas", "[", "i", "]"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      RowBox[{"xdatas", "[", "i", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nwtndatas", "[", "i", "]"}], "=", 
      RowBox[{"nwtn", "[", "i", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"mr", "[", "i", "]"}], "=", 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"ydatas", "[", "i", "]"}], "-", 
        RowBox[{"nwtndatas", "[", "i", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"XDAT", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"XDAT", ",", 
        RowBox[{"xdatas", "[", "i", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"YDAT", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"YDAT", ",", " ", 
        RowBox[{"ydatas", "[", "i", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nwtnDAT", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"nwtnDAT", ",", 
        RowBox[{"nwtndatas", "[", "i", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"MR", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"MR", ",", 
        RowBox[{"mr", "[", "i", "]"}]}], "]"}]}], ";"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", 
   RowBox[{"N", "[", "XDAT", "]"}], "]"}], 
  RowBox[{"MatrixForm", "[", 
   RowBox[{"N", "[", "YDAT", "]"}], "]"}], 
  RowBox[{"MatrixForm", "[", 
   RowBox[{"N", "[", "nwtnDAT", "]"}], "]"}], 
  RowBox[{"MatrixForm", "[", "MR", "]"}]}]}], "Input"],

Cell[BoxData["70"], "Output",
 CellChangeTimes->{3.8779578434808483`*^9}],

Cell[BoxData[
 RowBox[{
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        RowBox[{"-", "2.`"}]},
       {
        RowBox[{"-", "1.9428571428571428`"}]},
       {
        RowBox[{"-", "1.8857142857142857`"}]},
       {
        RowBox[{"-", "1.8285714285714285`"}]},
       {
        RowBox[{"-", "1.7714285714285714`"}]},
       {
        RowBox[{"-", "1.7142857142857142`"}]},
       {
        RowBox[{"-", "1.6571428571428573`"}]},
       {
        RowBox[{"-", "1.6`"}]},
       {
        RowBox[{"-", "1.542857142857143`"}]},
       {
        RowBox[{"-", "1.4857142857142858`"}]},
       {
        RowBox[{"-", "1.4285714285714286`"}]},
       {
        RowBox[{"-", "1.3714285714285714`"}]},
       {
        RowBox[{"-", "1.3142857142857143`"}]},
       {
        RowBox[{"-", "1.2571428571428571`"}]},
       {
        RowBox[{"-", "1.2`"}]},
       {
        RowBox[{"-", "1.1428571428571428`"}]},
       {
        RowBox[{"-", "1.0857142857142856`"}]},
       {
        RowBox[{"-", "1.0285714285714285`"}]},
       {
        RowBox[{"-", "0.9714285714285714`"}]},
       {
        RowBox[{"-", "0.9142857142857143`"}]},
       {
        RowBox[{"-", "0.8571428571428571`"}]},
       {
        RowBox[{"-", "0.8`"}]},
       {
        RowBox[{"-", "0.7428571428571429`"}]},
       {
        RowBox[{"-", "0.6857142857142857`"}]},
       {
        RowBox[{"-", "0.6285714285714286`"}]},
       {
        RowBox[{"-", "0.5714285714285714`"}]},
       {
        RowBox[{"-", "0.5142857142857142`"}]},
       {
        RowBox[{"-", "0.45714285714285713`"}]},
       {
        RowBox[{"-", "0.4`"}]},
       {
        RowBox[{"-", "0.34285714285714286`"}]},
       {
        RowBox[{"-", "0.2857142857142857`"}]},
       {
        RowBox[{"-", "0.22857142857142856`"}]},
       {
        RowBox[{"-", "0.17142857142857143`"}]},
       {
        RowBox[{"-", "0.11428571428571428`"}]},
       {
        RowBox[{"-", "0.05714285714285714`"}]},
       {"0.`"},
       {"0.05714285714285714`"},
       {"0.11428571428571428`"},
       {"0.17142857142857143`"},
       {"0.22857142857142856`"},
       {"0.2857142857142857`"},
       {"0.34285714285714286`"},
       {"0.4`"},
       {"0.45714285714285713`"},
       {"0.5142857142857142`"},
       {"0.5714285714285714`"},
       {"0.6285714285714286`"},
       {"0.6857142857142857`"},
       {"0.7428571428571429`"},
       {"0.8`"},
       {"0.8571428571428571`"},
       {"0.9142857142857143`"},
       {"0.9714285714285714`"},
       {"1.0285714285714285`"},
       {"1.0857142857142856`"},
       {"1.1428571428571428`"},
       {"1.2`"},
       {"1.2571428571428571`"},
       {"1.3142857142857143`"},
       {"1.3714285714285714`"},
       {"1.4285714285714286`"},
       {"1.4857142857142858`"},
       {"1.542857142857143`"},
       {"1.6`"},
       {"1.6571428571428573`"},
       {"1.7142857142857142`"},
       {"1.7714285714285714`"},
       {"1.8285714285714285`"},
       {"1.8857142857142857`"},
       {"1.9428571428571428`"},
       {"2.`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], " ", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {"0.0013533528323659283`"},
       {"0.032256552940421734`"},
       {"0.05094537806552424`"},
       {"0.05853053638946104`"},
       {"0.05817941811267868`"},
       {"0.052483055082122476`"},
       {"0.043524699780159715`"},
       {"0.03294347783489293`"},
       {"0.021993274546054487`"},
       {"0.011597016552520323`"},
       {"0.002396510364417459`"},
       {"0.005201999953584391`"},
       {"0.010986393128796568`"},
       {"0.014901185735029188`"},
       {"0.017013838158429273`"},
       {"0.017484687229402773`"},
       {"0.016540340851855184`"},
       {"0.0144503695608309`"},
       {"0.011507129561866059`"},
       {"0.008008551448418277`"},
       {"0.004243728456769791`"},
       {"0.00048113779941116874`"},
       {"0.0030406716826831826`"},
       {"0.006120092592465154`"},
       {"0.008597340085628735`"},
       {"0.010357368580842907`"},
       {"0.011330991875653229`"},
       {"0.011494374698188148`"},
       {"0.01086706393821757`"},
       {"0.009508728002636913`"},
       {"0.0075147729307525335`"},
       {"0.0050110040845809944`"},
       {"0.00214750239904804`"},
       {"0.0009081156625581066`"},
       {"0.003977885151182026`"},
       {"0.006880957232850982`"},
       {"0.009441171772918366`"},
       {"0.011494568201265154`"},
       {"0.01289666483550378`"},
       {"0.013529336725426555`"},
       {"0.013307121974474478`"},
       {"0.012182786392451739`"},
       {"0.010151976237877003`"},
       {"0.007256788717754925`"},
       {"0.00358808982708414`"},
       {"0.0007135909703810395`"},
       {"0.005458759794912171`"},
       {"0.010411421783910746`"},
       {"0.015293479620246297`"},
       {"0.0197912379348959`"},
       {"0.0235641844238359`"},
       {"0.026256218576203916`"},
       {"0.027509498965172796`"},
       {"0.02698108010386846`"},
       {"0.024362509917187303`"},
       {"0.019402558925730284`"},
       {"0.011933252281440987`"},
       {"0.0018993758349235557`"},
       {"0.010608372546885847`"},
       {"0.02531641515793248`"},
       {"0.04172733883598076`"},
       {"0.05907478022976517`"},
       {"0.07627398059835588`"},
       {"0.09186783876164148`"},
       {"0.10396829079393041`"},
       {"0.11019284502640192`"},
       {"0.10759610090038546`"},
       {"0.09259608018992618`"},
       {"0.06089519909084806`"},
       {"0.007395709652683324`"},
       {"0.07389056098930913`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], " ", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {"7.38905609893065`"},
       {"6.978661546402722`"},
       {"6.591060661494798`"},
       {"6.2249874642362135`"},
       {"5.879246288276417`"},
       {"5.552707875605837`"},
       {"5.244305688179307`"},
       {"4.953032424395115`"},
       {"4.677936729051819`"},
       {"4.418120086036885`"},
       {"4.172733883598096`"},
       {"3.9409766426123096`"},
       {"3.7220913987985615`"},
       {"3.5153632303253177`"},
       {"3.3201169227365472`"},
       {"3.1357147635698226`"},
       {"2.961554459463227`"},
       {"2.7970671689479474`"},
       {"2.6417156445012626`"},
       {"2.494992477791509`"},
       {"2.3564184423836605`"},
       {"2.225540928492468`"},
       {"2.1019324646707576`"},
       {"1.9851893216044434`"},
       {"1.8749301934539637`"},
       {"1.770794952435155`"},
       {"1.672443472571778`"},
       {"1.5795545187778448`"},
       {"1.4918246976412703`"},
       {"1.4089674664819067`"},
       {"1.33071219744735`"},
       {"1.2568032935896711`"},
       {"1.1869993540360109`"},
       {"1.1210723855263187`"},
       {"1.0588070577429671`"},
       {"1.`"},
       {"0.9444591369948698`"},
       {"0.8920030614530944`"},
       {"0.8424604416167714`"},
       {"0.7956694616416928`"},
       {"0.751477293075286`"},
       {"0.7097395956891255`"},
       {"0.6703200460356393`"},
       {"0.6330898921891813`"},
       {"0.5979275332171694`"},
       {"0.5647181220077593`"},
       {"0.5333531901568119`"},
       {"0.5037302936889633`"},
       {"0.4757526784556506`"},
       {"0.44932896411722156`"},
       {"0.42437284567695`"},
       {"0.40080281159210923`"},
       {"0.37854187754140095`"},
       {"0.35751733497916927`"},
       {"0.337660513655132`"},
       {"0.31890655732397044`"},
       {"0.30119421191220214`"},
       {"0.28446562545044835`"},
       {"0.26866615911763636`"},
       {"0.25374420877996917`"},
       {"0.2396510364417758`"},
       {"0.22634061105772565`"},
       {"0.21376945818647108`"},
       {"0.20189651799465538`"},
       {"0.19068301114750144`"},
       {"0.1800923121479524`"},
       {"0.17008982971066583`"},
       {"0.16064289378013982`"},
       {"0.15172064882394942`"},
       {"0.14329395305256898`"},
       {"0.1353352832366127`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], " ", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {"7.390409451763016`"},
       {"6.9464049934623`"},
       {"6.540115283429274`"},
       {"6.1664569278467525`"},
       {"5.8210668701637385`"},
       {"5.500224820523714`"},
       {"5.200780988399147`"},
       {"4.920088946560222`"},
       {"4.655943454505764`"},
       {"4.406523069484365`"},
       {"4.170337373233679`"},
       {"3.946178642565894`"},
       {"3.733077791927358`"},
       {"3.530264416060347`"},
       {"3.3371307608949765`"},
       {"3.1531994507992254`"},
       {"2.9780948003150822`"},
       {"2.8115175385087783`"},
       {"2.6532227740631287`"},
       {"2.503001029239927`"},
       {"2.3606621708404303`"},
       {"2.226022066291879`"},
       {"2.0988917929880744`"},
       {"1.9790692290119782`"},
       {"1.866332853368335`"},
       {"1.760437583854312`"},
       {"1.6611124806961248`"},
       {"1.5680601440796567`"},
       {"1.4809576337030528`"},
       {"1.3994587384792698`"},
       {"1.3231974245165974`"},
       {"1.2517922895050901`"},
       {"1.1848518516369628`"},
       {"1.1219805011888768`"},
       {"1.0627849428941492`"},
       {"1.006880957232851`"},
       {"0.9539003087677882`"},
       {"0.9034976296543595`"},
       {"0.8553571064522751`"},
       {"0.8091987983671194`"},
       {"0.7647844150497605`"},
       {"0.7219223820815772`"},
       {"0.6804720222735163`"},
       {"0.6403466809069362`"},
       {"0.6015156230442535`"},
       {"0.5640045310373782`"},
       {"0.5278944303618998`"},
       {"0.4933188719050525`"},
       {"0.4604591988354043`"},
       {"0.42953772618232566`"},
       {"0.4008086612531141`"},
       {"0.3745465930159053`"},
       {"0.35103237857622815`"},
       {"0.3305362548753008`"},
       {"0.3132980037379447`"},
       {"0.29950399839824016`"},
       {"0.28926095963076115`"},
       {"0.2825662496155248`"},
       {"0.2792745316645222`"},
       {"0.27906062393790165`"},
       {"0.28137837527775655`"},
       {"0.2854153912874908`"},
       {"0.29004343878482697`"},
       {"0.29376435675629686`"},
       {"0.29465130194143185`"},
       {"0.2902851571743543`"},
       {"0.2776859306110513`"},
       {"0.253238973970066`"},
       {"0.21261584791479748`"},
       {"0.1506896627052523`"},
       {"0.061444722247303574`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]}]], "Output",
 CellChangeTimes->{3.877957843483165*^9}]
}, Open  ]],

Cell[BoxData["0.11019284502640192`"], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"-", "x"}], "]"}], "-", 
     RowBox[{"nwtn", "[", "x", "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwt3Hc4le8fB/BTUVJGUikqVBKSiGR9JLtIVsoWohCyknHsPY7NkYRQRkiy
cihFkp3sEckmydf2+3Rdv79cr+v9ucdzn/t5nvv5B4fJA3Wz7QQCQYCKQPj3
lx8OTm5tbVEItplqx/i0QfPe6cCVVbS06r6O05LgGivK9efvPw+8SvkiCanV
SrXT82jG//pzaLWhbuq2ydgUuvRQ9UcpE5g9aEUYGvtnqjP9ZpbALOOe0j2M
dllbvi1pC0YJT3sav6PH607vvugM/h8KXD61ofc2eZpmukLubM3B6q//xlNO
b9/rAcuyo+qvP6DN9yxGGHoD6Tf3l8RX6KVuRov+QChlE7OMfvlvvK9zzPbB
MKBwdVfYc7QTbbn79lDgSbG+QiSjy69mkg9GwHvlogrzALTS975b/lGwmC6e
K2SIXhiObzySAEearymfvY3WC9Wwrk0A6VX9cS4tdHrUJKtVIoSpEU8euYou
WJTJf5MEXBu1yYSL6MAfZ5fPP4Gb2qphX+nRV8fkm8ZTwcPLkLdu9xaF6PGO
XMr/DDJybT9XU6Gff7SrfvgM5rdHUxevblKIzr6H+NeeQeCr7+5JY5sUwrth
saytNCinMba5W4V5ZzqnxFAGfB3U7losRXtoBWsefQ5DJddkvF+j99/teXzr
Oew0Ez34JBv9M69qo+k5qNcwVLVFoe+f2bGenwlmCdTcRmHY//HgU2WjmeDy
YI00E4B+deBw1OEsSDn6y4zGHW0lXfeEmAVTj6ropO6iu6XOKMpmw6ZasfMX
Y+xvyqCB4WE2MHG/HNbRQ98NfLuVmg2inbFvHt7A+r/y0Qar2eAraK3/Qhzz
45sUmfQXwDbFmsfMiCY6rS40vYRz7/cdSqPF+u8XdP/MvwSZxF1e56jRN5Xf
CTHlgIXCH03l1Q0K4U7FJVf1HHiT3rDuOYp+3Jsl15AD9a7V5nSDGxSiaW2R
9VgO9N0oaUnqRpft2RzalgvbCWkZb5rQ4Se+54vkgqreo2tTpdiere0jXUIu
GAs9KHF5jfkv5n0l+bngQGvGvjMf83PbnItrcyGpVG2RPR1NjvhROpsLeRHy
BvlP0OKXQmu250G1uUS9eALa60nCqYN5MMbMnawdhr45yEgtngcrU0d3jgZg
/5rxzD7X8mDvh/22dt7oHTUvjfXzQNBu60qoM3o4ME/OPQ88v3ZO1Rhje47V
qMY3eTDU5VOdo4f+1vkptSYPZEYFYmNvYr2X6puFxjzYuRYsZamCPqlct/9H
HljsFN2voYguSJscncqDz/t+/pK4gv4pXX/xbx6EcgOJ8RL2J/LpufnOfJgV
mjZbFcL8U1ayLH0+qEGi2Cg/5vc/imcfyIciZXmGpjNo2YHHUWz5sF/7z8jb
k+jFRE2qE/ngYJxa+uw4tjcJqtzkzodOK5WwkCNot9MvvPnzQdRl1djxAHqx
m54klA9JPlkihozYnrAwxCOaD+vhmnuU9mDOmrfvhkQ+6CdtGxLciflH4Sgq
6Xyoep5fzLYNc6kMdfkr+cBeqBu0c32dQlTaunxIPh+8K2kM5pfWKYRfEqou
ivkwWvdGsOc35gevmN5Tzgf5dpNdtdOYk8YfzF7Nh6wBhr68X+igv7rUKvlA
M1lZEP8DbXaSqQB976+ln1c/2oPz8Ry6kXDo9v0udH+kRy2af28tv1Y7epFq
hwA68pDdDmhC6++eFbyWD785j3Vxf8bxo4+dbMLx1fm/5DLVYl5QEbhdKR+K
L7l4rVdhfur6ZgvO/6DcKe2xMrQLmIvJ5oOzWhtPSzHWr0+lwuV86NL13Cp7
hXlwXtiwZD6I3eXrSH+JufR3Wg6xfEi2784Oe475hbd/N4XzYdPd3905FXPB
eB638/lQEzPEdTUOrWk9cPN0PnCmhq1dIKGZxxlLOfLBN0es5Vgo2s96sZw1
HxTfxzxa8ML+dsTy5OJ+ePn1smqfG/pICXfyrnzY0z3L+ckZ6+8M8wsS8qFp
TrEx0Rpzq7tPNebzQGDtb6qPBea+6nlDv/Igame6o/UdzMctaQ8N5oHW0Y1j
l2/9Wy/bWW/cv33KhXbjsph3+H+1Ts8DKW0D+TZA0xp/0U3Ig6fGe1grxdCH
PzuvhOaBiYtZbYQAtm9JXZF3zIOJ54cPXWRDP0i7JC2TB00mP5zEDmE9Y1Ud
tXAeFB/P6ZRkQkfEUPmezgOPRIk4WRqsL7bUz9uTB0xhhgfUF9cohOuK7HUt
uSDm8Hy/deMahZh44EOBai4cP2/z0LYOHTQmoCmZC1SzIu0P36ObIkQqeHOh
6W59lGsptme5ndm5KxdMdKf2BWZg7qV8QetdDgTLnGdMd8P8oNTlraM58GBr
5UGmM+YMfYPcu3NAs/J98wv7f/XlvOyLL+GYiGZEgQXaNOyC6+eXUHTGmb5K
E20yQZm2ewk9jO/2dvOh/R/0qpa/AJ5Bxd0M/av4vonascyXDesKSxcyv6Od
6mveMWZDU0G6kWTbKoWonqCuv5gF9t6bb+/XYV7z1pevIgvKThWb1xdiviOF
/ahCFihaHa/18kdPFhW062TC3ZW/HovnsP5YUnvd3QzI2J++2O29QiHofAq8
qZ4KH3QbwiiwTCHoZoll3yBBS8b+eXkx9E2GjPJ9JBiY0VNvuoDuuHB8rjUS
lj3nDvafQbMPOlSrRwJ/BnPq6n70wJ7/uHLDIWnaoEh4/D8KQbn4Rm9dMNi6
/+nMiUSLzgqEgg94fJK4JBSCLv/Gf6zBG0IY/MnlfmhmPi4mLW/IfMZi9NkV
7VZ95ISVF/R+lJwYM0WPS6asS3qCPH3gGscl9AWXKy4CLqB5s1X/hRDaQehQ
qLozGKceqRbgR3OXp7k6OoGbYJ4vnEBrXl6ZfucAhdptdPp0aDVDQ6VbdsD2
lI09YXgJ9+MN8zZHM8hL9KK71IcW6NcnDNwBqZix1e5ONNEm8j8FEzAMKvjG
2vgvT3wdJWMA8z4HPlR+Qqe+fnCdQxeIHq4F+jXo6s2qvB06kPZQNuRpCVpa
O0a//QYI2bxwkS5Es2+7Z+WlArUW9ObDOf/6d5Bwv6MAmnceanhn/muv8nDx
2mX4qd8lfeIZmsAUUvhYBJx0JPlryf/qJy9+6DoJOzXSWM3i/uVdpBRYkYpX
2bV7J+lf/swtm5YXuBWtljJD/uXXv6XevQRlMq0jCv7/cq8cyycyoCwp0jpO
/De/rNYHnopwX5CQy+P0Lz8eonVQHfLZYozzjf5d76XilFh9uPC7ovGNMJrm
yPruGUv4OMVeri3wz7a9nor3QXvML+s/HnSlL6w/swLn3uvel9jRy2pXqa4/
gPKPIxff0aI73pokKdqDdNKe9NrBvxTCtO/u9NvOcPWK7qP2IPQ4tXaJPhF4
7J1bW3zRFw6PpD8lAu2z6DNNnmiZfI9jw0So3/zSXe+IfueQUG7iBfLlEmJV
xug7uyNDjbxB+vyxtexLaOGHsaHyvnDcSEwj8wLaRyZY1ssXNsO1c9LPoZPD
ewMrfOHddLhuyin0zQeBJfx+IJa9VRG9D83iOP+cwR+Ejw+7eUwsUghVB1m+
VwQAs+pGx+NRdO8VM625AFh0O3z20SB6h6OyEWcgFPXc6H/4Dd2gQssWEAgC
ce8lLWvQXyiNfFeDgIcuY1MjcfHf89y55l0w7Jao1r4Rg9Y3U2WcDIbxe335
qhFoyYbW6QMhkFXPbKjkh36vJ33dKgRO+vpRpOzQk7/CK/eHwvE1c+IZJfTl
H8s3VMJg+tvdjPIr6E+O9FmOYVBaYFF/VQrNmDnu/CQM1MzvMdoIoSlLaWFT
YUBstU4tOoo2cbcO9wqHa7k2tVdY0HLKg5+ehwNLwIPxDia0gm+K2+dwKJSw
E/hvF3pFpdeIIQJ+ZDlUiy/8oRCeseoyxUZAvrfjaOM0WvC9lPibCHDVd6Ix
+IUuFRQa6YiA/ftd1Ih9f/C8Y5qqszsSZD0eD9V+Qh+1NOSSjYRMTW+CKhnr
dcahPy8S7M/5nByMxTzUWXGlLBKkaH0VbSPRJ2lmOz9GwneKX2SUH9paOP17
XyTQ8Aaxf3+AXt1qXthFgg7qYFmLe9hfLnfXcSYSpA4FW6yYosUZ8hjYSHAp
LrSA9TbW1wzoip4jwb1tkdJGsmjxEtEidRKI9EWa/pZCpzsxrN4mwfa3pEDv
S9jeOmaF+g4JyFbRLRn8mJu9KrxnT8Lzb8yi8Bn0/TvfPjwiwQXOWJa6E1i/
Y/jtMJEEjd/jjCZY0AsXLazCSZBQFO/ruh+drRfeHUMC07CE7D30aOGhE3vJ
JFiXSZo/uwPdsOfG+0wS1B8lM1M2FihEI7cr8rkkiFkmi6otL+Dzs/d2ZCEJ
zuY/IdrPoDsUCp0rSKD4TovBaBzrtWQj6ykkMGmkS1EZwTyyKu3XBxx/0r2C
uxvzY1fXI7+Q4PWKsPLBDjT5v0jWZhI00cx27WhGc2stOrSRgOq0wdJALVrt
VW1MFwmOixz0a6SgE/4j6vaSQEyuaX95Ofp6wMvf/STQ1PRPy3qD430LsLw5
RIIHd6TOxxZgLqU9FvqDBMH2SxTvHMxHvZWiRkmQ4ZWvapuJeV9Lxd0xElAi
zfv1n6H9hc3pxknQ8/SY1dVkrN/VZeczQYK/+Z2rovGYdzLSNEySgLEqPIgr
CnNxS/XhKRLwfJVnYQ5D9yS5fp4mgVzfZua2QLRgxEvvGRIYTZUIz3mjeQz3
0s2SwHXVprbPHR2j3mCBjt19WqPBBV0ySB+HLmAZHH77EN34kioW/eV0vO1z
G3ScX6cZekzk+laUJc5n0OYVDZogvyucaIreHlXujuOxalHYbAzRjvInPuJ8
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
Lnk=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-2, 2}, {0., 0.11049892734039568`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8779578918026323`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"-", "x"}], "]"}], "-", 
       RowBox[{"nwtn", "[", "x", "]"}]}], "]"}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], "<", "x", "<", "2"}]}], "}"}], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.877957933732439*^9, 3.877957934747656*^9}, {
  3.8779579745681877`*^9, 3.8779580298531685`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{"0.1104992975711907`", ",", 
   RowBox[{"{", 
    RowBox[{"2", "\[Rule]", "1.7289278819558571`"}], "}"}]}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    UnderoverscriptBox["\[Product]", 
     RowBox[{"i", "=", "0"}], "n"], 
    RowBox[{"(", 
     RowBox[{"x", "-", 
      RowBox[{"xdata", "[", "i", "]"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8779580336708097`*^9, 3.8779580400409966`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.1104992975711907`", ",", 
   RowBox[{"{", 
    RowBox[{"2", "\[Rule]", "1.7289278819558571`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.877958040873767*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-2, 2}, {-7.282545199876883, 1.474903957195685}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8779580409781046`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Product]", 
       RowBox[{"i", "=", "0"}], "n"], 
      RowBox[{"(", 
       RowBox[{"x", "-", 
        RowBox[{"xdata", "[", "i", "]"}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"-", "1"}]}]}], "}"}], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1.4749040152533832`", ",", 
    RowBox[{"{", 
     RowBox[{"2", "\[Rule]", 
      RowBox[{"-", "1.2074687411948342`"}]}], "}"}]}], "}"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8779580788556895`*^9, 3.8779580788692417`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    FractionBox[
     SuperscriptBox["\[ExponentialE]", "2"], 
     RowBox[{"8", "!"}]], "\[Times]", "1.4749040152533832`"}], 
   "\[IndentingNewLine]"}]}]], "Input"],

Cell[BoxData[{"0.0002702913816777112`", "\[IndentingNewLine]", 
 RowBox[{"n1", "=", "8"}], "\[IndentingNewLine]", 
 RowBox[{"b", "=", "2"}], "\[IndentingNewLine]", 
 RowBox[{"a", "=", 
  RowBox[{"-", "2"}]}], "\[IndentingNewLine]", 
 RowBox[{"h", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"b", "-", "a"}], ")"}], "/", "n1"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"XDT", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"YDT", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ",", 
    RowBox[{"i", "\[LessEqual]", "n1"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"xdata1", "[", "i", "]"}], "=", 
      RowBox[{"a", "+", 
       RowBox[{"i", "\[Times]", "h"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ydata1", "[", "i", "]"}], "=", 
      RowBox[{"N", "[", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"-", 
          RowBox[{"xdata1", "[", "i", "]"}]}], "]"}], "+", 
        RowBox[{"0.01", "*", 
         RowBox[{"Exp", "[", 
          RowBox[{"xdata1", "[", "i", "]"}], "]"}], "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"i", "+", "2"}]]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"XDT", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"XDT", ",", 
        RowBox[{"xdata1", "[", "i", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"YDT", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"YDT", ",", 
        RowBox[{"ydata1", "[", "i", "]"}]}], "]"}]}], ";"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Array", "[", 
   RowBox[{"xdata1", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n1", "+", "1"}], ",", "0"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Array", "[", 
   RowBox[{"ydata1", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n1", "+", "1"}], ",", "0"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "XDT", "]"}], 
  RowBox[{"MatrixForm", "[", "YDT", "]"}]}]}], "Input",
 CellChangeTimes->{{3.8779582407185116`*^9, 3.8779582601369667`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{"-", "2"}]},
        {
         RowBox[{"-", 
          FractionBox["3", "2"]}]},
        {
         RowBox[{"-", "1"}]},
        {
         RowBox[{"-", 
          FractionBox["1", "2"]}]},
        {"0"},
        {
         FractionBox["1", "2"]},
        {"1"},
        {
         FractionBox["3", "2"]},
        {"2"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], " ", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"7.390409451763016`"},
        {"4.47945776873658`"},
        {"2.7219606228707596`"},
        {"1.6426559641030019`"},
        {"1.01`"},
        {"0.5900434470056322`"},
        {"0.3950622594560328`"},
        {"0.17831326944504916`"},
        {"0.20922584422591922`"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.877958295504034*^9, 3.8779582955322*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Array", "[", 
   RowBox[{"difftab", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n1", "+", "1"}], ",", 
      RowBox[{"n1", "+", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"k", "=", "1"}], ",", 
    RowBox[{"k", "\[LessEqual]", "n1"}], ",", 
    RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "n1"}], ",", 
      RowBox[{"i", "\[GreaterEqual]", 
       RowBox[{"n1", "-", "k"}]}], ",", 
      RowBox[{"i", "--"}], ",", 
      RowBox[{
       RowBox[{"difftab", "[", 
        RowBox[{"i", ",", "k"}], "]"}], "=", "\"\<\>\""}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ",", 
    RowBox[{"i", "\[LessEqual]", "n1"}], ",", 
    RowBox[{"i", "++"}], ",", 
    RowBox[{
     RowBox[{"difftab", "[", 
      RowBox[{"i", ",", "0"}], "]"}], "=", 
     RowBox[{"ydata1", "[", "i", "]"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", " ", "[", 
   RowBox[{
    RowBox[{"k", "=", "1"}], ",", " ", 
    RowBox[{"k", "\[LessEqual]", "n1"}], ",", 
    RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "0"}], ",", 
      RowBox[{"i", "\[LessEqual]", 
       RowBox[{"n1", "-", "k"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"difftab", "[", 
        RowBox[{"i", ",", "k"}], "]"}], "=", 
       FractionBox[
        RowBox[{
         RowBox[{"difftab", "[", 
          RowBox[{
           RowBox[{"i", "+", "1"}], ",", 
           RowBox[{"k", "-", "1"}]}], "]"}], "-", 
         RowBox[{"difftab", "[", 
          RowBox[{"i", ",", 
           RowBox[{"k", "-", "1"}]}], "]"}]}], 
        RowBox[{
         RowBox[{"xdata1", "[", 
          RowBox[{"i", "+", "k"}], "]"}], "-", 
         RowBox[{"xdata1", "[", "i", "]"}]}]]}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tab1", " ", "=", " ", 
   RowBox[{"Array", "[", 
    RowBox[{"difftab", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"n", "+", "1"}], ",", 
       RowBox[{"n1", "+", "1"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"PaddedForm", "[", 
  RowBox[{
   RowBox[{"TableForm", "[", "tab1", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "5"}], "}"}]}], "]"}]}], "Input"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      InterpretationBox["\<\" 7.39041\"\>",
       7.390409451763016,
       AutoDelete->True], 
      InterpretationBox["\<\"-5.82190\"\>",
       -5.821903366052872,
       AutoDelete->True], 
      InterpretationBox["\<\" 2.30691\"\>",
       2.306909074321231,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.63368\"\>",
       -0.6336827334167368,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.16248\"\>",
       0.16247883841949703`,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.06563\"\>",
       -0.06563299966721611,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.04398\"\>",
       0.04397817580152281,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.03171\"\>",
       -0.03171122709629832,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.02084\"\>",
       0.02084406776890528,
       AutoDelete->True]},
     {
      InterpretationBox["\<\" 4.47946\"\>",
       4.47945776873658,
       AutoDelete->True], 
      InterpretationBox["\<\"-3.51499\"\>",
       -3.5149942917316412`,
       AutoDelete->True], 
      InterpretationBox["\<\" 1.35638\"\>",
       1.3563849741961258`,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.30873\"\>",
       -0.3087250565777427,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.00160\"\>",
       -0.0016036607485432341`,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.06630\"\>",
       0.06630152773735232,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.06701\"\>",
       -0.0670111190355213,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.05167\"\>",
       0.05166504397932281,
       AutoDelete->True], "\<\"\"\>"},
     {
      InterpretationBox["\<\" 2.72196\"\>",
       2.7219606228707596`,
       AutoDelete->True], 
      InterpretationBox["\<\"-2.15861\"\>",
       -2.1586093175355154`,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.89330\"\>",
       0.8932973893295117,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.31193\"\>",
       -0.31193237807482915`,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.16415\"\>",
       0.16415015859483756`,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.13473\"\>",
       -0.1347318293692116,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.11382\"\>",
       0.11381653489210855`,
       AutoDelete->True], "\<\"\"\>", "\<\"\"\>"},
     {
      InterpretationBox["\<\" 1.64266\"\>",
       1.6426559641030019`,
       AutoDelete->True], 
      InterpretationBox["\<\"-1.26531\"\>",
       -1.2653119282060037`,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.42540\"\>",
       0.425398822217268,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.01637\"\>",
       0.01636793911484598,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.17268\"\>",
       -0.17267941482819146`,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.20672\"\>",
       0.2067177753071141,
       AutoDelete->True], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {
      InterpretationBox["\<\" 1.01000\"\>",
       1.01,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.83991\"\>",
       -0.8399131059887357,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.44995\"\>",
       0.44995073088953697`,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.32899\"\>",
       -0.32899089054153696`,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.34412\"\>",
       0.34411502343959377`,
       AutoDelete->True], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {
      InterpretationBox["\<\" 0.59004\"\>",
       0.5900434470056322,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.38996\"\>",
       -0.38996237509919873`,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.04354\"\>",
       -0.043535604922768534`,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.35924\"\>",
       0.3592391563376506,
       AutoDelete->
        True], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {
      InterpretationBox["\<\" 0.39506\"\>",
       0.3950622594560328,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.43350\"\>",
       -0.43349798002196727`,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.49532\"\>",
       0.4953231295837074,
       AutoDelete->
        True], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>"},
     {
      InterpretationBox["\<\" 0.17831\"\>",
       0.17831326944504916`,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.06183\"\>",
       0.06182514956174012,
       AutoDelete->
        True], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]],
  PaddedForm[#, {6, 5}]& ]], "Output",
 CellChangeTimes->{3.8779582761296587`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["f", 
      RowBox[{"(", "8", ")"}]], 
     RowBox[{"(", "\[Xi]", ")"}]}], ")"}], "/", "8"}], "!=", 
  "0.02084"}], "\[IndentingNewLine]", 
 RowBox[{"\[Xi]", "=", 
  RowBox[{"0.02084", "*", 
   RowBox[{"8", "!"}]}]}]}], "Input",
 CellChangeTimes->{{3.8779583137007637`*^9, 3.877958315357664*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["f", "8"], " ", "\[Xi]"}], "8"], "\[NotEqual]", 
  "0.02084`"}]], "Output",
 CellChangeTimes->{3.8779583186958294`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["840.2688`"], "Input",
 CellChangeTimes->{3.8779583209450026`*^9}],

Cell[BoxData["840.2688`"], "Output",
 CellChangeTimes->{3.877958321030123*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"0.02084", "*", 
    RowBox[{
     UnderoverscriptBox["\[Product]", 
      RowBox[{"i", "=", "0"}], "n"], 
     RowBox[{"(", 
      RowBox[{"x", "-", 
       RowBox[{"xdata", "[", "i", "]"}]}], ")"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.877958331224804*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
ubwG386JeAuZ3cL/934c/v/78f8Dnmv/AQ==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-2, 2}, {-0.15176824196543426`, 0.030736998467958077`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.877958333214994*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.02084", "*", 
      RowBox[{
       UnderoverscriptBox["\[Product]", 
        RowBox[{"i", "=", "0"}], "n"], 
       RowBox[{"(", 
        RowBox[{"x", "-", 
         RowBox[{"xdata", "[", "i", "]"}]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], "\[LessEqual]", "x", "\[LessEqual]", "2"}]}], "}"}],
    ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.8779583429902554`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"0.03073699967782759`", ",", 
    RowBox[{"{", 
     RowBox[{"2", "\[Rule]", "1.20746839904317`"}], "}"}]}], "}"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8779583516042395`*^9, 3.877958351628395*^9}}]
},
WindowSize->{588, 734},
WindowMargins->{{-1, Automatic}, {Automatic, 5}},
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (December 4, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 2224, 67, 304, "Input"],
Cell[2785, 89, 2020, 63, 245, InheritFromParent],
Cell[CellGroupData[{
Cell[4830, 156, 2991, 87, 232, "Input"],
Cell[7824, 245, 4673, 140, 154, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12534, 390, 1617, 50, 201, "Input"],
Cell[14154, 442, 13145, 347, 211, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27336, 794, 216, 5, 31, "Input"],
Cell[27555, 801, 4283, 96, 138, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31875, 902, 1329, 38, 243, "Input"],
Cell[33207, 942, 940, 29, 148, "Output"],
Cell[34150, 973, 634, 15, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34821, 993, 449, 13, 31, "Input"],
Cell[35273, 1008, 11735, 206, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47045, 1219, 374, 13, 31, "Input"],
Cell[47422, 1234, 11757, 206, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59216, 1445, 933, 29, 112, "Input"],
Cell[60152, 1476, 10060, 259, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70249, 1740, 54, 1, 31, "Input"],
Cell[70306, 1743, 1830, 50, 168, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72173, 1798, 2546, 73, 355, "Input"],
Cell[74722, 1873, 73, 1, 31, "Output"],
Cell[74798, 1876, 12338, 389, 1137, "Output"]
}, Open  ]],
Cell[87151, 2268, 46, 0, 31, "Input"],
Cell[CellGroupData[{
Cell[87222, 2272, 305, 10, 31, "Input"],
Cell[87530, 2284, 21956, 371, 243, "Output"]
}, Open  ]],
Cell[109501, 2658, 492, 14, 31, "Input"],
Cell[CellGroupData[{
Cell[110018, 2676, 575, 17, 78, InheritFromParent],
Cell[110596, 2695, 206, 5, 31, "Output"],
Cell[110805, 2702, 21660, 366, 238, "Output"]
}, Open  ]],
Cell[132480, 3071, 450, 14, 56, "Input"],
Cell[132933, 3087, 297, 8, 52, InheritFromParent],
Cell[133233, 3097, 236, 7, 101, "Input"],
Cell[133472, 3106, 2265, 66, 324, InheritFromParent],
Cell[135740, 3174, 1994, 63, 233, InheritFromParent],
Cell[CellGroupData[{
Cell[137759, 3241, 2620, 80, 239, "Input"],
Cell[140382, 3323, 5373, 162, 152, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145792, 3490, 382, 12, 55, "Input"],
Cell[146177, 3504, 189, 6, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[146403, 3515, 79, 1, 31, InheritFromParent],
Cell[146485, 3518, 78, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[146600, 3524, 414, 13, 56, "Input"],
Cell[147017, 3539, 21579, 364, 238, "Output"]
}, Open  ]],
Cell[168611, 3906, 514, 16, 56, "Input"],
Cell[169128, 3924, 272, 7, 52, InheritFromParent]
}
]
*)

(* End of internal cache information *)
