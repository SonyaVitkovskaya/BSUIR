(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    157361,       3769]
NotebookOptionsPosition[    154628,       3682]
NotebookOutlinePosition[    155003,       3698]
CellTagsIndexPosition[    154960,       3695]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"n", "=", "7"}], "\[IndentingNewLine]", 
 RowBox[{"b", "=", "2"}], "\[IndentingNewLine]", 
 RowBox[{"a", "=", 
  RowBox[{"-", "2"}]}], "\[IndentingNewLine]", 
 RowBox[{"h", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"b", "-", "a"}], ")"}], "/", "n"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"XDT", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"YDT", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ",", 
    RowBox[{"i", "\[LessEqual]", "n"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"xdata", "[", "i", "]"}], "=", 
      RowBox[{"a", "+", 
       RowBox[{"i", "\[Times]", "h"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ydata", "[", "i", "]"}], "=", 
      RowBox[{"N", "[", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         RowBox[{"xdata", "[", "i", "]"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"XDT", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"XDT", ",", 
        RowBox[{"xdata", "[", "i", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"YDT", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"YDT", ",", 
        RowBox[{"ydata", "[", "i", "]"}]}], "]"}]}], ";"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Array", "[", 
   RowBox[{"xdata", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "+", "1"}], ",", "0"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Array", "[", 
   RowBox[{"ydata", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "+", "1"}], ",", "0"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "XDT", "]"}], 
  RowBox[{"MatrixForm", "[", "YDT", "]"}]}]}], "Input",
 CellChangeTimes->{{3.877949219746904*^9, 3.8779492200795865`*^9}}],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{3.877949221839672*^9}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.877949221839672*^9}],

Cell[BoxData[
 RowBox[{"-", "2"}]], "Output",
 CellChangeTimes->{3.877949221839672*^9}],

Cell[BoxData[
 FractionBox["4", "7"]], "Output",
 CellChangeTimes->{3.877949221846076*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        RowBox[{"-", "2"}]},
       {
        RowBox[{"-", 
         FractionBox["10", "7"]}]},
       {
        RowBox[{"-", 
         FractionBox["6", "7"]}]},
       {
        RowBox[{"-", 
         FractionBox["2", "7"]}]},
       {
        FractionBox["2", "7"]},
       {
        FractionBox["6", "7"]},
       {
        FractionBox["10", "7"]},
       {"2"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], " ", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {"7.38905609893065`"},
       {"4.172733883598096`"},
       {"2.3564184423836605`"},
       {"1.33071219744735`"},
       {"0.751477293075286`"},
       {"0.42437284567695`"},
       {"0.2396510364417758`"},
       {"0.1353352832366127`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]}]], "Input",
 CellChangeTimes->{{3.8779492750011253`*^9, 3.8779492768465986`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Array", "[", 
   RowBox[{"difftab", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "+", "1"}], ",", 
      RowBox[{"n", "+", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"k", "=", "1"}], ",", 
    RowBox[{"k", "\[LessEqual]", "n"}], ",", 
    RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "n"}], ",", 
      RowBox[{"i", "\[GreaterEqual]", 
       RowBox[{"n", "-", "k"}]}], ",", 
      RowBox[{"i", "--"}], ",", 
      RowBox[{
       RowBox[{"difftab", "[", 
        RowBox[{"i", ",", "k"}], "]"}], "=", "\"\<\>\""}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ",", 
    RowBox[{"i", "\[LessEqual]", "n"}], ",", 
    RowBox[{"i", "++"}], ",", 
    RowBox[{
     RowBox[{"difftab", "[", 
      RowBox[{"i", ",", "0"}], "]"}], "=", 
     RowBox[{"ydata", "[", "i", "]"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", " ", "[", 
   RowBox[{
    RowBox[{"k", "=", "1"}], ",", " ", 
    RowBox[{"k", "\[LessEqual]", "n"}], ",", 
    RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "0"}], ",", 
      RowBox[{"i", "\[LessEqual]", 
       RowBox[{"n", "-", "k"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"difftab", "[", 
        RowBox[{"i", ",", "k"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"difftab", "[", 
           RowBox[{
            RowBox[{"i", "+", "1"}], ",", 
            RowBox[{"k", "-", "1"}]}], "]"}], "-", 
          RowBox[{"difftab", "[", 
           RowBox[{"i", ",", 
            RowBox[{"k", "-", "1"}]}], "]"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"xdata", "[", 
           RowBox[{"i", "+", "k"}], "]"}], "-", 
          RowBox[{"xdata", "[", "i", "]"}]}], ")"}]}]}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tab1", " ", "=", " ", 
   RowBox[{"Array", "[", 
    RowBox[{"difftab", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"n", "+", "1"}], ",", 
       RowBox[{"n", "+", "1"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"PaddedForm", "[", 
  RowBox[{
   RowBox[{"TableForm", "[", "tab1", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "5"}], "}"}]}], "]"}]}], "Input"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      InterpretationBox["\<\" 7.38906\"\>",
       7.38905609893065,
       AutoDelete->True], 
      InterpretationBox["\<\"-5.62856\"\>",
       -5.62856387683197,
       AutoDelete->True], 
      InterpretationBox["\<\" 2.14376\"\>",
       2.1437603728683694`,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.54433\"\>",
       -0.5443316906227027,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.10366\"\>",
       0.10366025273841188`,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.01579\"\>",
       -0.015792500319794185`,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.00200\"\>",
       0.002004971849239652,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.00022\"\>",
       -0.00021818197796465567`,
       AutoDelete->True]},
     {
      InterpretationBox["\<\" 4.17273\"\>",
       4.172733883598096,
       AutoDelete->True], 
      InterpretationBox["\<\"-3.17855\"\>",
       -3.1785520221252623`,
       AutoDelete->True], 
      InterpretationBox["\<\" 1.21062\"\>",
       1.210620331800879,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.30739\"\>",
       -0.30739397007776126`,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.05854\"\>",
       0.05853882325328563,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.00892\"\>",
       -0.008918311122401093,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.00113\"\>",
       0.0011322439373810294`,
       AutoDelete->True], "\<\"\"\>"},
     {
      InterpretationBox["\<\" 2.35642\"\>",
       2.3564184423836605`,
       AutoDelete->True], 
      InterpretationBox["\<\"-1.79499\"\>",
       -1.7949859286385434`,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.68366\"\>",
       0.6836592402390026,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.17359\"\>",
       -0.17359094549882267`,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.03306\"\>",
       0.03305793433213965,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.00504\"\>",
       -0.005036331908523278,
       AutoDelete->True], "\<\"\"\>", "\<\"\"\>"},
     {
      InterpretationBox["\<\" 1.33071\"\>",
       1.33071219744735,
       AutoDelete->True], 
      InterpretationBox["\<\"-1.01366\"\>",
       -1.0136610826511119`,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.38607\"\>",
       0.3860747622410209,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.09803\"\>",
       -0.09802995273964632,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.01867\"\>",
       0.018668414593501714`,
       AutoDelete->True], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {
      InterpretationBox["\<\" 0.75148\"\>",
       0.751477293075286,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.57243\"\>",
       -0.572432782947088,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.21802\"\>",
       0.2180234146873415,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.05536\"\>",
       -0.0553592908116424,
       AutoDelete->True], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {
      InterpretationBox["\<\" 0.42437\"\>",
       0.42437284567695,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.32326\"\>",
       -0.32326316616155487`,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.12312\"\>",
       0.12312177329595453`,
       AutoDelete->
        True], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {
      InterpretationBox["\<\" 0.23965\"\>",
       0.2396510364417758,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.18255\"\>",
       -0.18255256810903542`,
       AutoDelete->
        True], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>"},
     {
      InterpretationBox["\<\" 0.13534\"\>",
       0.1353352832366127,
       AutoDelete->
        True], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]],
  PaddedForm[#, {6, 5}]& ]], "Output",
 CellChangeTimes->{3.8779492309711924`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pln", " ", "=", " ", 
   RowBox[{
    RowBox[{"difftab", "[", 
     RowBox[{"0", ",", "0"}], "]"}], "+", 
    RowBox[{
     RowBox[{"difftab", "[", 
      RowBox[{"0", ",", "1"}], "]"}], "\[Times]", 
     RowBox[{"(", 
      RowBox[{"x", "-", 
       RowBox[{"xdata", "[", "0", "]"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "7"}], ";", 
  RowBox[{"lst", "=", 
   RowBox[{"List", "[", "pln", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"k", "=", "2"}], ",", 
    RowBox[{"k", "\[LessEqual]", "n"}], ",", 
    RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pln", "=", 
      RowBox[{
       RowBox[{"lst", "[", 
        RowBox[{"[", 
         RowBox[{"k", "-", "1"}], "]"}], "]"}], "+", 
       RowBox[{
        RowBox[{"difftab", "[", 
         RowBox[{"0", ",", "k"}], "]"}], "\[Times]", 
        RowBox[{
         UnderoverscriptBox["\[Product]", 
          RowBox[{"i", "=", "0"}], 
          RowBox[{"k", "-", "1"}]], 
         RowBox[{"(", 
          RowBox[{"x", "-", 
           RowBox[{"xdata", "[", "i", "]"}]}], ")"}]}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"lst", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"lst", ",", "pln"}], "]"}]}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nwtn", "[", "x_", "]"}], ":=", 
   RowBox[{"N", "[", 
    RowBox[{"lst", "[", 
     RowBox[{"[", "n", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ColumnForm", "[", "lst", "]"}]}], "Input",
 CellChangeTimes->{{3.877949247664797*^9, 3.8779492477633257`*^9}}],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{"7.38905609893065`", "\[VeryThinSpace]", "-", 
      RowBox[{"5.62856387683197`", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}]}]},
    {
     RowBox[{"7.38905609893065`", "\[VeryThinSpace]", "-", 
      RowBox[{"5.62856387683197`", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "+", 
      RowBox[{"2.1437603728683694`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}]}]},
    {
     RowBox[{"7.38905609893065`", "\[VeryThinSpace]", "-", 
      RowBox[{"5.62856387683197`", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "+", 
      RowBox[{"2.1437603728683694`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "-", 
      RowBox[{"0.5443316906227027`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}]}]},
    {
     RowBox[{"7.38905609893065`", "\[VeryThinSpace]", "-", 
      RowBox[{"5.62856387683197`", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "+", 
      RowBox[{"2.1437603728683694`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "-", 
      RowBox[{"0.5443316906227027`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "+", 
      RowBox[{"0.10366025273841188`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["2", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}]}]},
    {
     RowBox[{"7.38905609893065`", "\[VeryThinSpace]", "-", 
      RowBox[{"5.62856387683197`", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "+", 
      RowBox[{"2.1437603728683694`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "-", 
      RowBox[{"0.5443316906227027`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "+", 
      RowBox[{"0.10366025273841188`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["2", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "-", 
      RowBox[{"0.015792500319794185`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["2", "7"]}], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["2", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}]}]},
    {
     RowBox[{"7.38905609893065`", "\[VeryThinSpace]", "-", 
      RowBox[{"5.62856387683197`", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "+", 
      RowBox[{"2.1437603728683694`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "-", 
      RowBox[{"0.5443316906227027`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "+", 
      RowBox[{"0.10366025273841188`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["2", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "-", 
      RowBox[{"0.015792500319794185`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["2", "7"]}], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["2", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "+", 
      RowBox[{"0.002004971849239652`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["6", "7"]}], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["2", "7"]}], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["2", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}]}]},
    {
     RowBox[{"7.38905609893065`", "\[VeryThinSpace]", "-", 
      RowBox[{"5.62856387683197`", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "+", 
      RowBox[{"2.1437603728683694`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "-", 
      RowBox[{"0.5443316906227027`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "+", 
      RowBox[{"0.10366025273841188`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["2", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "-", 
      RowBox[{"0.015792500319794185`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["2", "7"]}], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["2", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "+", 
      RowBox[{"0.002004971849239652`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["6", "7"]}], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["2", "7"]}], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["2", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "-", 
      RowBox[{"0.00021818197796465567`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["10", "7"]}], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["6", "7"]}], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["2", "7"]}], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["2", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}]}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  ColumnForm[{
   7.38905609893065 - 5.62856387683197 (2 + $CellContext`x), 7.38905609893065 - 
    5.62856387683197 (2 + $CellContext`x) + 
    2.1437603728683694` (Rational[10, 7] + $CellContext`x) (
      2 + $CellContext`x), 7.38905609893065 - 
    5.62856387683197 (2 + $CellContext`x) + 
    2.1437603728683694` (Rational[10, 7] + $CellContext`x) (
      2 + $CellContext`x) - 
    0.5443316906227027 (Rational[6, 7] + $CellContext`x) (
     Rational[10, 7] + $CellContext`x) (2 + $CellContext`x), 7.38905609893065 - 
    5.62856387683197 (2 + $CellContext`x) + 
    2.1437603728683694` (Rational[10, 7] + $CellContext`x) (
      2 + $CellContext`x) - 
    0.5443316906227027 (Rational[6, 7] + $CellContext`x) (
     Rational[10, 7] + $CellContext`x) (2 + $CellContext`x) + 
    0.10366025273841188` (Rational[2, 7] + $CellContext`x) (
      Rational[6, 7] + $CellContext`x) (Rational[10, 7] + $CellContext`x) (
      2 + $CellContext`x), 7.38905609893065 - 
    5.62856387683197 (2 + $CellContext`x) + 
    2.1437603728683694` (Rational[10, 7] + $CellContext`x) (
      2 + $CellContext`x) - 
    0.5443316906227027 (Rational[6, 7] + $CellContext`x) (
     Rational[10, 7] + $CellContext`x) (2 + $CellContext`x) + 
    0.10366025273841188` (Rational[2, 7] + $CellContext`x) (
      Rational[6, 7] + $CellContext`x) (Rational[10, 7] + $CellContext`x) (
      2 + $CellContext`x) - 
    0.015792500319794185` (Rational[-2, 7] + $CellContext`x) (
     Rational[2, 7] + $CellContext`x) (Rational[6, 7] + $CellContext`x) (
     Rational[10, 7] + $CellContext`x) (2 + $CellContext`x), 7.38905609893065 - 
    5.62856387683197 (2 + $CellContext`x) + 
    2.1437603728683694` (Rational[10, 7] + $CellContext`x) (
      2 + $CellContext`x) - 
    0.5443316906227027 (Rational[6, 7] + $CellContext`x) (
     Rational[10, 7] + $CellContext`x) (2 + $CellContext`x) + 
    0.10366025273841188` (Rational[2, 7] + $CellContext`x) (
      Rational[6, 7] + $CellContext`x) (Rational[10, 7] + $CellContext`x) (
      2 + $CellContext`x) - 
    0.015792500319794185` (Rational[-2, 7] + $CellContext`x) (
     Rational[2, 7] + $CellContext`x) (Rational[6, 7] + $CellContext`x) (
     Rational[10, 7] + $CellContext`x) (2 + $CellContext`x) + 
    0.002004971849239652 (Rational[-6, 7] + $CellContext`x) (
      Rational[-2, 7] + $CellContext`x) (Rational[2, 7] + $CellContext`x) (
      Rational[6, 7] + $CellContext`x) (Rational[10, 7] + $CellContext`x) (
      2 + $CellContext`x), 7.38905609893065 - 
    5.62856387683197 (2 + $CellContext`x) + 
    2.1437603728683694` (Rational[10, 7] + $CellContext`x) (
      2 + $CellContext`x) - 
    0.5443316906227027 (Rational[6, 7] + $CellContext`x) (
     Rational[10, 7] + $CellContext`x) (2 + $CellContext`x) + 
    0.10366025273841188` (Rational[2, 7] + $CellContext`x) (
      Rational[6, 7] + $CellContext`x) (Rational[10, 7] + $CellContext`x) (
      2 + $CellContext`x) - 
    0.015792500319794185` (Rational[-2, 7] + $CellContext`x) (
     Rational[2, 7] + $CellContext`x) (Rational[6, 7] + $CellContext`x) (
     Rational[10, 7] + $CellContext`x) (2 + $CellContext`x) + 
    0.002004971849239652 (Rational[-6, 7] + $CellContext`x) (
      Rational[-2, 7] + $CellContext`x) (Rational[2, 7] + $CellContext`x) (
      Rational[6, 7] + $CellContext`x) (Rational[10, 7] + $CellContext`x) (
      2 + $CellContext`x) - 
    0.00021818197796465567` (Rational[-10, 7] + $CellContext`x) (
     Rational[-6, 7] + $CellContext`x) (Rational[-2, 7] + $CellContext`x) (
     Rational[2, 7] + $CellContext`x) (Rational[6, 7] + $CellContext`x) (
     Rational[10, 7] + $CellContext`x) (2 + $CellContext`x)}],
  Editable->False]], "Output",
 CellChangeTimes->{3.877949250138406*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColumnForm", "[", 
  RowBox[{"Collect", "[", 
   RowBox[{"lst", ",", "x"}], "]"}], "]"}]], "Input"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{
      RowBox[{"-", "3.8680716547332903`"}], "-", 
      RowBox[{"5.62856387683197`", " ", "x"}]}]},
    {
     RowBox[{"2.2569579820334793`", "\[VeryThinSpace]", "+", 
      RowBox[{"1.7214716872881528`", " ", "x"}], "+", 
      RowBox[{"2.1437603728683694`", " ", 
       SuperscriptBox["x", "2"]}]}]},
    {
     RowBox[{"0.9239007805084931`", "\[VeryThinSpace]", "-", 
      RowBox[{"1.4334303563209811`", " ", "x"}], "-", 
      RowBox[{"0.1890897298003562`", " ", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"0.5443316906227027`", " ", 
       SuperscriptBox["x", "3"]}]}]},
    {
     RowBox[{"0.9964327357773524`", "\[VeryThinSpace]", "-", 
      RowBox[{"1.0079095520770043`", " ", "x"}], "+", 
      RowBox[{"0.5386475547305354`", " ", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"0.07045624953281981`", " ", 
       SuperscriptBox["x", "3"]}], "+", 
      RowBox[{"0.10366025273841188`", " ", 
       SuperscriptBox["x", "4"]}]}]},
    {
     RowBox[{"0.9995899203477379`", "\[VeryThinSpace]", "-", 
      RowBox[{"1.0004375485937533`", " ", "x"}], "+", 
      RowBox[{"0.5054971167414632`", " ", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"0.16069910850307234`", " ", 
       SuperscriptBox["x", "3"]}], "+", 
      RowBox[{"0.035978108510722515`", " ", 
       SuperscriptBox["x", "4"]}], "-", 
      RowBox[{"0.015792500319794185`", " ", 
       SuperscriptBox["x", "5"]}]}]},
    {
     RowBox[{"0.9999334866549798`", "\[VeryThinSpace]", "-", 
      RowBox[{"1.0000252690250626`", " ", "x"}], "+", 
      RowBox[{"0.5009410457670977`", " ", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"0.16631069152135236`", " ", 
       SuperscriptBox["x", "3"]}], "+", 
      RowBox[{"0.04006988779488507`", " ", 
       SuperscriptBox["x", "4"]}], "-", 
      RowBox[{"0.008918311122401093`", " ", 
       SuperscriptBox["x", "5"]}], "+", 
      RowBox[{"0.002004971849239652`", " ", 
       SuperscriptBox["x", "6"]}]}]},
    {
     RowBox[{"0.9999868967219232`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.9999985639915927`", " ", "x"}], "+", 
      RowBox[{"0.5001879044787301`", " ", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"0.1666872621655363`", " ", 
       SuperscriptBox["x", "3"]}], "+", 
      RowBox[{"0.04131664195468311`", " ", 
       SuperscriptBox["x", "4"]}], "-", 
      RowBox[{"0.008294934042502077`", " ", 
       SuperscriptBox["x", "5"]}], "+", 
      RowBox[{"0.0015686078933103407`", " ", 
       SuperscriptBox["x", "6"]}], "-", 
      RowBox[{"0.00021818197796465567`", " ", 
       SuperscriptBox["x", "7"]}]}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  ColumnForm[{-3.8680716547332903` - 5.62856387683197 $CellContext`x, 
    2.2569579820334793` + 1.7214716872881528` $CellContext`x + 
    2.1437603728683694` $CellContext`x^2, 0.9239007805084931 - 
    1.4334303563209811` $CellContext`x - 0.1890897298003562 $CellContext`x^2 - 
    0.5443316906227027 $CellContext`x^3, 0.9964327357773524 - 
    1.0079095520770043` $CellContext`x + 0.5386475547305354 $CellContext`x^2 - 
    0.07045624953281981 $CellContext`x^3 + 
    0.10366025273841188` $CellContext`x^4, 0.9995899203477379 - 
    1.0004375485937533` $CellContext`x + 0.5054971167414632 $CellContext`x^2 - 
    0.16069910850307234` $CellContext`x^3 + 
    0.035978108510722515` $CellContext`x^4 - 
    0.015792500319794185` $CellContext`x^5, 0.9999334866549798 - 
    1.0000252690250626` $CellContext`x + 0.5009410457670977 $CellContext`x^2 - 
    0.16631069152135236` $CellContext`x^3 + 
    0.04006988779488507 $CellContext`x^4 - 
    0.008918311122401093 $CellContext`x^5 + 
    0.002004971849239652 $CellContext`x^6, 0.9999868967219232 - 
    0.9999985639915927 $CellContext`x + 0.5001879044787301 $CellContext`x^2 - 
    0.1666872621655363 $CellContext`x^3 + 
    0.04131664195468311 $CellContext`x^4 - 
    0.008294934042502077 $CellContext`x^5 + 
    0.0015686078933103407` $CellContext`x^6 - 
    0.00021818197796465567` $CellContext`x^7}],
  Editable->False]], "Output",
 CellChangeTimes->{3.877949260839822*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"data", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "7.38905609893065`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["10", "7"]}], ",", "4.172733883598096`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["6", "7"]}], ",", "2.3564184423836605`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["2", "7"]}], ",", "1.33071219744735`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["2", "7"], ",", "0.751477293075286`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["6", "7"], ",", "0.42437284567695`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["10", "7"], ",", "0.2396510364417758`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "0.1353352832366127`"}], "}"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inpln", ":=", 
   RowBox[{"InterpolatingPolynomial", "[", 
    RowBox[{"data", ",", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Collect", "[", 
  RowBox[{"inpln", ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.8779493138303413`*^9, {3.877949346792316*^9, 3.877949468488577*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "7.38905609893065`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["10", "7"]}], ",", "4.172733883598096`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["6", "7"]}], ",", "2.3564184423836605`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["2", "7"]}], ",", "1.33071219744735`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["2", "7"], ",", "0.751477293075286`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["6", "7"], ",", "0.42437284567695`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["10", "7"], ",", "0.2396510364417758`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0.1353352832366127`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8779494768797345`*^9}],

Cell[BoxData[
 RowBox[{"0.9999868967219223`", "\[VeryThinSpace]", "-", 
  RowBox[{"0.9999985639915927`", " ", "x"}], "+", 
  RowBox[{"0.5001879044787296`", " ", 
   SuperscriptBox["x", "2"]}], "-", 
  RowBox[{"0.16668726216553753`", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"0.04131664195468298`", " ", 
   SuperscriptBox["x", "4"]}], "-", 
  RowBox[{"0.008294934042501367`", " ", 
   SuperscriptBox["x", "5"]}], "+", 
  RowBox[{"0.0015686078933103554`", " ", 
   SuperscriptBox["x", "6"]}], "-", 
  RowBox[{"0.00021818197796476369`", " ", 
   SuperscriptBox["x", "7"]}]}]], "Output",
 CellChangeTimes->{3.8779494768828382`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"-", "x"}], "]"}], ",", 
     RowBox[{"nwtn", "[", "x_", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"a", "-", "h"}], ",", 
     RowBox[{"b", "+", "h"}]}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAADAR8FkmSBMD3vD/UQysqQMmfqyAO
jwTAEOLo3rQgKkCGO9sq04sEwOWqIiwqFipAAHM6P12FBMDLzWiHIQEqQPXh
+GdxeATA7KhKEUPXKUDev3W5mV4EwGjmAfVPhClAsHtvXOoqBMACDPk0heEo
QFPzYqKLwwPAzoDfjgGoJ0DS8cBgauMCwMcP4nQ5NCVAX1hHaiMSAsBYDIBN
7yQjQAi0ZWH3RAHAadjDZL5RIUDpHvuKZ2YAwLCcRxtZEh9AsONx/2Mt/78x
Jw/cLBMcQP2n200xa/2/bDJ0/xUnGUCCVnV3NLH7v1s03B5wlBZAJdVfN+wU
+r/cjm/B7moUQDZyOFzcVfi/XF8eHndOEkBk32EXgbT2vxjn6HR3iBBAyza7
rVsb9b/z5kCyPOwNQKCsAqluX/O/qIsb7mzZCkCS8po6NsHxv1iOhSdSRAhA
81YhMTYA8L+mCRszVL8FQBpLrwXYjuy/5Mb5YFCHA0CIiL3VrFjpvyZpGGft
qQFA0wKob/Lc5b/T/bJpFq//P1kdNDahnOK/WTvWH3mf/D936TiNgS3evzYu
8iCYo/k/HUHJGphC179YnABEJQP3PzfZnAGBztC/cJpKohPO9D8Y1lH4lp7D
v+92l6l+pvI/sOrBf0I3qr+Xr1ZiMNfwP/Y7xnsbBak/CDrY+k157j8ypWI2
mybEP3I9uAS9Vus/P52mbSWP0D/1WRQIcLToPytuY6wbltc/UcW/4sci5j82
lmB+OnzePyQ8KRKz3+M/5T6Ne8N14j8aqeGMCvnhP9L1De748uU/YHHmj8Ad
4D+FDO0zxTTpPzApGyH6HN0/x05swyVm7D/ZpCu2O1naPyxUD4kV3e8/RNoy
zRSl1z+sXAgRTozxPwbiy6F9X9U/0/Ca+NhM8z+jDEKD9ifTP9203Emv7/Q/
l482KUtL0T+vju6/T4r2P+8J6h70Sc8/EkoS0bdH+D8igCiqnxDMP1g15Utr
5/k/vy0ngz1byT8vAsph5qn7P1BaU+Mvt8Y/zuR+nCtk/T/N19sp/2PEP1D3
4kC8AP8/pqVtntRvwj+ydSxACmAAQMYZ9XKBh8A/rQe/FNwwAUD51R9dotq9
P4ykufuS/QFAbTXvWKEDuz80Mj2wrdsCQJRZxSPfPLg/zVeYGe6qA0A6Ilfm
rue1P37mi4WLrgNA36GLNsvdtT8udX/xKLIDQG+Kuf3r07U/kJJmyWO5A0Ae
b/LoOsC1P1TNNHnZxwNA2VOh+g2ZtT/cQtHYxOQDQBm5MEyHS7U/7C0KmJse
BEAD6+fguLO0P528/QM5IgRAp0TqOWCqtD9OS/Fv1iUEQLEIIcsLobQ/sGjY
RxEtBECK9o2Ob460P3SjpveGOwRANItEZGlptD/8GENXclgEQAXC6qQkILQ/
rac2ww9cBEAWWnmeDhe0P142Ki+tXwRAcuInsvwNtD/AUxEH6GYEQJI2fSDl
+7M/hI7ftl11BEATy2Ll5tezPzUd0yL7eARAouREfPHOsz/mq8aOmHwEQHB7
jR4AxrM/SMmtZtODBEBzJwV+KbSzP/lXodJwhwRAMs+PN0Srsz+q5pQ+DosE
QIsYOPViorM/W3WIqquOBEBQ2i21hZmzPwwEfBZJkgRA4ryhdayQsz+YvU1t

     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwt1Hs0lHkYB/Axpq110hhJqp2IgwxiilHaPL9Vm1BWqcEht6Q2bVJNKdJo
qNlc6linVbmEGuuWecek00XvqyE7diXGrRrXYhtZjOvYSfbdc/aP5zznc77P
8/z5rIuI2XeYSqFQ9pD1X19KSzD2zKQRBe6auwXmLCTPLzNbdp1GHE+Kq7Qw
YaErW9+xFKk0gr+QOFiiz0KU065wMIVGGPzaWPtCY4Om+zVHYuNoRJnpBrpV
sw3qwXmPb4XQCKazIBdLsEHi+JjgYRaNCHAYLm55ux75TUYUpsp0iZVO3E19
hdaoVU2EHXtPJWI7xsqT2ZYoNMDjmIUhlfDLd42+ZWGBlkgPh8/u0CECe9uV
jnvXIdVa7bUjURSCe9FRZWZoisTvYxcO2S/gbstrX/su/wbNF7/bw46ex3nf
G3oesF6FLnN555wwLe5VOJAuyjJGlu2hLiNG/+B+LtvzGNFGiHNqc7DygAZf
m/6wKtnHEEX2hq9Mks7g077bg84KDdAfnKcVQWum8cshaTasEX10t5xaciJ0
EpdbFZoeeKOHMiduu3Jq1Xj/E4Rv27EETXLXsTmUcTxOYLBlF74IrfauXNSV
MYL7P7e6v+eqLhIKa9rLA1R4VW6gWF2igxTU32ImlIP47g5us3XlAgQynTgF
OQN4/f5is7T8z3BOtTk9yb4Ht9Q8bBAVzQHzO/nqbPdOvFnlo7DVnQWXNzk6
Sa9e461hec8Zr6bApGOv5maeDH8YqGHzRBMgHq695O5Sio8y0ldYdI7DzNaX
8WsWlYDZvHfWpvOjsPF+BOeOVR201YfYlXE/AeSKfrK8/hpmgjz6oqUfwfbE
ofI1NzuBVx5V32Y+BJybYYmuCT1AjRB+aep9D4Nu6fEy3gBMaWOHbef6oXVa
f1QzMQgc0107e5h9kLL07031Tio4qb/vngmzGxp8jssso0bAqMnI3y7wLdjt
p/+8onsMjhdwNjfe64Ty4CUMnzQ1TE0UXaCGtoNi/Lama/ckGLhVx0daK6Bb
qvSsHJsCxJyWtnu1QGXGKP7DtRnwFdPbcM9mMPQybHnkoQHHxT3OcsafEOA8
6B391xz05fQ1GofIwYHaGD5UogW+yFO/+elLePUhMcc2ch7Q9HDizh/rwHd2
AD2jLIDZ71ky9ukXIOHZIb0wCuobE+WFCgioWIwbKR11EL9FqfdFUgNp9x5r
M+d1EMXAoUpQ9AScNm4TV7yjIv5571vcM4+gyT971WipLuJf9fx4UiCFxKHU
lNQHpCdNmp3PSmED75J6vUQXUfJv0OeOSuFGZpT80GPSegunLvhIYX+T0/k3
DeQ8vzr7yCopKN1buuo+kB41+dT/oApG7PWy76ylIb7zc4+vuySQ+2xed4s5
DVG20dnJjRLw8VbHdFiS+UUN/fMzCYiPdnkw7Mm8hLg0UCCBM0Wi2StbyXzi
YLcwWgKfTbb7nwognaWyYH/BoKKYI6MHk66SdfDGMQjhsBwqQkmHP8CrBzAg
/BiLP0aR92quUO0bMEjO6K0+yCNtoFSrrmPgzFSYa+PIeYmxdtllDIbKXmZk
J5Cu+arT4QwGu+QVUQoB6ci8tsgADOb8C1pPXiX36zTKOC8MSoey3Jalkjnt
RIrwWwyCeMLSsgzS8W61v2zA4P//Rf6lu4LbZhj8C9ZbT8s=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->NCache[{{
      Rational[-18, 7], 
      Rational[18, 7]}, {0., 13.084501869946036`}}, {{-2.5714285714285716`, 
    2.5714285714285716`}, {0., 13.084501869946036`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8779495134237747`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"-", "x"}], "]"}], ",", 
     RowBox[{"nwtn", "[", "x_", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"a", "-", 
      RowBox[{"2", "h"}]}], ",", 
     RowBox[{"b", "+", 
      RowBox[{"2", "h"}]}]}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwtlPtXTAkcwKdpZrq3F3qJwmxv9LQ9lPL9yuldDmkr1rO81kEjItvo2IRY
7LIRFdLj9poSTaaS7pVViiiVx1F6mpJRmVmVybD2nP3hcz7n8w98foiKCd3K
ZrFYId/5z0eGZG7nLUhGfMHY9OhCN9x+avnha3ySuXJMkWHEd8MVtul1IlOS
afSX3L1h4IamAr+QBgOSiVa8eS1XuWLVxPWoLxySCddc7lLT4opyXsSZbW8J
hpu7/1PkQVfcYnmvz4MimB3eVHX+QxcMiLpwpt+aYMqdN83VSHDGAeHFRwpD
DUbTaD8vc9gJm7rUAhYa8Zid1YpypywHPDxptXS7CZcRLLWOs5paiGxxrkmU
FocRObZ3/HjEBlsrTi9O1lFn7s93apjItcTYyGavrUo1ZkFuFztWZoY94obq
QBmLmRFo6/jmAh8X3YgcKe35RucN1Jy+HzYH/Vzb3HxrVTRWOJEaxbNQHmDG
smWm6AkrofvlQiN0ax2QzH78mbZ4Te9q1zVAfnokniiZoDV8K7wfnJuBV0ez
/LzLP9Gw06OB0pmGzPH0eQlnFfRAYYtuh40WCs9pDNbs+0jbfVmgJXuqgRmr
zq9NV47QP2VL5rtM5+Ix9fiU25XDdFP1tVChgI3pT3jiGFpKzwpQTi0JYOG4
6eQRi719dPYSn+KS+C+gnZe15vnuTtqeJ0wslU9CkneO6MqpdvptnPtNM91x
0GnuSK5UNtDTxz+EyYIUkKzQW7GaW0anes7TPk58hG55puxAain4+iyq1rIc
AUNpc9p41kOwLdai+NuGIdpwqNbOqx3KI34V6a4eBDsni9Ghtk5w4Yq/2m8d
AD9odMTrfVD8QLWrtKcXmoMjZCN/SGFzxJZTQ1e7QftFEi+7bRgMheYOY6LX
wPfnmlc+GYFlYlrpIHgJrF9WOr5Z+xF651z558P1DgiW7Ursi1cA59DdpGOK
Z6DeLw65FPsJ1lSl+BNMCxhdCgpuuTgBkHmbXRXSDKmMzuOqi5+hf9HJzOjO
RjgYt25d+ukp2KN8oD7SUw+Soc8mKpEKSh7VzuUQf8Pmp3XrZhR+g2Ub/V81
3bwHzh67pW2DLHxfmvfSaKwWhkNpava4GjYE6lJS0zsQbplv7SFnY/ZT5cyR
SQmMhbsy6eocbI2J1Z+uFAN4/zyrnc1F4zl7jDuTb8G9ffVKQsXF+fqPN+dF
l8FezitForYGbkoLE1yqEMHzFb+VNJMERpyzsTixoRA8VUX0Yl0Cif7dzikr
CyGnuL01R49Az7S1qj+9C0FA2IwfMiFQetKsoMqqELTqniy1siPwaGb18LbR
AkAX05bElQQKX8w7YJdUAMUmErlDGoG6d3g3QkryQa+ph5ORQeAz5WLGKysf
4uM1Z/KyCDR46MZz+SsffDvWL+ksILDO6zbf/VA+9JzlJKdUE2iTMspP88kH
I3aoYW8XgeR7z26qmwJhWYJ1cN/37ni3hWijoH9DnrtESuBU76MeQT0FZXcm
158ZJfBrTntxeAkFQXHXKHc1EoveKczjEii4Zd5Ymcsl0dPadUwnhgLjZ/Km
aZok6nfap5ZEUSC19x19q0diva1tmFogBcFdMWqrZpKo5lW0o8KLgvLfL+vX
mJDYV9TqI3CiYLbHfUtrPonWGwcGnSwp+P9fOHe1VZDSmIJ/Ac4YRKY=
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
YUJs3h4ya1sO/v9fICoqjfFVmoP/A38Q2G4=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->NCache[{{
      Rational[-22, 7], 
      Rational[22, 7]}, {-0.038398683371489994`, 
     23.16996932602133}}, {{-3.142857142857143, 
    3.142857142857143}, {-0.038398683371489994`, 23.16996932602133}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8779495220285807`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Pln", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{
   RowBox[{"P", "[", 
    RowBox[{"n", "+", "1"}], "]"}], "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "n"}], ",", 
   RowBox[{"i", "\[GreaterEqual]", "0"}], ",", 
   RowBox[{"i", "--"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"P", "[", "i", "]"}], "=", 
     RowBox[{
      RowBox[{"difftab", "[", 
       RowBox[{"0", ",", "i"}], "]"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", 
         RowBox[{"xdata", "[", "i", "]"}]}], ")"}], 
       RowBox[{"P", "[", 
        RowBox[{"i", "+", "1"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Pln", "=", 
     RowBox[{"Append", "[", 
      RowBox[{"Pln", ",", 
       RowBox[{"P", "[", "i", "]"}]}], "]"}]}], ";"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ColumnForm", "[", "Pln", "]"}]}], "Input"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{"-", "0.00021818197796465567`"}]},
    {
     RowBox[{"0.002004971849239652`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.00021818197796465567`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["10", "7"]}], "+", "x"}], ")"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", "0.015792500319794185`"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.002004971849239652`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.00021818197796465567`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["10", "7"]}], "+", "x"}], ")"}]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["6", "7"]}], "+", "x"}], ")"}]}]}]},
    {
     RowBox[{"0.10366025273841188`", "\[VeryThinSpace]", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.015792500319794185`"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.002004971849239652`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.00021818197796465567`", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                FractionBox["10", "7"]}], "+", "x"}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["6", "7"]}], "+", "x"}], ")"}]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["2", "7"]}], "+", "x"}], ")"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", "0.5443316906227027`"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.10366025273841188`", "\[VeryThinSpace]", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.015792500319794185`"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"0.002004971849239652`", "\[VeryThinSpace]", "-", 
               RowBox[{"0.00021818197796465567`", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox["10", "7"]}], "+", "x"}], ")"}]}]}], ")"}], 
             " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                FractionBox["6", "7"]}], "+", "x"}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["2", "7"]}], "+", "x"}], ")"}]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["2", "7"], "+", "x"}], ")"}]}]}]},
    {
     RowBox[{"2.1437603728683694`", "\[VeryThinSpace]", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.5443316906227027`"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.10366025273841188`", "\[VeryThinSpace]", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "0.015792500319794185`"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"0.002004971849239652`", "\[VeryThinSpace]", "-", 
                  RowBox[{"0.00021818197796465567`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["10", "7"]}], "+", "x"}], ")"}]}]}], ")"}], 
                " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox["6", "7"]}], "+", "x"}], ")"}]}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                FractionBox["2", "7"]}], "+", "x"}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["2", "7"], "+", "x"}], ")"}]}]}], ")"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", "5.62856387683197`"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2.1437603728683694`", "\[VeryThinSpace]", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.5443316906227027`"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"0.10366025273841188`", "\[VeryThinSpace]", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "0.015792500319794185`"}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"0.002004971849239652`", "\[VeryThinSpace]", "-", 
                    RowBox[{"0.00021818197796465567`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["10", "7"]}], "+", "x"}], ")"}]}]}], ")"}], 
                   " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["6", "7"]}], "+", "x"}], ")"}]}]}], ")"}], 
                " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox["2", "7"]}], "+", "x"}], ")"}]}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["2", "7"], "+", "x"}], ")"}]}]}], ")"}]}]}], 
        ")"}]}]}]},
    {
     RowBox[{"7.38905609893065`", "\[VeryThinSpace]", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "5.62856387683197`"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"2.1437603728683694`", "\[VeryThinSpace]", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "0.5443316906227027`"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"0.10366025273841188`", "\[VeryThinSpace]", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.015792500319794185`"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.002004971849239652`", "\[VeryThinSpace]", "-", 
                    RowBox[{"0.00021818197796465567`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["10", "7"]}], "+", "x"}], ")"}]}]}], ")"}], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["6", "7"]}], "+", "x"}], ")"}]}]}], ")"}], 
                   " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["2", "7"]}], "+", "x"}], ")"}]}]}], ")"}], 
                " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox["2", "7"], "+", "x"}], ")"}]}]}], ")"}]}]}], 
           ")"}]}]}], ")"}]}]}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  ColumnForm[{-0.00021818197796465567`, 0.002004971849239652 - 
    0.00021818197796465567` (
     Rational[-10, 7] + $CellContext`x), -0.015792500319794185` + (
      0.002004971849239652 - 
      0.00021818197796465567` (Rational[-10, 7] + $CellContext`x)) (
      Rational[-6, 7] + $CellContext`x), 
    0.10366025273841188` + (-0.015792500319794185` + (0.002004971849239652 - 
        0.00021818197796465567` (Rational[-10, 7] + $CellContext`x)) (
        Rational[-6, 7] + $CellContext`x)) (
      Rational[-2, 7] + $CellContext`x), -0.5443316906227027 + (
      0.10366025273841188` + (-0.015792500319794185` + (0.002004971849239652 - 
          0.00021818197796465567` (Rational[-10, 7] + $CellContext`x)) (
          Rational[-6, 7] + $CellContext`x)) (
        Rational[-2, 7] + $CellContext`x)) (Rational[2, 7] + $CellContext`x), 
    2.1437603728683694` + (
      Rational[6, 7] + $CellContext`x) (-0.5443316906227027 + (
        0.10366025273841188` + (-0.015792500319794185` + (
            0.002004971849239652 - 
            0.00021818197796465567` (Rational[-10, 7] + $CellContext`x)) (
            Rational[-6, 7] + $CellContext`x)) (
          Rational[-2, 7] + $CellContext`x)) (
        Rational[2, 7] + $CellContext`x)), -5.62856387683197 + (
      Rational[10, 7] + $CellContext`x) (
      2.1437603728683694` + (
        Rational[
         6, 7] + $CellContext`x) (-0.5443316906227027 + (
          0.10366025273841188` + (-0.015792500319794185` + (
              0.002004971849239652 - 
              0.00021818197796465567` (Rational[-10, 7] + $CellContext`x)) (
              Rational[-6, 7] + $CellContext`x)) (
            Rational[-2, 7] + $CellContext`x)) (
          Rational[2, 7] + $CellContext`x))), 
    7.38905609893065 + (
      2 + $CellContext`x) (-5.62856387683197 + (
        Rational[10, 7] + $CellContext`x) (
        2.1437603728683694` + (
          Rational[
           6, 7] + $CellContext`x) (-0.5443316906227027 + (
            0.10366025273841188` + (-0.015792500319794185` + (
                0.002004971849239652 - 
                0.00021818197796465567` (Rational[-10, 7] + $CellContext`x)) (
                Rational[-6, 7] + $CellContext`x)) (
              Rational[-2, 7] + $CellContext`x)) (
            Rational[2, 7] + $CellContext`x))))}],
  Editable->False]], "Output",
 CellChangeTimes->{3.8779495313778763`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"P", "[", "0", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"7.38905609893065`", "\[VeryThinSpace]", "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", "+", "x"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "5.62856387683197`"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"2.1437603728683694`", "\[VeryThinSpace]", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "0.5443316906227027`"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"0.10366025273841188`", "\[VeryThinSpace]", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "0.015792500319794185`"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"0.002004971849239652`", "\[VeryThinSpace]", "-", 
                    RowBox[{"0.00021818197796465567`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["10", "7"]}], "+", "x"}], ")"}]}]}], ")"}], 
                  " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox["6", "7"]}], "+", "x"}], ")"}]}]}], ")"}], 
               " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox["2", "7"]}], "+", "x"}], ")"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox["2", "7"], "+", "x"}], ")"}]}]}], ")"}]}]}], 
       ")"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.877949550880603*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"nwtn", "[", "x_", "]"}], ":=", 
   RowBox[{"P", "[", "0", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"m", "=", "70"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"XDAT", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"YDAT", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"nwtnDAT", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"MR", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ",", 
    RowBox[{"i", "\[LessEqual]", "m"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"xdatas", "[", "i", "]"}], "=", 
      RowBox[{"a", "+", 
       RowBox[{"i", "\[Times]", 
        RowBox[{"(", 
         RowBox[{"h", "/", "10"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ydatas", "[", "i", "]"}], "=", 
      RowBox[{"N", "[", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         RowBox[{"xdatas", "[", "i", "]"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      RowBox[{"xdatas", "[", "i", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nwtndatas", "[", "i", "]"}], "=", 
      RowBox[{"nwtn", "[", "i", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"mr", "[", "i", "]"}], "=", 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"ydatas", "[", "i", "]"}], "-", 
        RowBox[{"nwtndatas", "[", "i", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"XDAT", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"XDAT", ",", 
        RowBox[{"xdatas", "[", "i", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"YDAT", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"YDAT", ",", " ", 
        RowBox[{"ydatas", "[", "i", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nwtnDAT", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"nwtnDAT", ",", 
        RowBox[{"nwtndatas", "[", "i", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"MR", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"MR", ",", 
        RowBox[{"mr", "[", "i", "]"}]}], "]"}]}], ";"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", 
   RowBox[{"N", "[", "XDAT", "]"}], "]"}], 
  RowBox[{"MatrixForm", "[", 
   RowBox[{"N", "[", "YDAT", "]"}], "]"}], 
  RowBox[{"MatrixForm", "[", 
   RowBox[{"N", "[", "nwtnDAT", "]"}], "]"}], 
  RowBox[{"MatrixForm", "[", "MR", "]"}]}]}], "Input",
 CellChangeTimes->{{3.877949556124745*^9, 3.8779495562153482`*^9}}],

Cell[BoxData["70"], "Output",
 CellChangeTimes->{3.8779495601775584`*^9}],

Cell[BoxData[
 RowBox[{
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        RowBox[{"-", "2.`"}]},
       {
        RowBox[{"-", "1.9428571428571428`"}]},
       {
        RowBox[{"-", "1.8857142857142857`"}]},
       {
        RowBox[{"-", "1.8285714285714285`"}]},
       {
        RowBox[{"-", "1.7714285714285714`"}]},
       {
        RowBox[{"-", "1.7142857142857142`"}]},
       {
        RowBox[{"-", "1.6571428571428573`"}]},
       {
        RowBox[{"-", "1.6`"}]},
       {
        RowBox[{"-", "1.542857142857143`"}]},
       {
        RowBox[{"-", "1.4857142857142858`"}]},
       {
        RowBox[{"-", "1.4285714285714286`"}]},
       {
        RowBox[{"-", "1.3714285714285714`"}]},
       {
        RowBox[{"-", "1.3142857142857143`"}]},
       {
        RowBox[{"-", "1.2571428571428571`"}]},
       {
        RowBox[{"-", "1.2`"}]},
       {
        RowBox[{"-", "1.1428571428571428`"}]},
       {
        RowBox[{"-", "1.0857142857142856`"}]},
       {
        RowBox[{"-", "1.0285714285714285`"}]},
       {
        RowBox[{"-", "0.9714285714285714`"}]},
       {
        RowBox[{"-", "0.9142857142857143`"}]},
       {
        RowBox[{"-", "0.8571428571428571`"}]},
       {
        RowBox[{"-", "0.8`"}]},
       {
        RowBox[{"-", "0.7428571428571429`"}]},
       {
        RowBox[{"-", "0.6857142857142857`"}]},
       {
        RowBox[{"-", "0.6285714285714286`"}]},
       {
        RowBox[{"-", "0.5714285714285714`"}]},
       {
        RowBox[{"-", "0.5142857142857142`"}]},
       {
        RowBox[{"-", "0.45714285714285713`"}]},
       {
        RowBox[{"-", "0.4`"}]},
       {
        RowBox[{"-", "0.34285714285714286`"}]},
       {
        RowBox[{"-", "0.2857142857142857`"}]},
       {
        RowBox[{"-", "0.22857142857142856`"}]},
       {
        RowBox[{"-", "0.17142857142857143`"}]},
       {
        RowBox[{"-", "0.11428571428571428`"}]},
       {
        RowBox[{"-", "0.05714285714285714`"}]},
       {"0.`"},
       {"0.05714285714285714`"},
       {"0.11428571428571428`"},
       {"0.17142857142857143`"},
       {"0.22857142857142856`"},
       {"0.2857142857142857`"},
       {"0.34285714285714286`"},
       {"0.4`"},
       {"0.45714285714285713`"},
       {"0.5142857142857142`"},
       {"0.5714285714285714`"},
       {"0.6285714285714286`"},
       {"0.6857142857142857`"},
       {"0.7428571428571429`"},
       {"0.8`"},
       {"0.8571428571428571`"},
       {"0.9142857142857143`"},
       {"0.9714285714285714`"},
       {"1.0285714285714285`"},
       {"1.0857142857142856`"},
       {"1.1428571428571428`"},
       {"1.2`"},
       {"1.2571428571428571`"},
       {"1.3142857142857143`"},
       {"1.3714285714285714`"},
       {"1.4285714285714286`"},
       {"1.4857142857142858`"},
       {"1.542857142857143`"},
       {"1.6`"},
       {"1.6571428571428573`"},
       {"1.7142857142857142`"},
       {"1.7714285714285714`"},
       {"1.8285714285714285`"},
       {"1.8857142857142857`"},
       {"1.9428571428571428`"},
       {"2.`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], " ", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {"0.`"},
       {"0.0001481802227649709`"},
       {"0.0002211555622544381`"},
       {"0.00024223454687977153`"},
       {"0.00022952966600886526`"},
       {"0.00019682244930674386`"},
       {"0.0001543209696110992`"},
       {"0.00010931962862237299`"},
       {"0.00006677041557168195`"},
       {"0.00002977419713712237`"},
       {"0.`"},
       {"0.000021960316236135924`"},
       {"0.000036295130421581945`"},
       {"0.00004372751301762179`"},
       {"0.000045315173379911755`"},
       {"0.00004229046205050935`"},
       {"0.00003593541252833177`"},
       {"0.00002748720703760199`"},
       {"0.000018069828730205018`"},
       {"8.648019536483531`*^-6"},
       {"4.440892098500626`*^-16"},
       {"7.294274284586066`*^-6"},
       {"0.0000128522443603174`"},
       {"0.000016477908485024173`"},
       {"0.000018143384218349823`"},
       {"0.00001796499132500351`"},
       {"0.000016175735596757335`"},
       {"0.000013095847779309722`"},
       {"9.102818397721535`*^-6"},
       {"4.6021677519991755`*^-6"},
       {"2.220446049250313`*^-16"},
       {"4.321789479844185`*^-6"},
       {"8.02695406543208`*^-6"},
       {"0.000010842444186476285`"},
       {"0.000012571676308414936`"},
       {"0.000013103278077686298`"},
       {"0.000012415200131954407`"},
       {"0.000010574212700453778`"},
       {"7.730925584814585`*^-6"},
       {"4.110583982308569`*^-6"},
       {"2.220446049250313`*^-16"},
       {"4.268918673666633`*^-6"},
       {"8.338485671055551`*^-6"},
       {"0.000011846750544886042`"},
       {"0.00001445047772552499`"},
       {"0.00001584877565208309`"},
       {"0.000015806485667124726`"},
       {"0.000014176368183016486`"},
       {"0.00001091905558514572`"},
       {"6.119677087301767`*^-6"},
       {"1.1102230246251565`*^-15"},
       {"7.075125366962087`*^-6"},
       {"0.000014598284177325116`"},
       {"0.000021928296998541263`"},
       {"0.000028308667631982143`"},
       {"0.00003289709080989134`"},
       {"0.00003480747492717873`"},
       {"0.0000331659755006819`"},
       {"0.000027182573686501676`"},
       {"0.000016239770278425603`"},
       {"5.828670879282072`*^-16"},
       {"0.000021466596716285258`"},
       {"0.00004753237679366862`"},
       {"0.00007683867571225966`"},
       {"0.0001070968430517405`"},
       {"0.00013486208264767985`"},
       {"0.00015527832343892323`"},
       {"0.00016179232402005472`"},
       {"0.00014583519224842245`"},
       {"0.00009646948078256834`"},
       {"2.1094237467877974`*^-15"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], " ", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {"7.38905609893065`"},
       {"6.978661546402722`"},
       {"6.591060661494798`"},
       {"6.2249874642362135`"},
       {"5.879246288276417`"},
       {"5.552707875605837`"},
       {"5.244305688179307`"},
       {"4.953032424395115`"},
       {"4.677936729051819`"},
       {"4.418120086036885`"},
       {"4.172733883598096`"},
       {"3.9409766426123096`"},
       {"3.7220913987985615`"},
       {"3.5153632303253177`"},
       {"3.3201169227365472`"},
       {"3.1357147635698226`"},
       {"2.961554459463227`"},
       {"2.7970671689479474`"},
       {"2.6417156445012626`"},
       {"2.494992477791509`"},
       {"2.3564184423836605`"},
       {"2.225540928492468`"},
       {"2.1019324646707576`"},
       {"1.9851893216044434`"},
       {"1.8749301934539637`"},
       {"1.770794952435155`"},
       {"1.672443472571778`"},
       {"1.5795545187778448`"},
       {"1.4918246976412703`"},
       {"1.4089674664819067`"},
       {"1.33071219744735`"},
       {"1.2568032935896711`"},
       {"1.1869993540360109`"},
       {"1.1210723855263187`"},
       {"1.0588070577429671`"},
       {"1.`"},
       {"0.9444591369948698`"},
       {"0.8920030614530944`"},
       {"0.8424604416167714`"},
       {"0.7956694616416928`"},
       {"0.751477293075286`"},
       {"0.7097395956891255`"},
       {"0.6703200460356393`"},
       {"0.6330898921891813`"},
       {"0.5979275332171694`"},
       {"0.5647181220077593`"},
       {"0.5333531901568119`"},
       {"0.5037302936889633`"},
       {"0.4757526784556506`"},
       {"0.44932896411722156`"},
       {"0.42437284567695`"},
       {"0.40080281159210923`"},
       {"0.37854187754140095`"},
       {"0.35751733497916927`"},
       {"0.337660513655132`"},
       {"0.31890655732397044`"},
       {"0.30119421191220214`"},
       {"0.28446562545044835`"},
       {"0.26866615911763636`"},
       {"0.25374420877996917`"},
       {"0.2396510364417758`"},
       {"0.22634061105772565`"},
       {"0.21376945818647108`"},
       {"0.20189651799465538`"},
       {"0.19068301114750144`"},
       {"0.1800923121479524`"},
       {"0.17008982971066583`"},
       {"0.16064289378013982`"},
       {"0.15172064882394942`"},
       {"0.14329395305256898`"},
       {"0.1353352832366127`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], " ", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {"7.38905609893065`"},
       {"6.978809726625487`"},
       {"6.591281817057053`"},
       {"6.225229698783093`"},
       {"5.879475817942426`"},
       {"5.552904698055143`"},
       {"5.244460009148918`"},
       {"4.953141744023737`"},
       {"4.6780034994673905`"},
       {"4.418149860234022`"},
       {"4.172733883598096`"},
       {"3.9409546822960735`"},
       {"3.72205510366814`"},
       {"3.5153195028123`"},
       {"3.3200716075631673`"},
       {"3.135672473107772`"},
       {"2.9615185240506987`"},
       {"2.7970396817409098`"},
       {"2.6416975746725324`"},
       {"2.4949838297719724`"},
       {"2.35641844238366`"},
       {"2.2255482227667525`"},
       {"2.101945316915118`"},
       {"1.9852057995129284`"},
       {"1.874948336838182`"},
       {"1.77081291742648`"},
       {"1.6724596483073748`"},
       {"1.5795676146256241`"},
       {"1.491833800459668`"},
       {"1.4089720686496587`"},
       {"1.3307121974473501`"},
       {"1.2567989718001913`"},
       {"1.1869913270819454`"},
       {"1.1210615430821322`"},
       {"1.0587944860666587`"},
       {"0.9999868967219223`"},
       {"0.9444467217947379`"},
       {"0.8919924872403939`"},
       {"0.8424527106911865`"},
       {"0.7956653510577105`"},
       {"0.7514772930752862`"},
       {"0.7097438646077991`"},
       {"0.6703283845213104`"},
       {"0.6331017389397262`"},
       {"0.5979419836948949`"},
       {"0.5647339707834114`"},
       {"0.533368996642479`"},
       {"0.5037444700571463`"},
       {"0.47576359751123576`"},
       {"0.44933508379430886`"},
       {"0.4243728456769489`"},
       {"0.40079573646674227`"},
       {"0.3785272792572236`"},
       {"0.3574954066821707`"},
       {"0.3376322049875`"},
       {"0.31887366023316055`"},
       {"0.30115940443727496`"},
       {"0.28443245947494766`"},
       {"0.26863897654394986`"},
       {"0.25372796900969075`"},
       {"0.2396510364417752`"},
       {"0.22636207765444194`"},
       {"0.21381699056326475`"},
       {"0.20197335667036764`"},
       {"0.19079010799055318`"},
       {"0.18022717423060008`"},
       {"0.17024510803410475`"},
       {"0.16080468610415988`"},
       {"0.15186648401619784`"},
       {"0.14339042253335155`"},
       {"0.1353352832366106`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]}]], "Output",
 CellChangeTimes->{3.877949560187393*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"0.00024223454687977153`", "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"-", "x"}], "]"}], "-", 
     RowBox[{"nwtn", "[", "x", "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8779496153928895`*^9, 3.8779496158965197`*^9}}],

Cell[BoxData["0.00024223454687977153`"], "Output",
 CellChangeTimes->{3.877949617486729*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
R///917g+5N2f9TQrv8BV4zvEg==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-2, 2}, {0., 0.00024226952270200997`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.877949617566744*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"-", "x"}], "]"}], "-", 
       RowBox[{"nwtn", "[", "x", "]"}]}], "]"}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], "\[LessEqual]", "x", "\[LessEqual]", "2"}]}], "}"}],
    ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{"0.0001620137378415265`", ",", 
   RowBox[{"{", 
    RowBox[{"2", "\[Rule]", "1.8204255437759231`"}], "}"}]}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    UnderoverscriptBox["\[Product]", 
     RowBox[{"i", "=", "0"}], "n"], 
    RowBox[{"(", 
     RowBox[{"x", "-", 
      RowBox[{"xdata", "[", "i", "]"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8779496308082666`*^9, 3.87794963633954*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0001620137378415265`", ",", 
   RowBox[{"{", 
    RowBox[{"2", "\[Rule]", "1.8204255437759231`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8779496374428487`*^9, 3.877950675198245*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-2, 2}, {-7.282545199876883, 1.474903957195685}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8779496374428487`*^9, 3.8779506754282703`*^9}],

Cell[BoxData[
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Product]", 
       RowBox[{"i", "=", "0"}], "n"], 
      RowBox[{"(", 
       RowBox[{"x", "-", 
        RowBox[{"xdata", "[", "i", "]"}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], "\[LessEqual]", "x", "\[LessEqual]", "0"}]}], "}"}],
    ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.877949681795949*^9, 3.877949743401513*^9}, {
  3.8779503849820642`*^9, 3.877950393962747*^9}, {3.8779504326170216`*^9, 
  3.8779504395543375`*^9}, {3.877950483485901*^9, 3.877950489990252*^9}, {
  3.877950598162818*^9, 3.877950616090652*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1.4749040152533832`", ",", 
    RowBox[{"{", 
     RowBox[{"2", "\[Rule]", 
      RowBox[{"-", "1.2074687411948342`"}]}], "}"}]}], "}"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8779506046463366`*^9, 3.877950604673811*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   FractionBox[
    SuperscriptBox["\[ExponentialE]", "2"], 
    RowBox[{"8", "!"}]], "\[Times]", "1.4749040152533832`"}]}]], "Input",
 CellChangeTimes->{{3.8779506506658516`*^9, 3.8779506567278876`*^9}, 
   3.8779508428044243`*^9}],

Cell[BoxData[
 RowBox[{"0.0002702913816777112`", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.877950926114408*^9, 3.877950926146463*^9}}],

Cell[BoxData[{
 RowBox[{"n1", "=", "8"}], "\[IndentingNewLine]", 
 RowBox[{"b", "=", "2"}], "\[IndentingNewLine]", 
 RowBox[{"a", "=", 
  RowBox[{"-", "2"}]}], "\[IndentingNewLine]", 
 RowBox[{"h", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"b", "-", "a"}], ")"}], "/", "n1"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"XDT", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"YDT", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ",", 
    RowBox[{"i", "\[LessEqual]", "n1"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"xdata1", "[", "i", "]"}], "=", 
      RowBox[{"a", "+", 
       RowBox[{"i", "\[Times]", "h"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ydata1", "[", "i", "]"}], "=", 
      RowBox[{"N", "[", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         RowBox[{"xdata1", "[", "i", "]"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"XDT", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"XDT", ",", 
        RowBox[{"xdata1", "[", "i", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"YDT", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"YDT", ",", 
        RowBox[{"ydata1", "[", "i", "]"}]}], "]"}]}], ";"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Array", "[", 
   RowBox[{"xdata1", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n1", "+", "1"}], ",", "0"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Array", "[", 
   RowBox[{"ydata1", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n1", "+", "1"}], ",", "0"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "XDT", "]"}], 
  RowBox[{"MatrixForm", "[", "YDT", "]"}]}]}], "Input",
 CellChangeTimes->{{3.8779508707314987`*^9, 3.8779508708438444`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{"-", "2"}]},
        {
         RowBox[{"-", 
          FractionBox["3", "2"]}]},
        {
         RowBox[{"-", "1"}]},
        {
         RowBox[{"-", 
          FractionBox["1", "2"]}]},
        {"0"},
        {
         FractionBox["1", "2"]},
        {"1"},
        {
         FractionBox["3", "2"]},
        {"2"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], " ", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"7.38905609893065`"},
        {"4.4816890703380645`"},
        {"2.718281828459045`"},
        {"1.6487212707001282`"},
        {"1.`"},
        {"0.6065306597126334`"},
        {"0.36787944117144233`"},
        {"0.22313016014842982`"},
        {"0.1353352832366127`"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.877950917779617*^9, 3.8779509178117485`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Array", "[", 
   RowBox[{"difftab", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n1", "+", "1"}], ",", 
      RowBox[{"n1", "+", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"k", "=", "1"}], ",", 
    RowBox[{"k", "\[LessEqual]", "n1"}], ",", 
    RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "n1"}], ",", 
      RowBox[{"i", "\[GreaterEqual]", 
       RowBox[{"n1", "-", "k"}]}], ",", 
      RowBox[{"i", "--"}], ",", 
      RowBox[{
       RowBox[{"difftab", "[", 
        RowBox[{"i", ",", "k"}], "]"}], "=", "\"\<\>\""}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ",", 
    RowBox[{"i", "\[LessEqual]", "n1"}], ",", 
    RowBox[{"i", "++"}], ",", 
    RowBox[{
     RowBox[{"difftab", "[", 
      RowBox[{"i", ",", "0"}], "]"}], "=", 
     RowBox[{"ydata1", "[", "i", "]"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", " ", "[", 
   RowBox[{
    RowBox[{"k", "=", "1"}], ",", " ", 
    RowBox[{"k", "\[LessEqual]", "n1"}], ",", 
    RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "0"}], ",", 
      RowBox[{"i", "\[LessEqual]", 
       RowBox[{"n1", "-", "k"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"difftab", "[", 
        RowBox[{"i", ",", "k"}], "]"}], "=", 
       FractionBox[
        RowBox[{
         RowBox[{"difftab", "[", 
          RowBox[{
           RowBox[{"i", "+", "1"}], ",", 
           RowBox[{"k", "-", "1"}]}], "]"}], "-", 
         RowBox[{"difftab", "[", 
          RowBox[{"i", ",", 
           RowBox[{"k", "-", "1"}]}], "]"}]}], 
        RowBox[{
         RowBox[{"xdata1", "[", 
          RowBox[{"i", "+", "k"}], "]"}], "-", 
         RowBox[{"xdata1", "[", "i", "]"}]}]]}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tab1", " ", "=", " ", 
   RowBox[{"Array", "[", 
    RowBox[{"difftab", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"n", "+", "1"}], ",", 
       RowBox[{"n1", "+", "1"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"PaddedForm", "[", 
  RowBox[{
   RowBox[{"TableForm", "[", "tab1", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "5"}], "}"}]}], "]"}]}], "Input"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      InterpretationBox["\<\" 7.38906\"\>",
       7.38905609893065,
       AutoDelete->True], 
      InterpretationBox["\<\"-5.81473\"\>",
       -5.814734057185172,
       AutoDelete->True], 
      InterpretationBox["\<\" 2.28792\"\>",
       2.287919573427133,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.60015\"\>",
       -0.6001508034579519,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.11807\"\>",
       0.11807047035476675`,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.01858\"\>",
       -0.018582844031163576`,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.00244\"\>",
       0.002437259793868235,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.00027\"\>",
       -0.0002739962866291713,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.00003\"\>",
       0.000026952284535275267`,
       AutoDelete->True]},
     {
      InterpretationBox["\<\" 4.48169\"\>",
       4.4816890703380645`,
       AutoDelete->True], 
      InterpretationBox["\<\"-3.52681\"\>",
       -3.526814483758039,
       AutoDelete->True], 
      InterpretationBox["\<\" 1.38769\"\>",
       1.387693368240205,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.36401\"\>",
       -0.3640098627484184,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.07161\"\>",
       0.07161336027685782,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.01127\"\>",
       -0.011271064649558871`,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.00148\"\>",
       0.0014782727906661353`,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.00017\"\>",
       -0.00016618714848807021`,
       AutoDelete->True], "\<\"\"\>"},
     {
      InterpretationBox["\<\" 2.71828\"\>",
       2.718281828459045,
       AutoDelete->True], 
      InterpretationBox["\<\"-2.13912\"\>",
       -2.139121115517834,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.84168\"\>",
       0.8416785741175774,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.22078\"\>",
       -0.22078314219470277`,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.04344\"\>",
       0.04343569865296064,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.00684\"\>",
       -0.006836246277560465,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.00090\"\>",
       0.0008966177709578895,
       AutoDelete->True], "\<\"\"\>", "\<\"\"\>"},
     {
      InterpretationBox["\<\" 1.64872\"\>",
       1.6487212707001282`,
       AutoDelete->True], 
      InterpretationBox["\<\"-1.29744\"\>",
       -1.2974425414002564`,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.51050\"\>",
       0.5105038608255232,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.13391\"\>",
       -0.1339117448887815,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.02635\"\>",
       0.026345082959059477`,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.00415\"\>",
       -0.004146392964686796,
       AutoDelete->True], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {
      InterpretationBox["\<\" 1.00000\"\>",
       1.,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.78694\"\>",
       -0.7869386805747332,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.30964\"\>",
       0.30963624349235097`,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.08122\"\>",
       -0.08122157897066254,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.01598\"\>",
       0.015979100547342487`,
       AutoDelete->True], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {
      InterpretationBox["\<\" 0.60653\"\>",
       0.6065306597126334,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.47730\"\>",
       -0.4773024370823822,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.18780\"\>",
       0.18780387503635715`,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.04926\"\>",
       -0.049263377875977565`,
       AutoDelete->
        True], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {
      InterpretationBox["\<\" 0.36788\"\>",
       0.36787944117144233`,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.28950\"\>",
       -0.28949856204602503`,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.11391\"\>",
       0.1139088082223908,
       AutoDelete->
        True], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>"},
     {
      InterpretationBox["\<\" 0.22313\"\>",
       0.22313016014842982`,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.17559\"\>",
       -0.17558975382363423`,
       AutoDelete->
        True], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]],
  PaddedForm[#, {6, 5}]& ]], "Output",
 CellChangeTimes->{3.877950888833196*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["f", 
      RowBox[{"(", "7", ")"}]], 
     RowBox[{"(", "\[Xi]", ")"}]}], ")"}], "/", "8"}], "!=", 
  "0.00003"}], "\[IndentingNewLine]", 
 RowBox[{"\[Xi]", "=", 
  RowBox[{"0.00003", "*", 
   RowBox[{"8", "!"}]}]}]}], "Input",
 CellChangeTimes->{{3.877950939557418*^9, 3.8779509596695013`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["f", "7"], " ", "\[Xi]"}], "8"], "\[NotEqual]", 
  "0.00003`"}]], "Output",
 CellChangeTimes->{3.8779509644982276`*^9}]
}, Open  ]],

Cell[BoxData[{"1.2096`", "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"1.2096`", "*", 
    RowBox[{
     UnderoverscriptBox["\[Product]", 
      RowBox[{"i", "=", "0"}], "n"], 
     RowBox[{"(", 
      RowBox[{"x", "-", 
       RowBox[{"xdata", "[", "i", "]"}]}], ")"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8779509682506475`*^9, 3.8779509910608096`*^9}}],

Cell[BoxData["1.2096`"], "Output",
 CellChangeTimes->{3.87795106740686*^9, 3.877951282224009*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
wmn7mTlBvyG2yl+jAv/f+3H4/+/H/w80Mr88
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-2, 2}, {-8.808966673771078, 1.7840438266239007`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.87795106740686*^9, 3.8779512823308516`*^9}],

Cell[BoxData[
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1.2096`", "*", 
      RowBox[{
       UnderoverscriptBox["\[Product]", 
        RowBox[{"i", "=", "0"}], "n"], 
       RowBox[{"(", 
        RowBox[{"x", "-", 
         RowBox[{"xdata", "[", "i", "]"}]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"-", "1"}]}]}], "}"}], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.877951106209038*^9, 3.8779511927360954`*^9}, {
  3.877951270445492*^9, 3.87795129633077*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1.7840438968504941`", ",", 
    RowBox[{"{", 
     RowBox[{"2", "\[Rule]", 
      RowBox[{"-", "1.2074687388121959`"}]}], "}"}]}], "}"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.877951303026374*^9, 3.8779513030530157`*^9}}]
},
WindowSize->{584, 697},
WindowMargins->{{17, Automatic}, {Automatic, 17}},
Magnification:>0.9 Inherited,
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (December 4, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1937, 59, 270, "Input"],
Cell[2520, 83, 70, 1, 28, "Output"],
Cell[2593, 86, 70, 1, 28, "Output"],
Cell[2666, 89, 87, 2, 28, "Output"],
Cell[2756, 93, 90, 2, 49, "Output"]
}, Open  ]],
Cell[2861, 98, 1922, 62, 208, "Input"],
Cell[CellGroupData[{
Cell[4808, 164, 2680, 82, 210, "Input"],
Cell[7491, 248, 4593, 138, 138, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12121, 391, 1685, 51, 162, "Input"],
Cell[13809, 444, 13106, 347, 170, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26952, 796, 123, 3, 24, "Input"],
Cell[27078, 801, 4268, 95, 111, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31383, 901, 1295, 38, 196, "Input"],
Cell[32681, 941, 938, 29, 119, "Output"],
Cell[33622, 972, 640, 15, 41, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34299, 992, 330, 11, 24, "Input"],
Cell[34632, 1005, 4564, 88, 196, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39233, 1098, 374, 13, 24, "Input"],
Cell[39610, 1113, 5012, 95, 195, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44659, 1213, 933, 29, 90, "Input"],
Cell[45595, 1244, 10112, 260, 194, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55744, 1509, 54, 1, 24, "Input"],
Cell[55801, 1512, 1831, 50, 135, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57669, 1567, 2646, 75, 252, "Input"],
Cell[60318, 1644, 73, 1, 25, "Output"],
Cell[60394, 1647, 12460, 389, 1034, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72891, 2041, 427, 11, 45, "Input"],
Cell[73321, 2054, 92, 1, 25, "Output"],
Cell[73416, 2057, 21066, 356, 198, "Output"]
}, Open  ]],
Cell[94497, 2416, 399, 13, 26, "Input"],
Cell[94899, 2431, 575, 17, 69, InheritFromParent],
Cell[95477, 2450, 233, 5, 25, "Output"],
Cell[95713, 2457, 21684, 366, 192, "Output"],
Cell[117400, 2825, 697, 18, 49, "Input"],
Cell[118100, 2845, 295, 8, 45, InheritFromParent],
Cell[118398, 2855, 313, 7, 87, "Input"],
Cell[118714, 2864, 149, 2, 45, InheritFromParent],
Cell[118866, 2868, 1951, 59, 243, "Input"],
Cell[120820, 2929, 1996, 63, 207, InheritFromParent],
Cell[CellGroupData[{
Cell[122841, 2996, 2620, 80, 213, "Input"],
Cell[125464, 3078, 5390, 162, 135, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130891, 3245, 382, 12, 47, "Input"],
Cell[131276, 3259, 189, 6, 45, "Output"]
}, Open  ]],
Cell[131480, 3268, 478, 13, 69, InheritFromParent],
Cell[131961, 3283, 97, 1, 25, "Output"],
Cell[132061, 3286, 21658, 365, 192, "Output"],
Cell[153722, 3653, 604, 17, 49, "Input"],
Cell[154329, 3672, 295, 8, 45, InheritFromParent]
}
]
*)

(* End of internal cache information *)
