(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    174794,       4076]
NotebookOptionsPosition[    172136,       3989]
NotebookOutlinePosition[    172480,       4004]
CellTagsIndexPosition[    172437,       4001]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{"n", "=", "7"}], "\[IndentingNewLine]", 
 RowBox[{"b", "=", "2"}], "\[IndentingNewLine]", 
 RowBox[{"a", "=", 
  RowBox[{"-", "2"}]}], "\[IndentingNewLine]", 
 RowBox[{"h", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"b", "-", "a"}], ")"}], "/", "n"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"XDT", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"YDT", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ",", 
    RowBox[{"i", "\[LessEqual]", "n"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"xdata", "[", "i", "]"}], "=", 
      RowBox[{"a", "+", 
       RowBox[{"i", "\[Times]", "h"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ydata", "[", "i", "]"}], "=", 
      RowBox[{"N", "[", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"-", 
          RowBox[{"xdata", "[", "i", "]"}]}], "]"}], "+", 
        RowBox[{"0.1", "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"i", "+", "2"}]]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"XDT", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"XDT", ",", 
        RowBox[{"xdata", "[", "i", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"YDT", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"YDT", ",", 
        RowBox[{"ydata", "[", "i", "]"}]}], "]"}]}], ";"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Array", "[", 
   RowBox[{"xdata", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "+", "1"}], ",", "0"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Array", "[", 
   RowBox[{"ydata", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "+", "1"}], ",", "0"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "XDT", "]"}], 
  RowBox[{"MatrixForm", "[", "YDT", "]"}]}]}], "Input",
 CellChangeTimes->{{3.8779553484035807`*^9, 3.8779553637365713`*^9}, {
  3.87795548626597*^9, 3.8779554867138524`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        RowBox[{"-", "2"}]},
       {
        RowBox[{"-", 
         FractionBox["10", "7"]}]},
       {
        RowBox[{"-", 
         FractionBox["6", "7"]}]},
       {
        RowBox[{"-", 
         FractionBox["2", "7"]}]},
       {
        FractionBox["2", "7"]},
       {
        FractionBox["6", "7"]},
       {
        FractionBox["10", "7"]},
       {"2"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], " ", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {"7.48905609893065`"},
       {"4.072733883598096`"},
       {"2.4564184423836606`"},
       {"1.2307121974473498`"},
       {"0.851477293075286`"},
       {"0.32437284567695`"},
       {"0.3396510364417758`"},
       {"0.0353352832366127`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Array", "[", 
   RowBox[{"difftab", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "+", "1"}], ",", 
      RowBox[{"n", "+", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"k", "=", "1"}], ",", 
    RowBox[{"k", "\[LessEqual]", "n"}], ",", 
    RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "n"}], ",", 
      RowBox[{"i", "\[GreaterEqual]", 
       RowBox[{"n", "-", "k"}]}], ",", 
      RowBox[{"i", "--"}], ",", 
      RowBox[{
       RowBox[{"difftab", "[", 
        RowBox[{"i", ",", "k"}], "]"}], "=", "\"\<\>\""}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ",", 
    RowBox[{"i", "\[LessEqual]", "n"}], ",", 
    RowBox[{"i", "++"}], ",", 
    RowBox[{
     RowBox[{"difftab", "[", 
      RowBox[{"i", ",", "0"}], "]"}], "=", 
     RowBox[{"ydata", "[", "i", "]"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", " ", "[", 
   RowBox[{
    RowBox[{"k", "=", "1"}], ",", " ", 
    RowBox[{"k", "\[LessEqual]", "n"}], ",", 
    RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "0"}], ",", 
      RowBox[{"i", "\[LessEqual]", 
       RowBox[{"n", "-", "k"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"difftab", "[", 
        RowBox[{"i", ",", "k"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"difftab", "[", 
           RowBox[{
            RowBox[{"i", "+", "1"}], ",", 
            RowBox[{"k", "-", "1"}]}], "]"}], "-", 
          RowBox[{"difftab", "[", 
           RowBox[{"i", ",", 
            RowBox[{"k", "-", "1"}]}], "]"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"xdata", "[", 
           RowBox[{"i", "+", "k"}], "]"}], "-", 
          RowBox[{"xdata", "[", "i", "]"}]}], ")"}]}]}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tab1", " ", "=", " ", 
   RowBox[{"Array", "[", 
    RowBox[{"difftab", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"n", "+", "1"}], ",", 
       RowBox[{"n", "+", "1"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"PaddedForm", "[", 
  RowBox[{
   RowBox[{"TableForm", "[", "tab1", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "5"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.877955495248001*^9, 3.8779554952981663`*^9}, 
   3.877955629285359*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "14.9781121978613`"}], ",", 
   RowBox[{"-", "5.818191262282995`"}], ",", 
   RowBox[{"-", "2.1055015220431375`"}], ",", 
   RowBox[{"-", "0.3516320564135285`"}], ",", "0.24327922659293882`", ",", 
   "0.2780338677231`", ",", "0.485215766345394`", ",", 
   "0.0706705664732254`"}], "}"}]], "Output",
 CellChangeTimes->{3.8779556329566755`*^9, 3.877956057207257*^9}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      InterpretationBox["\<\" 7.48906\"\>",
       7.48905609893065,
       AutoDelete->True], 
      InterpretationBox["\<\"-5.97856\"\>",
       -5.978563876831969,
       AutoDelete->True], 
      InterpretationBox["\<\" 2.75626\"\>",
       2.7562603728683683`,
       AutoDelete->True], 
      InterpretationBox["\<\"-1.25892\"\>",
       -1.2589150239560356`,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.72892\"\>",
       0.7289206694050786,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.45347\"\>",
       -0.4534747919864609,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.25732\"\>",
       0.2573196419881286,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.12788\"\>",
       -0.12787551704740915`,
       AutoDelete->True]},
     {
      InterpretationBox["\<\" 4.07273\"\>",
       4.072733883598096,
       AutoDelete->True], 
      InterpretationBox["\<\"-2.82855\"\>",
       -2.8285520221252627`,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.59812\"\>",
       0.5981203318008789,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.40719\"\>",
       0.40718936325557253`,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.56672\"\>",
       -0.5667215934133814,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.42876\"\>",
       0.4287639805442658,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.25418\"\>",
       -0.254182426201508,
       AutoDelete->True], "\<\"\"\>"},
     {
      InterpretationBox["\<\" 2.45642\"\>",
       2.4564184423836606`,
       AutoDelete->True], 
      InterpretationBox["\<\"-2.14499\"\>",
       -2.144985928638544,
       AutoDelete->True], 
      InterpretationBox["\<\" 1.29616\"\>",
       1.2961592402390032`,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.88817\"\>",
       -0.8881742788321564,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.65832\"\>",
       0.6583183509988066,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.44272\"\>",
       -0.44271862357519004`,
       AutoDelete->True], "\<\"\"\>", "\<\"\"\>"},
     {
      InterpretationBox["\<\" 1.23071\"\>",
       1.2307121974473498`,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.66366\"\>",
       -0.6636610826511118,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.22643\"\>",
       -0.22642523775897916`,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.61655\"\>",
       0.6165533805936871,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.60659\"\>",
       -0.606592002073165,
       AutoDelete->True], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {
      InterpretationBox["\<\" 0.85148\"\>",
       0.851477293075286,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.92243\"\>",
       -0.922432782947088,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.83052\"\>",
       0.8305234146873415,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.76994\"\>",
       -0.7699426241449758,
       AutoDelete->True], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {
      InterpretationBox["\<\" 0.32437\"\>",
       0.32437284567695,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.02674\"\>",
       0.02673683383844512,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.48938\"\>",
       -0.48937822670404557`,
       AutoDelete->
        True], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {
      InterpretationBox["\<\" 0.33965\"\>",
       0.3396510364417758,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.53255\"\>",
       -0.5325525681090355,
       AutoDelete->
        True], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>"},
     {
      InterpretationBox["\<\" 0.03534\"\>",
       0.0353352832366127,
       AutoDelete->
        True], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]],
  PaddedForm[#, {6, 5}]& ]], "Output",
 CellChangeTimes->{3.8779556329566755`*^9, 3.87795605721239*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pln", " ", "=", " ", 
   RowBox[{
    RowBox[{"difftab", "[", 
     RowBox[{"0", ",", "0"}], "]"}], "+", 
    RowBox[{
     RowBox[{"difftab", "[", 
      RowBox[{"0", ",", "1"}], "]"}], "\[Times]", 
     RowBox[{"(", 
      RowBox[{"x", "-", 
       RowBox[{"xdata", "[", "0", "]"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "7"}], ";", 
  RowBox[{"lst", "=", 
   RowBox[{"List", "[", "pln", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"k", "=", "2"}], ",", 
    RowBox[{"k", "\[LessEqual]", "n"}], ",", 
    RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pln", "=", 
      RowBox[{
       RowBox[{"lst", "[", 
        RowBox[{"[", 
         RowBox[{"k", "-", "1"}], "]"}], "]"}], "+", 
       RowBox[{
        RowBox[{"difftab", "[", 
         RowBox[{"0", ",", "k"}], "]"}], "\[Times]", 
        RowBox[{
         UnderoverscriptBox["\[Product]", 
          RowBox[{"i", "=", "0"}], 
          RowBox[{"k", "-", "1"}]], 
         RowBox[{"(", 
          RowBox[{"x", "-", 
           RowBox[{"xdata", "[", "i", "]"}]}], ")"}]}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"lst", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"lst", ",", "pln"}], "]"}]}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nwtn", "[", "x_", "]"}], ":=", 
   RowBox[{"N", "[", 
    RowBox[{"lst", "[", 
     RowBox[{"[", "n", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ColumnForm", "[", "lst", "]"}]}], "Input"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{"7.48905609893065`", "\[VeryThinSpace]", "-", 
      RowBox[{"5.978563876831969`", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}]}]},
    {
     RowBox[{"7.48905609893065`", "\[VeryThinSpace]", "-", 
      RowBox[{"5.978563876831969`", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "+", 
      RowBox[{"2.7562603728683683`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}]}]},
    {
     RowBox[{"7.48905609893065`", "\[VeryThinSpace]", "-", 
      RowBox[{"5.978563876831969`", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "+", 
      RowBox[{"2.7562603728683683`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "-", 
      RowBox[{"1.2589150239560356`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}]}]},
    {
     RowBox[{"7.48905609893065`", "\[VeryThinSpace]", "-", 
      RowBox[{"5.978563876831969`", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "+", 
      RowBox[{"2.7562603728683683`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "-", 
      RowBox[{"1.2589150239560356`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "+", 
      RowBox[{"0.7289206694050786`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["2", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}]}]},
    {
     RowBox[{"7.48905609893065`", "\[VeryThinSpace]", "-", 
      RowBox[{"5.978563876831969`", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "+", 
      RowBox[{"2.7562603728683683`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "-", 
      RowBox[{"1.2589150239560356`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "+", 
      RowBox[{"0.7289206694050786`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["2", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "-", 
      RowBox[{"0.4534747919864609`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["2", "7"]}], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["2", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}]}]},
    {
     RowBox[{"7.48905609893065`", "\[VeryThinSpace]", "-", 
      RowBox[{"5.978563876831969`", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "+", 
      RowBox[{"2.7562603728683683`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "-", 
      RowBox[{"1.2589150239560356`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "+", 
      RowBox[{"0.7289206694050786`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["2", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "-", 
      RowBox[{"0.4534747919864609`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["2", "7"]}], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["2", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "+", 
      RowBox[{"0.2573196419881286`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["6", "7"]}], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["2", "7"]}], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["2", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}]}]},
    {
     RowBox[{"7.48905609893065`", "\[VeryThinSpace]", "-", 
      RowBox[{"5.978563876831969`", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "+", 
      RowBox[{"2.7562603728683683`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "-", 
      RowBox[{"1.2589150239560356`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "+", 
      RowBox[{"0.7289206694050786`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["2", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "-", 
      RowBox[{"0.4534747919864609`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["2", "7"]}], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["2", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "+", 
      RowBox[{"0.2573196419881286`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["6", "7"]}], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["2", "7"]}], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["2", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}], "-", 
      RowBox[{"0.12787551704740915`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["10", "7"]}], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["6", "7"]}], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["2", "7"]}], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["2", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}]}]}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  ColumnForm[{
   7.48905609893065 - 5.978563876831969 (2 + $CellContext`x), 
    7.48905609893065 - 5.978563876831969 (2 + $CellContext`x) + 
    2.7562603728683683` (Rational[10, 7] + $CellContext`x) (
      2 + $CellContext`x), 7.48905609893065 - 
    5.978563876831969 (2 + $CellContext`x) + 
    2.7562603728683683` (Rational[10, 7] + $CellContext`x) (
      2 + $CellContext`x) - 
    1.2589150239560356` (Rational[6, 7] + $CellContext`x) (
     Rational[10, 7] + $CellContext`x) (2 + $CellContext`x), 7.48905609893065 - 
    5.978563876831969 (2 + $CellContext`x) + 
    2.7562603728683683` (Rational[10, 7] + $CellContext`x) (
      2 + $CellContext`x) - 
    1.2589150239560356` (Rational[6, 7] + $CellContext`x) (
     Rational[10, 7] + $CellContext`x) (2 + $CellContext`x) + 
    0.7289206694050786 (Rational[2, 7] + $CellContext`x) (
      Rational[6, 7] + $CellContext`x) (Rational[10, 7] + $CellContext`x) (
      2 + $CellContext`x), 7.48905609893065 - 
    5.978563876831969 (2 + $CellContext`x) + 
    2.7562603728683683` (Rational[10, 7] + $CellContext`x) (
      2 + $CellContext`x) - 
    1.2589150239560356` (Rational[6, 7] + $CellContext`x) (
     Rational[10, 7] + $CellContext`x) (2 + $CellContext`x) + 
    0.7289206694050786 (Rational[2, 7] + $CellContext`x) (
      Rational[6, 7] + $CellContext`x) (Rational[10, 7] + $CellContext`x) (
      2 + $CellContext`x) - 
    0.4534747919864609 (Rational[-2, 7] + $CellContext`x) (
     Rational[2, 7] + $CellContext`x) (Rational[6, 7] + $CellContext`x) (
     Rational[10, 7] + $CellContext`x) (2 + $CellContext`x), 7.48905609893065 - 
    5.978563876831969 (2 + $CellContext`x) + 
    2.7562603728683683` (Rational[10, 7] + $CellContext`x) (
      2 + $CellContext`x) - 
    1.2589150239560356` (Rational[6, 7] + $CellContext`x) (
     Rational[10, 7] + $CellContext`x) (2 + $CellContext`x) + 
    0.7289206694050786 (Rational[2, 7] + $CellContext`x) (
      Rational[6, 7] + $CellContext`x) (Rational[10, 7] + $CellContext`x) (
      2 + $CellContext`x) - 
    0.4534747919864609 (Rational[-2, 7] + $CellContext`x) (
     Rational[2, 7] + $CellContext`x) (Rational[6, 7] + $CellContext`x) (
     Rational[10, 7] + $CellContext`x) (2 + $CellContext`x) + 
    0.2573196419881286 (Rational[-6, 7] + $CellContext`x) (
      Rational[-2, 7] + $CellContext`x) (Rational[2, 7] + $CellContext`x) (
      Rational[6, 7] + $CellContext`x) (Rational[10, 7] + $CellContext`x) (
      2 + $CellContext`x), 7.48905609893065 - 
    5.978563876831969 (2 + $CellContext`x) + 
    2.7562603728683683` (Rational[10, 7] + $CellContext`x) (
      2 + $CellContext`x) - 
    1.2589150239560356` (Rational[6, 7] + $CellContext`x) (
     Rational[10, 7] + $CellContext`x) (2 + $CellContext`x) + 
    0.7289206694050786 (Rational[2, 7] + $CellContext`x) (
      Rational[6, 7] + $CellContext`x) (Rational[10, 7] + $CellContext`x) (
      2 + $CellContext`x) - 
    0.4534747919864609 (Rational[-2, 7] + $CellContext`x) (
     Rational[2, 7] + $CellContext`x) (Rational[6, 7] + $CellContext`x) (
     Rational[10, 7] + $CellContext`x) (2 + $CellContext`x) + 
    0.2573196419881286 (Rational[-6, 7] + $CellContext`x) (
      Rational[-2, 7] + $CellContext`x) (Rational[2, 7] + $CellContext`x) (
      Rational[6, 7] + $CellContext`x) (Rational[10, 7] + $CellContext`x) (
      2 + $CellContext`x) - 
    0.12787551704740915` (Rational[-10, 7] + $CellContext`x) (
     Rational[-6, 7] + $CellContext`x) (Rational[-2, 7] + $CellContext`x) (
     Rational[2, 7] + $CellContext`x) (Rational[6, 7] + $CellContext`x) (
     Rational[10, 7] + $CellContext`x) (2 + $CellContext`x)}],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.8779558711410027`*^9, {3.87795603870296*^9, 3.877956059997692*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColumnForm", "[", 
  RowBox[{"Collect", "[", 
   RowBox[{"lst", ",", "x"}], "]"}], "]"}]], "Input"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{
      RowBox[{"-", "4.468071654733288`"}], "-", 
      RowBox[{"5.978563876831969`", " ", "x"}]}]},
    {
     RowBox[{"3.4069579820334788`", "\[VeryThinSpace]", "+", 
      RowBox[{"3.471471687288152`", " ", "x"}], "+", 
      RowBox[{"2.7562603728683683`", " ", 
       SuperscriptBox["x", "2"]}]}]},
    {
     RowBox[{"0.32390078050849347`", "\[VeryThinSpace]", "-", 
      RowBox[{"3.825097022987645`", " ", "x"}], "-", 
      RowBox[{"2.6390897298003555`", " ", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"1.2589150239560356`", " ", 
       SuperscriptBox["x", "3"]}]}]},
    {
     RowBox[{"0.8339327357773527`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.8329095520770018`", " ", "x"}], "+", 
      RowBox[{"2.4782308880638695`", " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"2.0732937504671813`", " ", 
       SuperscriptBox["x", "3"]}], "+", 
      RowBox[{"0.7289206694050786`", " ", 
       SuperscriptBox["x", "4"]}]}]},
    {
     RowBox[{"0.9245899203477403`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.6183542152604176`", " ", "x"}], "+", 
      RowBox[{"1.5263304500747967`", " ", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"0.5179907751697383`", " ", 
       SuperscriptBox["x", "3"]}], "-", 
      RowBox[{"1.214542724822611`", " ", 
       SuperscriptBox["x", "4"]}], "-", 
      RowBox[{"0.4534747919864609`", " ", 
       SuperscriptBox["x", "5"]}]}]},
    {
     RowBox[{"0.9686834866549816`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.5654419356917284`", " ", "x"}], "+", 
      RowBox[{"0.9416007679893204`", " ", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"1.2381856915213518`", " ", 
       SuperscriptBox["x", "3"]}], "-", 
      RowBox[{"0.6894005983162258`", " ", 
       SuperscriptBox["x", "4"]}], "+", 
      RowBox[{"0.4287639805442658`", " ", 
       SuperscriptBox["x", "5"]}], "+", 
      RowBox[{"0.2573196419881286`", " ", 
       SuperscriptBox["x", "6"]}]}]},
    {
     RowBox[{"0.9999868967219214`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.5497902306582585`", " ", "x"}], "+", 
      RowBox[{"0.5001879044787305`", " ", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"1.4588921232766472`", " ", 
       SuperscriptBox["x", "3"]}], "+", 
      RowBox[{"0.04131664195468365`", " ", 
       SuperscriptBox["x", "4"]}], "+", 
      RowBox[{"0.7941226006797205`", " ", 
       SuperscriptBox["x", "5"]}], "+", 
      RowBox[{"0.0015686078933103142`", " ", 
       SuperscriptBox["x", "6"]}], "-", 
      RowBox[{"0.12787551704740915`", " ", 
       SuperscriptBox["x", "7"]}]}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  ColumnForm[{-4.468071654733288 - 5.978563876831969 $CellContext`x, 
    3.4069579820334788` + 3.471471687288152 $CellContext`x + 
    2.7562603728683683` $CellContext`x^2, 0.32390078050849347` - 
    3.825097022987645 $CellContext`x - 2.6390897298003555` $CellContext`x^2 - 
    1.2589150239560356` $CellContext`x^3, 0.8339327357773527 - 
    0.8329095520770018 $CellContext`x + 2.4782308880638695` $CellContext`x^2 + 
    2.0732937504671813` $CellContext`x^3 + 
    0.7289206694050786 $CellContext`x^4, 0.9245899203477403 - 
    0.6183542152604176 $CellContext`x + 1.5263304500747967` $CellContext`x^2 - 
    0.5179907751697383 $CellContext`x^3 - 1.214542724822611 $CellContext`x^4 - 
    0.4534747919864609 $CellContext`x^5, 0.9686834866549816 - 
    0.5654419356917284 $CellContext`x + 0.9416007679893204 $CellContext`x^2 - 
    1.2381856915213518` $CellContext`x^3 - 
    0.6894005983162258 $CellContext`x^4 + 0.4287639805442658 $CellContext`x^5 + 
    0.2573196419881286 $CellContext`x^6, 0.9999868967219214 - 
    0.5497902306582585 $CellContext`x + 0.5001879044787305 $CellContext`x^2 - 
    1.4588921232766472` $CellContext`x^3 + 
    0.04131664195468365 $CellContext`x^4 + 
    0.7941226006797205 $CellContext`x^5 + 
    0.0015686078933103142` $CellContext`x^6 - 
    0.12787551704740915` $CellContext`x^7}],
  Editable->False]], "Output",
 CellChangeTimes->{3.877956511127248*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"data", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "7.48905609893065`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["10", "7"]}], ",", "4.072733883598096`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["6", "7"]}], ",", "2.4564184423836606`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["2", "7"]}], ",", "1.2307121974473498`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["2", "7"], ",", "0.851477293075286`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["6", "7"], ",", "0.32437284567695`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["10", "7"], ",", "0.3396510364417758`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "0.0353352832366127`"}], "}"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inpln", ":=", 
   RowBox[{"InterpolatingPolynomial", "[", 
    RowBox[{"data", ",", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Collect", "[", 
  RowBox[{"inpln", ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8779565410317593`*^9, 3.877956586770426*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "7.48905609893065`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["10", "7"]}], ",", "4.072733883598096`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["6", "7"]}], ",", "2.4564184423836606`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["2", "7"]}], ",", "1.2307121974473498`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["2", "7"], ",", "0.851477293075286`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["6", "7"], ",", "0.32437284567695`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["10", "7"], ",", "0.3396510364417758`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0.0353352832366127`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8779565954618473`*^9}],

Cell[BoxData[
 RowBox[{"0.9999868967219223`", "\[VeryThinSpace]", "-", 
  RowBox[{"0.5497902306582594`", " ", "x"}], "+", 
  RowBox[{"0.5001879044787301`", " ", 
   SuperscriptBox["x", "2"]}], "-", 
  RowBox[{"1.4588921232766494`", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"0.04131664195468299`", " ", 
   SuperscriptBox["x", "4"]}], "+", 
  RowBox[{"0.7941226006797213`", " ", 
   SuperscriptBox["x", "5"]}], "+", 
  RowBox[{"0.0015686078933103142`", " ", 
   SuperscriptBox["x", "6"]}], "-", 
  RowBox[{"0.12787551704740927`", " ", 
   SuperscriptBox["x", "7"]}]}]], "Output",
 CellChangeTimes->{3.8779565954667635`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"-", "x"}], "]"}], ",", 
      RowBox[{"nwtn", "[", "x_", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"a", "-", "h"}], ",", 
      RowBox[{"b", "+", "h"}]}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.877956593324263*^9, 3.8779566049936285`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwBgQR++yFib1JlAgAAAEcAAAACAAAAafUWlSIpBMB8t3XcHtwoQFPzYqKL
wwPAzoDfjgGoJ0DS8cBgauMCwMcP4nQ5NCVAX1hHaiMSAsBYDIBN7yQjQAi0
ZWH3RAHAadjDZL5RIUDpHvuKZ2YAwLCcRxtZEh9AsONx/2Mt/78xJw/cLBMc
QP2n200xa/2/bDJ0/xUnGUCCVnV3NLH7v1s03B5wlBZAJdVfN+wU+r/cjm/B
7moUQDZyOFzcVfi/XF8eHndOEkBk32EXgbT2vxjn6HR3iBBAyza7rVsb9b/z
5kCyPOwNQKCsAqluX/O/qIsb7mzZCkCS8po6NsHxv1iOhSdSRAhA81YhMTYA
8L+mCRszVL8FQBpLrwXYjuy/5Mb5YFCHA0CIiL3VrFjpvyZpGGftqQFA0wKo
b/Lc5b/T/bJpFq//P1kdNDahnOK/WTvWH3mf/D936TiNgS3evzYu8iCYo/k/
HUHJGphC179YnABEJQP3PzfZnAGBztC/cJpKohPO9D8Y1lH4lp7Dv+92l6l+
pvI/sOrBf0I3qr+Xr1ZiMNfwP/Y7xnsbBak/CDrY+k157j8ypWI2mybEP3I9
uAS9Vus/P52mbSWP0D/1WRQIcLToPytuY6wbltc/UcW/4sci5j82lmB+Onze
PyQ8KRKz3+M/5T6Ne8N14j8aqeGMCvnhP9L1De748uU/YHHmj8Ad4D+FDO0z
xTTpPzApGyH6HN0/x05swyVm7D/ZpCu2O1naPyxUD4kV3e8/RNoyzRSl1z+s
XAgRTozxPwbiy6F9X9U/0/Ca+NhM8z+jDEKD9ifTP9203Emv7/Q/l482KUtL
0T+vju6/T4r2P+8J6h70Sc8/EkoS0bdH+D8igCiqnxDMP1g15Utr5/k/vy0n
gz1byT8vAsph5qn7P1BaU+Mvt8Y/zuR+nCtk/T/N19sp/2PEP1D34kC8AP8/
pqVtntRvwj+ydSxACmAAQMYZ9XKBh8A/rQe/FNwwAUD51R9dotq9P4ykufuS
/QFAbTXvWKEDuz80Mj2wrdsCQJRZxSPfPLg/zVeYGe6qA0A6Ilfmrue1P37m
i4WLrgNA36GLNsvdtT8udX/xKLIDQG+Kuf3r07U/kJJmyWO5A0Aeb/LoOsC1
P1TNNHnZxwNA2VOh+g2ZtT/cQtHYxOQDQBm5MEyHS7U/7C0KmJseBEAD6+fg
uLO0P528/QM5IgRAp0TqOWCqtD9OS/Fv1iUEQLEIIcsLobQ/sGjYRxEtBECK
9o2Ob460P3SjpveGOwRANItEZGlptD/8GENXclgEQAXC6qQkILQ/rac2ww9c
BEAWWnmeDhe0P142Ki+tXwRAcuInsvwNtD/AUxEH6GYEQJI2fSDl+7M/hI7f
tl11BEATy2Ll5tezPzUd0yL7eARAouREfPHOsz/mq8aOmHwEQHB7jR4AxrM/
SMmtZtODBEBzJwV+KbSzP/lXodJwhwRAMs+PN0Srsz+q5pQ+DosEQIsYOPVi
orM/W3WIqquOBEBQ2i21hZmzPwwEfBZJkgRA4ryhdayQsz8MQiO3
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
swlmwGbKGfBHL3cR/wM5Crcd
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->NCache[{{
      Rational[-18, 7], 
      Rational[18, 7]}, {-7.14110468344164, 
     12.429922952050894`}}, {{-2.5714285714285716`, 
    2.5714285714285716`}, {-7.14110468344164, 12.429922952050894`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.877956606458177*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"-", "x"}], "]"}], ",", 
     RowBox[{"nwtn", "[", "x_", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"a", "-", 
      RowBox[{"2", "h"}]}], ",", 
     RowBox[{"b", "+", 
      RowBox[{"2", "h"}]}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.877956616479619*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwBcQSO+yFib1JlAgAAAEYAAAACAAAArz3CWxYACMB8ZSNXpxs0QOR8lsvz
FQfAChZ0BpzqMUDK3QFJKxYGwGq687MxoC9AffgmPmcbBcBwPid1JvsrQAK0
pBtiCwTArDDU1TOAKEDRtYw4hA0DwMMpMcf3pCVAcljNPWX6AcAqpN0Ccuwi
QOC0x7pK7ADAEUosMN6VIEAyr1juruD/v6XkvIzDVB1ARzbTN0a+/b9AtTEJ
B6sZQPJJIgAswPu/9yZ8OZmpFkA30eS3Gsz5vyTbv2zUDhRAIJpYQIet978H
RrVCxZERQJ7voEdCs/W/P2o6x6YND0DAhpofe47zv+Sp0A7VKAtAfJEH57xz
8b8t/CoL7M8HQJtRklqa+u6/VaK3KTUQBUCFA3iItrjqv8q6n1J8cAJAms4G
tG+/5r8ZSfr7O0kAQPYc+IAkceK/ojtFq614/D8MpaBZ1m3cvy4GfH6u8vg/
gkKjrJ2K1L/ldTmxIg72Pw3N1YS4+se/EPbtVOxL8z+E8xJOUwWwv5Q8HwyG
CPE/3/Kc7HaUrj9GRTK6CyXuPxXmzZf2oMg/LKsLpiBm6j9jFei+LT3UP7NX
eqwOU+c/LTEk7+jT3D81BbT+LmXkP0c/yTBAoeI/q8X9bK7g4T/NTFfs7o/m
P2FXZIront8/DNeCBqLT6j8VfCMv8KzbPyBIBSO4zu4/QbS/+i9w2D8AaVAw
3lrxP+EdnfTtodU/TOxsfuJ48z8Eeb2ChfPSPwPjtE2YcvU/WbmISAjA0D8W
mEtM0Jb3Pz+ctgK5Tc0/lMANzLmW+T/jMomcY9zJP3d1XFyajPs/bvrFA+7g
xj+36Pkb/az9P63Lvh4ECMQ/Yc/CXBGp/z9BX0jZyrHBPzQ6bebT5wBA666l
2Bbwvj/qUr+mGvYBQMdKDqbmHLs/ViWnJzryAkCiz/oX7vi3P/BWNsCaAwRA
0W9yExD6tD8/QlsZ1AIFQBgdbhjchLI/wXPG+gj9BUApE8xhpWOwP3EE2fN+
DAdAYJdUcJi1rD/WToGtzQkIQFeRKCSHXqk/PP2qvzgOCEAI4200iFCpP6Or
1NGjEghAPJda/ZBCqT9wCCj2eRsIQOaJIqi5Jqk/C8LOPiYtCECDnLrqZu+o
P0A1HNB+UAhAfNcfdi2CqD+rG7fyL5cIQA67Bq9Nrac/EsrgBJubCEDS+jjA
PaCnP3h4ChcGoAhAFMg3BjWTpz9G1V073KgIQMI9tiA5eac/4I4EhIi6CEAo
iO8gl0WnPxYCUhXh3QhACes836bfpj98sHsnTOIIQAnV6WQI06Y/416lObfm
CED74cvgcMamP7C7+F2N7whA/qPUq1atpj9LdZ+mOQEJQKrp8yN1e6Y/siPJ
uKQFCUA8JzbwDW+mPxjS8soPCglAE9wulK1ipj/mLkbv5RIJQMYsLFQBSqY/
TN1vAVEXCUABPapotT2mP7OLmRO8GwlA4qrRRXAxpj8aOsMlJyAJQCdf5Ocx
JaY/gOjsN5IkCUAeUyZL+himP3IBER8=
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
qq9ziAVd0XQcX6qQJ/8HDllh1Q==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->NCache[{{
      Rational[-22, 7], 
      Rational[22, 7]}, {-11.88668001771588, 
     20.108022161618905`}}, {{-3.142857142857143, 
    3.142857142857143}, {-11.88668001771588, 20.108022161618905`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8779566192278643`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Pln", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{
   RowBox[{"P", "[", 
    RowBox[{"n", "+", "1"}], "]"}], "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "n"}], ",", 
   RowBox[{"i", "\[GreaterEqual]", "0"}], ",", 
   RowBox[{"i", "--"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"P", "[", "i", "]"}], "=", 
     RowBox[{
      RowBox[{"difftab", "[", 
       RowBox[{"0", ",", "i"}], "]"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", 
         RowBox[{"xdata", "[", "i", "]"}]}], ")"}], 
       RowBox[{"P", "[", 
        RowBox[{"i", "+", "1"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Pln", "=", 
     RowBox[{"Append", "[", 
      RowBox[{"Pln", ",", 
       RowBox[{"P", "[", "i", "]"}]}], "]"}]}], ";"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ColumnForm", "[", "Pln", "]"}]}], "Input"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{"-", "0.12787551704740915`"}]},
    {
     RowBox[{"0.2573196419881286`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.12787551704740915`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["10", "7"]}], "+", "x"}], ")"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", "0.4534747919864609`"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.2573196419881286`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.12787551704740915`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["10", "7"]}], "+", "x"}], ")"}]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["6", "7"]}], "+", "x"}], ")"}]}]}]},
    {
     RowBox[{"0.7289206694050786`", "\[VeryThinSpace]", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.4534747919864609`"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.2573196419881286`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.12787551704740915`", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                FractionBox["10", "7"]}], "+", "x"}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["6", "7"]}], "+", "x"}], ")"}]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["2", "7"]}], "+", "x"}], ")"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", "1.2589150239560356`"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.7289206694050786`", "\[VeryThinSpace]", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.4534747919864609`"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"0.2573196419881286`", "\[VeryThinSpace]", "-", 
               RowBox[{"0.12787551704740915`", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox["10", "7"]}], "+", "x"}], ")"}]}]}], ")"}], 
             " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                FractionBox["6", "7"]}], "+", "x"}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["2", "7"]}], "+", "x"}], ")"}]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["2", "7"], "+", "x"}], ")"}]}]}]},
    {
     RowBox[{"2.7562603728683683`", "\[VeryThinSpace]", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.2589150239560356`"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.7289206694050786`", "\[VeryThinSpace]", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "0.4534747919864609`"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"0.2573196419881286`", "\[VeryThinSpace]", "-", 
                  RowBox[{"0.12787551704740915`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["10", "7"]}], "+", "x"}], ")"}]}]}], ")"}], 
                " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox["6", "7"]}], "+", "x"}], ")"}]}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                FractionBox["2", "7"]}], "+", "x"}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["2", "7"], "+", "x"}], ")"}]}]}], ")"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", "5.978563876831969`"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2.7562603728683683`", "\[VeryThinSpace]", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.2589150239560356`"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"0.7289206694050786`", "\[VeryThinSpace]", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "0.4534747919864609`"}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"0.2573196419881286`", "\[VeryThinSpace]", "-", 
                    RowBox[{"0.12787551704740915`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["10", "7"]}], "+", "x"}], ")"}]}]}], ")"}], 
                   " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["6", "7"]}], "+", "x"}], ")"}]}]}], ")"}], 
                " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox["2", "7"]}], "+", "x"}], ")"}]}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["2", "7"], "+", "x"}], ")"}]}]}], ")"}]}]}], 
        ")"}]}]}]},
    {
     RowBox[{"7.48905609893065`", "\[VeryThinSpace]", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "+", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "5.978563876831969`"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"2.7562603728683683`", "\[VeryThinSpace]", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.2589150239560356`"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"0.7289206694050786`", "\[VeryThinSpace]", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.4534747919864609`"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.2573196419881286`", "\[VeryThinSpace]", "-", 
                    RowBox[{"0.12787551704740915`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["10", "7"]}], "+", "x"}], ")"}]}]}], ")"}], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["6", "7"]}], "+", "x"}], ")"}]}]}], ")"}], 
                   " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["2", "7"]}], "+", "x"}], ")"}]}]}], ")"}], 
                " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox["2", "7"], "+", "x"}], ")"}]}]}], ")"}]}]}], 
           ")"}]}]}], ")"}]}]}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  ColumnForm[{-0.12787551704740915`, 0.2573196419881286 - 
    0.12787551704740915` (
     Rational[-10, 7] + $CellContext`x), -0.4534747919864609 + (
      0.2573196419881286 - 
      0.12787551704740915` (Rational[-10, 7] + $CellContext`x)) (
      Rational[-6, 7] + $CellContext`x), 
    0.7289206694050786 + (-0.4534747919864609 + (0.2573196419881286 - 
        0.12787551704740915` (Rational[-10, 7] + $CellContext`x)) (
        Rational[-6, 7] + $CellContext`x)) (
      Rational[-2, 7] + $CellContext`x), -1.2589150239560356` + (
      0.7289206694050786 + (-0.4534747919864609 + (0.2573196419881286 - 
          0.12787551704740915` (Rational[-10, 7] + $CellContext`x)) (
          Rational[-6, 7] + $CellContext`x)) (
        Rational[-2, 7] + $CellContext`x)) (Rational[2, 7] + $CellContext`x), 
    2.7562603728683683` + (
      Rational[6, 7] + $CellContext`x) (-1.2589150239560356` + (
        0.7289206694050786 + (-0.4534747919864609 + (0.2573196419881286 - 
            0.12787551704740915` (Rational[-10, 7] + $CellContext`x)) (
            Rational[-6, 7] + $CellContext`x)) (
          Rational[-2, 7] + $CellContext`x)) (
        Rational[2, 7] + $CellContext`x)), -5.978563876831969 + (
      Rational[10, 7] + $CellContext`x) (
      2.7562603728683683` + (
        Rational[
         6, 7] + $CellContext`x) (-1.2589150239560356` + (
          0.7289206694050786 + (-0.4534747919864609 + (0.2573196419881286 - 
              0.12787551704740915` (Rational[-10, 7] + $CellContext`x)) (
              Rational[-6, 7] + $CellContext`x)) (
            Rational[-2, 7] + $CellContext`x)) (
          Rational[2, 7] + $CellContext`x))), 
    7.48905609893065 + (
      2 + $CellContext`x) (-5.978563876831969 + (
        Rational[10, 7] + $CellContext`x) (
        2.7562603728683683` + (
          Rational[
           6, 7] + $CellContext`x) (-1.2589150239560356` + (
            0.7289206694050786 + (-0.4534747919864609 + (0.2573196419881286 - 
                0.12787551704740915` (Rational[-10, 7] + $CellContext`x)) (
                Rational[-6, 7] + $CellContext`x)) (
              Rational[-2, 7] + $CellContext`x)) (
            Rational[2, 7] + $CellContext`x))))}],
  Editable->False]], "Output",
 CellChangeTimes->{3.8779566313702483`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"P", "[", "0", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"7.48905609893065`", "\[VeryThinSpace]", "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", "+", "x"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "5.978563876831969`"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox["10", "7"], "+", "x"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"2.7562603728683683`", "\[VeryThinSpace]", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["6", "7"], "+", "x"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.2589150239560356`"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"0.7289206694050786`", "\[VeryThinSpace]", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "0.4534747919864609`"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"0.2573196419881286`", "\[VeryThinSpace]", "-", 
                    RowBox[{"0.12787551704740915`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["10", "7"]}], "+", "x"}], ")"}]}]}], ")"}], 
                  " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox["6", "7"]}], "+", "x"}], ")"}]}]}], ")"}], 
               " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox["2", "7"]}], "+", "x"}], ")"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox["2", "7"], "+", "x"}], ")"}]}]}], ")"}]}]}], 
       ")"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.8779566376507764`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"nwtn", "[", "x_", "]"}], ":=", 
   RowBox[{"P", "[", "0", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"m", "=", "70"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"XDAT", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"YDAT", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"nwtnDAT", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"MR", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ",", 
    RowBox[{"i", "\[LessEqual]", "m"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"xdatas", "[", "i", "]"}], "=", 
      RowBox[{"a", "+", 
       RowBox[{"i", "\[Times]", 
        RowBox[{"(", 
         RowBox[{"h", "/", "10"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ydatas", "[", "i", "]"}], "=", 
      RowBox[{"N", "[", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         RowBox[{"xdatas", "[", "i", "]"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      RowBox[{"xdatas", "[", "i", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nwtndatas", "[", "i", "]"}], "=", 
      RowBox[{"nwtn", "[", "i", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"mr", "[", "i", "]"}], "=", 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"ydatas", "[", "i", "]"}], "-", 
        RowBox[{"nwtndatas", "[", "i", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"XDAT", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"XDAT", ",", 
        RowBox[{"xdatas", "[", "i", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"YDAT", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"YDAT", ",", " ", 
        RowBox[{"ydatas", "[", "i", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nwtnDAT", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"nwtnDAT", ",", 
        RowBox[{"nwtndatas", "[", "i", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"MR", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"MR", ",", 
        RowBox[{"mr", "[", "i", "]"}]}], "]"}]}], ";"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", 
   RowBox[{"N", "[", "XDAT", "]"}], "]"}], 
  RowBox[{"MatrixForm", "[", 
   RowBox[{"N", "[", "YDAT", "]"}], "]"}], 
  RowBox[{"MatrixForm", "[", 
   RowBox[{"N", "[", "nwtnDAT", "]"}], "]"}], 
  RowBox[{"MatrixForm", "[", "MR", "]"}]}]}], "Input",
 CellChangeTimes->{3.8779566507970285`*^9}],

Cell[BoxData["70"], "Output",
 CellChangeTimes->{3.8779566538011475`*^9}],

Cell[BoxData[
 RowBox[{
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        RowBox[{"-", "2.`"}]},
       {
        RowBox[{"-", "1.9428571428571428`"}]},
       {
        RowBox[{"-", "1.8857142857142857`"}]},
       {
        RowBox[{"-", "1.8285714285714285`"}]},
       {
        RowBox[{"-", "1.7714285714285714`"}]},
       {
        RowBox[{"-", "1.7142857142857142`"}]},
       {
        RowBox[{"-", "1.6571428571428573`"}]},
       {
        RowBox[{"-", "1.6`"}]},
       {
        RowBox[{"-", "1.542857142857143`"}]},
       {
        RowBox[{"-", "1.4857142857142858`"}]},
       {
        RowBox[{"-", "1.4285714285714286`"}]},
       {
        RowBox[{"-", "1.3714285714285714`"}]},
       {
        RowBox[{"-", "1.3142857142857143`"}]},
       {
        RowBox[{"-", "1.2571428571428571`"}]},
       {
        RowBox[{"-", "1.2`"}]},
       {
        RowBox[{"-", "1.1428571428571428`"}]},
       {
        RowBox[{"-", "1.0857142857142856`"}]},
       {
        RowBox[{"-", "1.0285714285714285`"}]},
       {
        RowBox[{"-", "0.9714285714285714`"}]},
       {
        RowBox[{"-", "0.9142857142857143`"}]},
       {
        RowBox[{"-", "0.8571428571428571`"}]},
       {
        RowBox[{"-", "0.8`"}]},
       {
        RowBox[{"-", "0.7428571428571429`"}]},
       {
        RowBox[{"-", "0.6857142857142857`"}]},
       {
        RowBox[{"-", "0.6285714285714286`"}]},
       {
        RowBox[{"-", "0.5714285714285714`"}]},
       {
        RowBox[{"-", "0.5142857142857142`"}]},
       {
        RowBox[{"-", "0.45714285714285713`"}]},
       {
        RowBox[{"-", "0.4`"}]},
       {
        RowBox[{"-", "0.34285714285714286`"}]},
       {
        RowBox[{"-", "0.2857142857142857`"}]},
       {
        RowBox[{"-", "0.22857142857142856`"}]},
       {
        RowBox[{"-", "0.17142857142857143`"}]},
       {
        RowBox[{"-", "0.11428571428571428`"}]},
       {
        RowBox[{"-", "0.05714285714285714`"}]},
       {"0.`"},
       {"0.05714285714285714`"},
       {"0.11428571428571428`"},
       {"0.17142857142857143`"},
       {"0.22857142857142856`"},
       {"0.2857142857142857`"},
       {"0.34285714285714286`"},
       {"0.4`"},
       {"0.45714285714285713`"},
       {"0.5142857142857142`"},
       {"0.5714285714285714`"},
       {"0.6285714285714286`"},
       {"0.6857142857142857`"},
       {"0.7428571428571429`"},
       {"0.8`"},
       {"0.8571428571428571`"},
       {"0.9142857142857143`"},
       {"0.9714285714285714`"},
       {"1.0285714285714285`"},
       {"1.0857142857142856`"},
       {"1.1428571428571428`"},
       {"1.2`"},
       {"1.2571428571428571`"},
       {"1.3142857142857143`"},
       {"1.3714285714285714`"},
       {"1.4285714285714286`"},
       {"1.4857142857142858`"},
       {"1.542857142857143`"},
       {"1.6`"},
       {"1.6571428571428573`"},
       {"1.7142857142857142`"},
       {"1.7714285714285714`"},
       {"1.8285714285714285`"},
       {"1.8857142857142857`"},
       {"1.9428571428571428`"},
       {"2.`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], " ", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {"0.09999999999999964`"},
       {"0.2715216117772359`"},
       {"0.493060380437746`"},
       {"0.600373189453121`"},
       {"0.6234845183339912`"},
       {"0.5873031775506927`"},
       {"0.5121981910303894`"},
       {"0.4145350963713774`"},
       {"0.3071739335844281`"},
       {"0.1999301938028628`"},
       {"0.09999999999999964`"},
       {"0.012350792316235815`"},
       {"0.05992120886957819`"},
       {"0.11526548848698281`"},
       {"0.15338239682662103`"},
       {"0.1749577095379493`"},
       {"0.1814253125874723`"},
       {"0.174756736792963`"},
       {"0.15727626617127033`"},
       {"0.13150034398046406`"},
       {"0.10000000000000009`"},
       {"0.06528502227428445`"},
       {"0.02970859624436084`"},
       {"0.004608866091514896`"},
       {"0.03583798461578147`"},
       {"0.062482035008674996`"},
       {"0.08340321626440295`"},
       {"0.09783484015222066`"},
       {"0.1053807211816018`"},
       {"0.1060030458322474`"},
       {"0.10000000000000031`"},
       {"0.08797443378948056`"},
       {"0.07079484295406635`"},
       {"0.04954994644418642`"},
       {"0.025498139676308984`"},
       {"0.000013103278077686298`"},
       {"0.025473152799867727`"},
       {"0.04952852978729949`"},
       {"0.07077908507441699`"},
       {"0.0879660014160184`"},
       {"0.10000000000000075`"},
       {"0.10601191691867395`"},
       {"0.10539816248567146`"},
       {"0.09785978275054574`"},
       {"0.0834338424777279`"},
       {"0.06251584877565208`"},
       {"0.03587193448566606`"},
       {"0.004639520368183825`"},
       {"0.0296848249444136`"},
       {"0.0652716083229099`"},
       {"0.09999999999999987`"},
       {"0.13151606712536573`"},
       {"0.1573089342841752`"},
       {"0.1748061522969956`"},
       {"0.18148955666762906`"},
       {"0.17503289709080705`"},
       {"0.1534625194749228`"},
       {"0.11534238197549623`"},
       {"0.05998468657368006`"},
       {"0.012312592229726582`"},
       {"0.10000000000000528`"},
       {"0.19998143459672066`"},
       {"0.3072882363767988`"},
       {"0.41472125467572096`"},
       {"0.5124596088430621`"},
       {"0.5876348620826525`"},
       {"0.6238693263234469`"},
       {"0.6007772163240235`"},
       {"0.4934273711922542`"},
       {"0.27176626148079497`"},
       {"0.09999999999998577`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], " ", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {"7.38905609893065`"},
       {"6.978661546402722`"},
       {"6.591060661494798`"},
       {"6.2249874642362135`"},
       {"5.879246288276417`"},
       {"5.552707875605837`"},
       {"5.244305688179307`"},
       {"4.953032424395115`"},
       {"4.677936729051819`"},
       {"4.418120086036885`"},
       {"4.172733883598096`"},
       {"3.9409766426123096`"},
       {"3.7220913987985615`"},
       {"3.5153632303253177`"},
       {"3.3201169227365472`"},
       {"3.1357147635698226`"},
       {"2.961554459463227`"},
       {"2.7970671689479474`"},
       {"2.6417156445012626`"},
       {"2.494992477791509`"},
       {"2.3564184423836605`"},
       {"2.225540928492468`"},
       {"2.1019324646707576`"},
       {"1.9851893216044434`"},
       {"1.8749301934539637`"},
       {"1.770794952435155`"},
       {"1.672443472571778`"},
       {"1.5795545187778448`"},
       {"1.4918246976412703`"},
       {"1.4089674664819067`"},
       {"1.33071219744735`"},
       {"1.2568032935896711`"},
       {"1.1869993540360109`"},
       {"1.1210723855263187`"},
       {"1.0588070577429671`"},
       {"1.`"},
       {"0.9444591369948698`"},
       {"0.8920030614530944`"},
       {"0.8424604416167714`"},
       {"0.7956694616416928`"},
       {"0.751477293075286`"},
       {"0.7097395956891255`"},
       {"0.6703200460356393`"},
       {"0.6330898921891813`"},
       {"0.5979275332171694`"},
       {"0.5647181220077593`"},
       {"0.5333531901568119`"},
       {"0.5037302936889633`"},
       {"0.4757526784556506`"},
       {"0.44932896411722156`"},
       {"0.42437284567695`"},
       {"0.40080281159210923`"},
       {"0.37854187754140095`"},
       {"0.35751733497916927`"},
       {"0.337660513655132`"},
       {"0.31890655732397044`"},
       {"0.30119421191220214`"},
       {"0.28446562545044835`"},
       {"0.26866615911763636`"},
       {"0.25374420877996917`"},
       {"0.2396510364417758`"},
       {"0.22634061105772565`"},
       {"0.21376945818647108`"},
       {"0.20189651799465538`"},
       {"0.19068301114750144`"},
       {"0.1800923121479524`"},
       {"0.17008982971066583`"},
       {"0.16064289378013982`"},
       {"0.15172064882394942`"},
       {"0.14329395305256898`"},
       {"0.1353352832366127`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], " ", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {"7.48905609893065`"},
       {"6.707139934625486`"},
       {"6.098000281057052`"},
       {"5.6246142747830925`"},
       {"5.255761769942426`"},
       {"4.965404698055144`"},
       {"4.732107497148918`"},
       {"4.5384973280237375`"},
       {"4.370762795467391`"},
       {"4.218189892234022`"},
       {"4.072733883598096`"},
       {"3.928625850296074`"},
       {"3.7820126076681397`"},
       {"3.6306287188123005`"},
       {"3.4734993195631683`"},
       {"3.310672473107772`"},
       {"3.1429797720506993`"},
       {"2.9718239057409104`"},
       {"2.798991910672533`"},
       {"2.626492821771973`"},
       {"2.4564184423836606`"},
       {"2.2908259507667523`"},
       {"2.1316410609151184`"},
       {"1.9805804555129285`"},
       {"1.8390922088381823`"},
       {"1.70831291742648`"},
       {"1.589040256307375`"},
       {"1.4817196786256241`"},
       {"1.3864439764596685`"},
       {"1.3029644206496593`"},
       {"1.2307121974473496`"},
       {"1.1688288598001906`"},
       {"1.1162045110819445`"},
       {"1.0715224390821323`"},
       {"1.0333089180666581`"},
       {"0.9999868967219223`"},
       {"0.9699322897947376`"},
       {"0.9415315912403939`"},
       {"0.9132395266911884`"},
       {"0.8836354630577112`"},
       {"0.8514772930752867`"},
       {"0.8157515126077994`"},
       {"0.7757182085213108`"},
       {"0.7309496749397271`"},
       {"0.6813613756948973`"},
       {"0.6272339707834114`"},
       {"0.569225124642478`"},
       {"0.5083698140571471`"},
       {"0.446067853511237`"},
       {"0.38405735579431166`"},
       {"0.32437284567695013`"},
       {"0.2692867444667435`"},
       {"0.22123294325722576`"},
       {"0.18271118268217368`"},
       {"0.15617095698750294`"},
       {"0.1438736602331634`"},
       {"0.14773169243727935`"},
       {"0.1691232434749521`"},
       {"0.2086814725439563`"},
       {"0.26605680100969575`"},
       {"0.3396510364417811`"},
       {"0.4263220456544463`"},
       {"0.5210576945632699`"},
       {"0.6166177726703763`"},
       {"0.7031426199905635`"},
       {"0.7677271742306049`"},
       {"0.7939591560341128`"},
       {"0.7614201101041633`"},
       {"0.6451480200162036`"},
       {"0.41506021453336395`"},
       {"0.035335283236626935`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]}]], "Output",
 CellChangeTimes->{3.877956653810396*^9}]
}, Open  ]],

Cell[BoxData["0.6238693263234469`"], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"-", "x"}], "]"}], "-", 
     RowBox[{"nwtn", "[", "x", "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.8779567203692236`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-2, 2}, {0., 0.624753219347026}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8779567227729435`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"-", "x"}], "]"}], "-", 
       RowBox[{"nwtn", "[", "x", "]"}]}], "]"}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], "<", "x", "<", "2"}]}], "}"}], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8779567406077433`*^9, 3.877956802067001*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{"0.6247548644534717`", ",", 
   RowBox[{"{", 
    RowBox[{"2", "\[Rule]", "1.781123465796245`"}], "}"}]}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    UnderoverscriptBox["\[Product]", 
     RowBox[{"i", "=", "0"}], "n"], 
    RowBox[{"(", 
     RowBox[{"x", "-", 
      RowBox[{"xdata", "[", "i", "]"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.877956806053767*^9, 3.8779568118712587`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.6247548644534717`", ",", 
   RowBox[{"{", 
    RowBox[{"2", "\[Rule]", "1.781123465796245`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.877956813382662*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-2, 2}, {-7.282545199876883, 1.474903957195685}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8779568134749737`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Product]", 
       RowBox[{"i", "=", "0"}], "n"], 
      RowBox[{"(", 
       RowBox[{"x", "-", 
        RowBox[{"xdata", "[", "i", "]"}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"-", "1"}]}]}], "}"}], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{"1.4749040152533832`", ",", 
   RowBox[{"{", 
    RowBox[{"2", "\[Rule]", 
     RowBox[{"-", "1.2074687411948342`"}]}], "}"}]}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{
  FractionBox[
   SuperscriptBox["\[ExponentialE]", "2"], 
   RowBox[{"8", "!"}]], "\[Times]", 
  "1.4749040152533832`"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.877956834330695*^9, 3.877956834351714*^9}, 
   3.8779568688616047`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.4749040152533832`", ",", 
   RowBox[{"{", 
    RowBox[{"2", "\[Rule]", 
     RowBox[{"-", "1.2074687411948342`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8779568871555653`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "0.0002702913816777112`"}]], "Input",
 CellChangeTimes->{{3.877956889400547*^9, 3.8779568894148626`*^9}}],

Cell[BoxData[{
 RowBox[{"n1", "=", "8"}], "\[IndentingNewLine]", 
 RowBox[{"b", "=", "2"}], "\[IndentingNewLine]", 
 RowBox[{"a", "=", 
  RowBox[{"-", "2"}]}], "\[IndentingNewLine]", 
 RowBox[{"h", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"b", "-", "a"}], ")"}], "/", "n1"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"XDT", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"YDT", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ",", 
    RowBox[{"i", "\[LessEqual]", "n1"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"xdata1", "[", "i", "]"}], "=", 
      RowBox[{"a", "+", 
       RowBox[{"i", "\[Times]", "h"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ydata1", "[", "i", "]"}], "=", 
      RowBox[{"N", "[", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"-", 
          RowBox[{"xdata1", "[", "i", "]"}]}], "]"}], "+", 
        RowBox[{"0.1", "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"i", "+", "2"}]]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"XDT", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"XDT", ",", 
        RowBox[{"xdata1", "[", "i", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"YDT", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"YDT", ",", 
        RowBox[{"ydata1", "[", "i", "]"}]}], "]"}]}], ";"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Array", "[", 
   RowBox[{"xdata1", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n1", "+", "1"}], ",", "0"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Array", "[", 
   RowBox[{"ydata1", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n1", "+", "1"}], ",", "0"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "XDT", "]"}], 
  RowBox[{"MatrixForm", "[", "YDT", "]"}]}]}], "Input",
 CellChangeTimes->{3.87795690374489*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        RowBox[{"-", "2"}]},
       {
        RowBox[{"-", 
         FractionBox["3", "2"]}]},
       {
        RowBox[{"-", "1"}]},
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}]},
       {"0"},
       {
        FractionBox["1", "2"]},
       {"1"},
       {
        FractionBox["3", "2"]},
       {"2"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], " ", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {"7.48905609893065`"},
       {"4.381689070338065`"},
       {"2.818281828459045`"},
       {"1.548721270700128`"},
       {"1.1`"},
       {"0.5065306597126334`"},
       {"0.4678794411714423`"},
       {"0.12313016014842981`"},
       {"0.2353352832366127`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Array", "[", 
   RowBox[{"difftab", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n1", "+", "1"}], ",", 
      RowBox[{"n1", "+", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"k", "=", "1"}], ",", 
    RowBox[{"k", "\[LessEqual]", "n1"}], ",", 
    RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "n1"}], ",", 
      RowBox[{"i", "\[GreaterEqual]", 
       RowBox[{"n1", "-", "k"}]}], ",", 
      RowBox[{"i", "--"}], ",", 
      RowBox[{
       RowBox[{"difftab", "[", 
        RowBox[{"i", ",", "k"}], "]"}], "=", "\"\<\>\""}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ",", 
    RowBox[{"i", "\[LessEqual]", "n1"}], ",", 
    RowBox[{"i", "++"}], ",", 
    RowBox[{
     RowBox[{"difftab", "[", 
      RowBox[{"i", ",", "0"}], "]"}], "=", 
     RowBox[{"ydata1", "[", "i", "]"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", " ", "[", 
   RowBox[{
    RowBox[{"k", "=", "1"}], ",", " ", 
    RowBox[{"k", "\[LessEqual]", "n1"}], ",", 
    RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "0"}], ",", 
      RowBox[{"i", "\[LessEqual]", 
       RowBox[{"n1", "-", "k"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"difftab", "[", 
        RowBox[{"i", ",", "k"}], "]"}], "=", 
       FractionBox[
        RowBox[{
         RowBox[{"difftab", "[", 
          RowBox[{
           RowBox[{"i", "+", "1"}], ",", 
           RowBox[{"k", "-", "1"}]}], "]"}], "-", 
         RowBox[{"difftab", "[", 
          RowBox[{"i", ",", 
           RowBox[{"k", "-", "1"}]}], "]"}]}], 
        RowBox[{
         RowBox[{"xdata1", "[", 
          RowBox[{"i", "+", "k"}], "]"}], "-", 
         RowBox[{"xdata1", "[", "i", "]"}]}]]}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tab1", " ", "=", " ", 
   RowBox[{"Array", "[", 
    RowBox[{"difftab", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"n", "+", "1"}], ",", 
       RowBox[{"n1", "+", "1"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"PaddedForm", "[", 
  RowBox[{
   RowBox[{"TableForm", "[", "tab1", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "5"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8779569132271643`*^9, 3.877956919052438*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "14.9781121978613`"}], ",", 
   RowBox[{"-", "6.572533605507097`"}], ",", 
   RowBox[{"-", "2.818281828459045`"}], ",", 
   RowBox[{"-", "0.774360635350064`"}], ",", "0.`", ",", 
   "0.2532653298563167`", ",", "0.4678794411714423`", ",", 
   "0.18469524022264472`", ",", "0.4706705664732254`"}], "}"}]], "Output",
 CellChangeTimes->{3.877956924064725*^9}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      InterpretationBox["\<\" 7.48906\"\>",
       7.48905609893065,
       AutoDelete->True], 
      InterpretationBox["\<\"-6.21473\"\>",
       -6.21473405718517,
       AutoDelete->True], 
      InterpretationBox["\<\" 3.08792\"\>",
       3.087919573427131,
       AutoDelete->True], 
      InterpretationBox["\<\"-1.66682\"\>",
       -1.666817470124617,
       AutoDelete->True], 
      InterpretationBox["\<\" 1.18474\"\>",
       1.1847371370214328`,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.87192\"\>",
       -0.8719161773644969,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.57133\"\>",
       0.5713261486827572,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.32535\"\>",
       -0.3253533613659943,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.16257\"\>",
       0.16256663482421785`,
       AutoDelete->True]},
     {
      InterpretationBox["\<\" 4.38169\"\>",
       4.381689070338065,
       AutoDelete->True], 
      InterpretationBox["\<\"-3.12681\"\>",
       -3.1268144837580394`,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.58769\"\>",
       0.5876933682402052,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.70266\"\>",
       0.7026568039182486,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.99505\"\>",
       -0.9950533063898094,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.84206\"\>",
       0.842062268683775,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.56741\"\>",
       -0.567410616098223,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.32491\"\>",
       0.3249131779308771,
       AutoDelete->True], "\<\"\"\>"},
     {
      InterpretationBox["\<\" 2.81828\"\>",
       2.818281828459045,
       AutoDelete->True], 
      InterpretationBox["\<\"-2.53912\"\>",
       -2.539121115517834,
       AutoDelete->True], 
      InterpretationBox["\<\" 1.64168\"\>",
       1.6416785741175781`,
       AutoDelete->True], 
      InterpretationBox["\<\"-1.28745\"\>",
       -1.2874498088613702`,
       AutoDelete->True], 
      InterpretationBox["\<\" 1.11010\"\>",
       1.1101023653196278`,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.86017\"\>",
       -0.860169579610894,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.56979\"\>",
       0.5697855066598467,
       AutoDelete->True], "\<\"\"\>", "\<\"\"\>"},
     {
      InterpretationBox["\<\" 1.54872\"\>",
       1.548721270700128,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.89744\"\>",
       -0.897442541400256,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.28950\"\>",
       -0.28949613917447725`,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.93275\"\>",
       0.9327549217778854,
       AutoDelete->True], 
      InterpretationBox["\<\"-1.04032\"\>",
       -1.0403215837076072`,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.84919\"\>",
       0.8491869403686465,
       AutoDelete->True], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {
      InterpretationBox["\<\" 1.10000\"\>",
       1.1,
       AutoDelete->True], 
      InterpretationBox["\<\"-1.18694\"\>",
       -1.1869386805747333`,
       AutoDelete->True], 
      InterpretationBox["\<\" 1.10964\"\>",
       1.109636243492351,
       AutoDelete->True], 
      InterpretationBox["\<\"-1.14789\"\>",
       -1.1478882456373292`,
       AutoDelete->True], 
      InterpretationBox["\<\" 1.08265\"\>",
       1.082645767214009,
       AutoDelete->True], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {
      InterpretationBox["\<\" 0.50653\"\>",
       0.5065306597126334,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.07730\"\>",
       -0.07730243708238227,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.61220\"\>",
       -0.6121961249636427,
       AutoDelete->True], 
      InterpretationBox["\<\" 1.01740\"\>",
       1.017403288790689,
       AutoDelete->
        True], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {
      InterpretationBox["\<\" 0.46788\"\>",
       0.4678794411714423,
       AutoDelete->True], 
      InterpretationBox["\<\"-0.68950\"\>",
       -0.689498562046025,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.91391\"\>",
       0.9139088082223907,
       AutoDelete->
        True], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>"},
     {
      InterpretationBox["\<\" 0.12313\"\>",
       0.12313016014842981`,
       AutoDelete->True], 
      InterpretationBox["\<\" 0.22441\"\>",
       0.2244102461763658,
       AutoDelete->
        True], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]],
  PaddedForm[#, {6, 5}]& ]], "Output",
 CellChangeTimes->{3.8779569240705*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.8779569519905176`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["f", 
      RowBox[{"(", "8", ")"}]], 
     RowBox[{"(", "\[Xi]", ")"}]}], ")"}], "/", "8"}], "!=", 
  "0.16257"}], "\[IndentingNewLine]", 
 RowBox[{"\[Xi]", "=", 
  RowBox[{"0.16257", "*", 
   RowBox[{"8", "!"}]}]}]}], "Input",
 CellChangeTimes->{{3.877956947989973*^9, 3.8779569501106405`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["f", "8"], " ", "\[Xi]"}], "8"], "\[NotEqual]", 
  "0.16257`"}]], "Output",
 CellChangeTimes->{3.877956954429403*^9}],

Cell[BoxData["6554.8224`"], "Output",
 CellChangeTimes->{3.877956954431071*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"0.01628", "*", 
    RowBox[{
     UnderoverscriptBox["\[Product]", 
      RowBox[{"i", "=", "0"}], "n"], 
     RowBox[{"(", 
      RowBox[{"x", "-", 
       RowBox[{"xdata", "[", "i", "]"}]}], ")"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
sCGLb+2nl/7eSlT83akT9Zulp/lleJbgcSoWlmZuPvCSCHHWr1pTZai4tWLq
J18oEe7pRNDkD1AxZ+C462tWvsfFIoXq9lFZ8/KI8w+WH2yMSJXLIlS0XAm+
VuhHhKauKMvfQlT89pD6Xs2HCMQP0QQXQSrGZnHNPvEgwq1gYsbGTVQcPPs3
7/wzIhy9F9MUz0VFuv+8Q7cDEegasbOH17HiIyIaeWyJUL87bgsyKLiH99Hx
P9ZEiFiMUzRcpKDrtfOqLneJcDgnwdP2DwU5M7kM482IoFthymc5QcGsEreN
b0yJcLOJ9/VZMgXfbrSnWLLqizjpVibVQ8HP9pZreTSIULAkr7/tOwUtk3U3
Limz/OCa6V7XQkH3jTGrSXJEYN9vvtBfQ8H0ULUH+8SJsEdhm28TUpDj3/5q
5i4iKGs1C5aWUnBMKKkuSpAIj/5TOxaZR0HZ/TuJzDVE6E0UsTaIpyDfOs30
kp/RMJ/TuawYTcFzmioFfm3RwE8KCZAMp6DTUPWsYF00aPUx09b4U7D5SFn1
4/xoyBMaGPr0lIK7gnbsVfeJBr+XiZfEDSgoU3/Ak7grGpKTLo1t1qbgpuCw
oATeaCjP5bNfVafgiY163fdXo2Dum0d4rwIFOxNzZ68MR8E1bstvYWIU5GpT
d0p9GwVyPqKnGUtzWLpqYKQlFgXnwrvbJmlzyNOUtYXKHwX3ksMsu//OYUmX
/+5Hq5HwGtncC0bn8Dd3N6mD9fzkpg8W32+bQ6O11XZm4ZEwaJcs05kxh+Ye
cWxfFiLAXd5e91fKHN5yvf2KMhwBwgu6N0dez+Hsf0z2heYIuOw4G0mJmMO0
kkP7fNIioM0ZGJu85rBcSzm26kIEfHb/9VXnyhwec7vjcCD9FbCGrPslG+aQ
fD1vg83xcLgf/zIl3moWr9dtq+mlB8Nl9yv7ssRm8EJBpr3YVTfYWKlYEys0
g6B73WhmzBVIa4RuB2yawbv/ep1bn7qChG9n2p3lPzj/bv3JvuBnQAm8IL23
/Q8+vfCAerTaGYJizh6L8vqDtTpNJ77IOUDlx1PgOTiNPK+3XhO69xCeLogO
Puxk4SXucNtAG5BUZPO63jSNp2xWPFRyrSG4jPRZuXga/43f2Ld/0Qqufj6p
PR86jT8Jk2pBoXeB1iJ/1gqmcaPA+k/HOlnzx9QBM5PXU+h8vuG7hbMaFBLa
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
Wy6vgrmet3GL2k38f++Pw/9/f/z/APMzClQ=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-2, 2}, {-0.11855983585399565`, 0.02401143642314575}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8779569699283257`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.16257", "*", 
      RowBox[{
       UnderoverscriptBox["\[Product]", 
        RowBox[{"i", "=", "0"}], "n"], 
       RowBox[{"(", 
        RowBox[{"x", "-", 
         RowBox[{"xdata", "[", "i", "]"}]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], "\[LessEqual]", "x", "\[LessEqual]", "2"}]}], "}"}],
    ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.877956983997466*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"0.2397751457595641`", ",", 
    RowBox[{"{", 
     RowBox[{"2", "\[Rule]", 
      RowBox[{"-", "1.2074689411177095`"}]}], "}"}]}], "}"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.877956990612898*^9, 3.8779569906363525`*^9}}]
},
WindowSize->{546, 750},
WindowMargins->{{-5, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (December 4, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 2165, 65, 284, "Input"],
Cell[CellGroupData[{
Cell[2748, 89, 4629, 145, 445, "Input"],
Cell[7380, 236, 421, 9, 52, "Output"],
Cell[7804, 247, 4592, 138, 151, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12433, 390, 1617, 50, 201, "Input"],
Cell[14053, 442, 13134, 348, 211, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27224, 795, 123, 3, 31, "Input"],
Cell[27350, 800, 4215, 93, 138, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31602, 898, 1272, 37, 287, "Input"],
Cell[32877, 937, 940, 29, 148, "Output"],
Cell[33820, 968, 634, 15, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34491, 988, 447, 14, 52, "Input"],
Cell[34941, 1004, 12983, 226, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47961, 1235, 416, 14, 31, "Input"],
Cell[48380, 1251, 12906, 225, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61323, 1481, 933, 29, 112, "Input"],
Cell[62259, 1512, 9954, 257, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72250, 1774, 54, 1, 31, "Input"],
Cell[72307, 1777, 1826, 50, 214, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74170, 1832, 2622, 75, 312, "Input"],
Cell[76795, 1909, 73, 1, 31, "Output"],
Cell[76871, 1912, 12264, 389, 1137, "Output"]
}, Open  ]],
Cell[89150, 2304, 45, 0, 31, "Input"],
Cell[CellGroupData[{
Cell[89220, 2308, 349, 11, 31, "Input"],
Cell[89572, 2321, 22315, 377, 243, "Output"]
}, Open  ]],
Cell[111902, 2701, 441, 13, 52, "Input"],
Cell[CellGroupData[{
Cell[112368, 2718, 572, 17, 78, InheritFromParent],
Cell[112943, 2737, 205, 5, 31, "Output"],
Cell[113151, 2744, 21660, 366, 238, "Output"]
}, Open  ]],
Cell[134826, 3113, 450, 14, 56, "Input"],
Cell[CellGroupData[{
Cell[135301, 3131, 463, 13, 101, InheritFromParent],
Cell[135767, 3146, 229, 6, 31, "Output"]
}, Open  ]],
Cell[136011, 3155, 151, 2, 52, InheritFromParent],
Cell[136165, 3159, 2098, 64, 284, "Input"],
Cell[CellGroupData[{
Cell[138288, 3227, 4519, 142, 460, InheritFromParent],
Cell[142810, 3371, 411, 9, 52, "Output"],
Cell[143224, 3382, 5328, 162, 154, "Output"]
}, Open  ]],
Cell[148567, 3547, 70, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[148662, 3552, 382, 12, 55, "Input"],
Cell[149047, 3566, 187, 6, 57, "Output"],
Cell[149237, 3574, 79, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149353, 3580, 372, 12, 56, "Input"],
Cell[149728, 3594, 21579, 364, 238, "Output"]
}, Open  ]],
Cell[171322, 3961, 512, 16, 87, "Input"],
Cell[171837, 3979, 295, 8, 52, InheritFromParent]
}
]
*)

(* End of internal cache information *)
