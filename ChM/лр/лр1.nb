(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     44465,        987]
NotebookOptionsPosition[     43847,        964]
NotebookOutlinePosition[     44193,        979]
CellTagsIndexPosition[     44150,        976]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", "0"}], ";", 
  RowBox[{"b", "=", "5"}], ";", 
  RowBox[{"n", "=", "11"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"h", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b", "-", "a"}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"n", "-", "1"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"x", "^", "6"}], "-", 
   RowBox[{"19", "*", 
    RowBox[{"x", "^", "5"}]}], "+", 
   RowBox[{"147", " ", 
    RowBox[{"x", "^", "4"}]}], "-", 
   RowBox[{"589", " ", 
    RowBox[{"x", "^", "3"}]}], "+", 
   RowBox[{"1276", " ", 
    RowBox[{"x", "^", "2"}]}], "-", 
   RowBox[{"1392", " ", "x"}], "+", "576"}]}], "\n", 
 RowBox[{"tab1", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "=", 
       RowBox[{"a", "+", 
        RowBox[{"i", "*", "h"}]}]}], ",", 
      RowBox[{"f", "[", "x", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", 
      RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}]}], "\n", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "576"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "/", "2"}], ",", 
     RowBox[{"8575", "/", "64"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"3", "/", "2"}], ",", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"1125", "/", "64"}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"-", "8"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"5", "/", "2"}], ",", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"81", "/", "64"}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"7", "/", "2"}], ",", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"5", "/", "64"}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"9", "/", "2"}], ",", 
     RowBox[{"63", "/", "64"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "16"}], "}"}]}], "}"}], "\n", 
 RowBox[{"tab1", "=", 
  RowBox[{"TableForm", "[", 
   RowBox[{"N", "[", "tab1", "]"}], "]"}]}], "\n", 
 RowBox[{"PaddedForm", "[", 
  RowBox[{"tab1", ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "2"}], "}"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"gr1", ":=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "a", ",", "b"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"gr2", ":=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "576"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "2"}], ",", 
       RowBox[{"8575", "/", "64"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"3", "/", "2"}], ",", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"1125", "/", "64"}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "8"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"5", "/", "2"}], ",", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"81", "/", "64"}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"7", "/", "2"}], ",", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"5", "/", "64"}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"9", "/", "2"}], ",", 
       RowBox[{"63", "/", "64"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "16"}], "}"}]}], "}"}], "]"}]}], "\n", 
 RowBox[{"Show", "[", "gr2", "]"}], "\n", 
 RowBox[{"Show", "[", "gr1", "]"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{"gr1", ",", "gr2"}], "}"}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.872507117029096*^9, 3.8725071291055193`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "576"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", 
     FractionBox["8575", "64"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "2"], ",", 
     RowBox[{"-", 
      FractionBox["1125", "64"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"-", "8"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["5", "2"], ",", 
     RowBox[{"-", 
      FractionBox["81", "64"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["7", "2"], ",", 
     RowBox[{"-", 
      FractionBox["5", "64"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["9", "2"], ",", 
     FractionBox["63", "64"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "16"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8725075261043963`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "576"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", 
     FractionBox["8575", "64"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "2"], ",", 
     RowBox[{"-", 
      FractionBox["1125", "64"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"-", "8"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["5", "2"], ",", 
     RowBox[{"-", 
      FractionBox["81", "64"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["7", "2"], ",", 
     RowBox[{"-", 
      FractionBox["5", "64"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["9", "2"], ",", 
     FractionBox["63", "64"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "16"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.872507526112565*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"0.`", "576.`"},
    {"0.5`", "133.984375`"},
    {"1.`", "0.`"},
    {"1.5`", 
     RowBox[{"-", "17.578125`"}]},
    {"2.`", 
     RowBox[{"-", "8.`"}]},
    {"2.5`", 
     RowBox[{"-", "1.265625`"}]},
    {"3.`", "0.`"},
    {"3.5`", 
     RowBox[{"-", "0.078125`"}]},
    {"4.`", "0.`"},
    {"4.5`", "0.984375`"},
    {"5.`", "16.`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8725075261172705`*^9}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      InterpretationBox["\<\"         0.00\"\>",
       0.,
       AutoDelete->True], 
      InterpretationBox["\<\"       576.00\"\>",
       576.,
       AutoDelete->True]},
     {
      InterpretationBox["\<\"         0.50\"\>",
       0.5,
       AutoDelete->True], 
      InterpretationBox["\<\"       133.98\"\>",
       133.984375,
       AutoDelete->True]},
     {
      InterpretationBox["\<\"         1.00\"\>",
       1.,
       AutoDelete->True], 
      InterpretationBox["\<\"         0.00\"\>",
       0.,
       AutoDelete->True]},
     {
      InterpretationBox["\<\"         1.50\"\>",
       1.5,
       AutoDelete->True], 
      InterpretationBox["\<\"       -17.58\"\>",
       -17.578125,
       AutoDelete->True]},
     {
      InterpretationBox["\<\"         2.00\"\>",
       2.,
       AutoDelete->True], 
      InterpretationBox["\<\"        -8.00\"\>",
       -8.,
       AutoDelete->True]},
     {
      InterpretationBox["\<\"         2.50\"\>",
       2.5,
       AutoDelete->True], 
      InterpretationBox["\<\"        -1.27\"\>",
       -1.265625,
       AutoDelete->True]},
     {
      InterpretationBox["\<\"         3.00\"\>",
       3.,
       AutoDelete->True], 
      InterpretationBox["\<\"         0.00\"\>",
       0.,
       AutoDelete->True]},
     {
      InterpretationBox["\<\"         3.50\"\>",
       3.5,
       AutoDelete->True], 
      InterpretationBox["\<\"        -0.08\"\>",
       -0.078125,
       AutoDelete->True]},
     {
      InterpretationBox["\<\"         4.00\"\>",
       4.,
       AutoDelete->True], 
      InterpretationBox["\<\"         0.00\"\>",
       0.,
       AutoDelete->True]},
     {
      InterpretationBox["\<\"         4.50\"\>",
       4.5,
       AutoDelete->True], 
      InterpretationBox["\<\"         0.98\"\>",
       0.984375,
       AutoDelete->True]},
     {
      InterpretationBox["\<\"         5.00\"\>",
       5.,
       AutoDelete->True], 
      InterpretationBox["\<\"        16.00\"\>",
       16.,
       AutoDelete->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]],
  PaddedForm[#, {11, 2}]& ]], "Output",
 CellChangeTimes->{3.872507526123895*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     PointBox[{{0., 576.}, {0.5, 133.984375}, {1., 0.}, {1.5, -17.578125}, {
      2., -8.}, {2.5, -1.265625}, {3., 0.}, {3.5, -0.078125}, {4., 0.}, {4.5, 
      0.984375}, {5., 16.}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{480., 360.},
  Method->{},
  PlotRange->{{0, 5.}, {-17.578125, 346.9609375}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8725075264450417`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwt1nk8Vc8bB/Arkp2UklRkzX5FKmVOyhqiorRI9mTPlqRLspWdUklIkQrl
kqXMsYSUpfhmSVIhRCF76Ddz+v3V6/36PPPMM3PPORK3cT9ov4xGo21jpdHw
v6Hx0Yv5igNAugt8Y8QZEzu8SvJZ3w6AXiXfIbWXhkTLX00rz84BULPk5a0X
Ykg4REOezwMDwCMgRD1dz5BIyKk9U8byHYhFN3hLtBoQwz1tEp4a34F+R+Yj
51F9InX/+I2ezO9g7GoTo0FJj1iSlGOUnh8ETC2lYMNve4mkZ0+UZMIHwWyP
y7bnBXsJOYL+KSlpEHhnD6rbBu0lLI5v3+mRPwg8Dptq+YvsJfLjdSel+1Gu
/PBBnLk2Yb1k45RkOgTavljXG7UTRHX7bVN3mWFA+B7eJ8C/i0iyMZ+c2joM
BI4n7imp0CQcRvlSAolh0FvqsLXaTZPgYg35HGmJ8ty5Z7SWnYSpkpNb1lWU
r/lgtfLGDqInVO1a569hEGe7/tteDQ1int5Yt7fkB/AY4/VoeKlKvH0Rdrah
5gewdk6x3n5elUjTI/jN3qFchePqXzVVYs/JQgur4R8gfdWt0ylP6ERExM1+
f9ERELf7x/CPTBVizWd71jzGCBBbqWVQqKlI0K8taQkbjILet1b8WfelCNUz
C3ZPLEYBCXa6jstIEWq681HadqMgPSNN+0+uJLGNNv3B5RLKrYKu7SmUIHZ5
j7pVFo0C4lMGceWtOKF/ojvNefNPQJvt876rLUpYK5QtvfiDHPyhe2wXL2HD
WSJ5kPMXoD2SOCd2l5uwHSgy/L7mF2DoV+mMsHIRDulPr69URf7FZWXyHzvh
svqhkoMTqteS/jF5nUb4Ldyw4v8PWbipxtzkK9Ab2PlZ5cgYYGxR8FG/y0I6
tLaNhJ8cA7TdHfckO5aRoaTbfI8tyjdorhbkZyMrb2UKRXsgD804/fJlJzUP
cBkNRaJ677MOQ0rcpHJJZ0nGC5Tza3pUigmSa6P8EwQ3jwOGH5+dzCURcpuf
YPoZ2XFAs78jfnhRhDxs9/gJqYTy1LyUOwHryXit3no3TZRPyoMoL1GS+7fe
34bDKN+iKPbtyEby7/G1LpfDxwExZHbu0YIY+V2xWGdyBOWHbdXvmUiSmy+6
2sv/Ru5/vtPmkiR54q3kFZs5ZGVRqcp8SbLFObGmZfkEYGj2qVrzS5Fl2R57
n2xEZlk2pNggRV4Tl9/jYDoBiBxaxgklGbLW46v1HQuUD/il6FnKkDTyJqPt
xASgLUhd6rgsQ/pYcZDaZyYAGfwncbRdhrS63a+1KQT5v+TNvy7IknSh9F0d
hWh9nJJWRuEW0sXuyAn+MtQ/Xfjnms4t5INCvkBdEtXfVDy6fWkLKXLwYjnz
LcoZwq8u6cmRbLHHdsb3o1xRp1vugxz5gUNou+Ha34BxTJKL6JMnLyxEbn0R
gGzPMGl4pUg2edsmBQQjj+cffv5NkRQb3TW1PeI32i92zphFiaz59Ku4KPk3
IM+m1Z3XVCJ5oPnO/ILfgPaRa/HDIyUyLVh8T+YAqnc0Z2e9qEyOzc1nWI+i
fDySozxZmdT2alu2aRL13ywsLZGnTH63Ca+5zTIJSJ14veU9yqTKvlG9ZNFJ
QDt5SYBvgwpZyV5qEnEQ5bc3X53yVCFXX0rI17WcBOnM4dqhCyqkw8xZgeXW
OD8uU3pFheQa3Pg+2HUSiBU8XTOcokIefB1qfiFiEhD+KsM3X6qQWXusinfE
otzHKNylVoWcLtVYO5uM8oAtteubVcjbucMd3vcmgXVhX59ArwrZd9X0hFsF
qs+yIo/R6OQ2NrmXCq/QfLciw9Zy0MmIQNaNP94gj0vaPOOnk4quxZ8dO9F8
6yoFLm+kk74moranJ1E/FU6d5J10csXKwTOH5aYAba3yySwXOjkdfkLnrsoU
SI9bOT3tSScHllrEhrdNAUJnrbeSH52sHSltv7QX1SuOPjYKppNh9Vd1Hp2Y
Ar1b/IYMklB/QBOftpkC5MeBy3UpdNKh2HuBOIPWewesl79DJ3WzThZ+8EHr
l3jeZt2nk+wMZfFlsaheh+W3fRHaf/reglEyys+5aawtRfu7CnfcuI08qReV
/wLtf5wlVjEHuWP4S3I1nSx+7+Psn4ecWrelr5ZOPjAY1qlmTgFGrAa7SAOa
T6N14WglssQHlt0taL48vY57dai+QsdWrhXNJ/Wi8GcjypMbPv39D8236r5z
aBeax8Y3w/Yjmu+Xb0f+b1SfazG1sh/NZ/+jcH4OneeszLO939F83adidWjT
gHZY+ZrVEJqvQV/3Iw9yDZew6Siab89LcelV04DQfMop8wvNV0Jf9Fg3DRgt
ainfx9B8D0SY7NLTgBw+xSU9iebbEBtrpoDWr+RTzJpC8yWxnk1VRX78wJln
hk5acPvrft+O1ie4frWaRfOGjIirArT+QHTh7Tn0PMxZLwbqoHqFtYtV83RS
2uO/jrr9KN/J2tP2h06u+W7AFDyI7KDi824Bnc+qIvbkUVQfaPelZBGdr031
bI4V8jajPVeX0Pn2Z+v+tkPzG14o1P9LJz9Urd+sdRbZ18ViHLl2R9xihCea
JzxY/wpNlSwuYOts9UO5K2sOG4sq+UDmPHNjEOoHNie6I19PG409E4psNCVT
ixwmZHOWGYXmkbgQyrFMlfS99kH3bxzKs2/WbkN2YN2/2fAGynk38pghWwTA
xaQ7yHMvvI4g645v7fx8D9UHCAobIm9zymHK5aL9xTLXbUGW/iwa51OAzNae
NIn2W2MRf5YsRvX/sWY/Rl7euFyP+yXKv9m4miHzuKbafqpGOefRLx3oPKt5
tzLyG1B+6eiYAbLok9epwe+QT+2GWej8ksbWpYc6UL11hdcQui+F0en/pD6j
fNBTWRhZLTp6YqYf3Y9k4zo6ut9dipL8DSPIKyUt1ND972ssk0/9jc6T/JBj
M/p9jFzN9N3mUX7V3Xwe/Z6HeQftCJYZQHY6WL9Ev7etsVBaH98MYNzjINim
6aTz6KOyYiGUF44dj0DPj1e0dnuEKLLDlZqZCToZ0uguoCg3A4jweo6b6PmL
cmVX/KsyA2jX8uXeoOczgfeOwTsN1C+MKTX0g05mGjeE+Oggq0upDqHnO3fU
+q6eEaovqo14g57/Z9Ez5esOof6fx7VvfaOTlY2SUy+tUb33L+fFHjpZ71q+
Ms4R7bdiRjShm0628B5UsnFD+fOJslVddLLX+JIjeyDqZ/9+T08bnaQ1dXaa
3ED93qRIJb2mkxxuHtNiaWi9cdjXRPQ+C/CtWPU7C60/YHg9GL3vYiZqRjee
oXyDl73MSzoJmmIqPjeifuoa9PR89D64SX182obqnXLVVj2mkyZ8L2Yuf0T1
m5ar+uTQSSuTIRXZIeQPeTfZM+hkUNPeex5ss4DW+y7OJh69j25dUJt7FpA7
jnSYRtPJGD7P7tWCKP8kJaQcSSfvmKQJlW5C+Xb+4XIGnXzRNBvOojkLiJDY
YyLudPJP0xOXBM9Z9P8FFZLNgE5ufHf69j5/VJ+dQBfeRye1W4UapoNQ7mPz
ZwNAv0f7RZnj11A+tJqdRZ1OCvcaf5XIRnmo64SMGHqfx0ePFHUjT5lkCUyq
kB6rlPZ26M0BRsmnEdZEFTJJ6KtnlMkcIKQX7iVfUyGfr72evst8DpA/Lv4S
DVMhl9YvLabboPoapyye8ypktGRTyZmLc4AmESV1zkqFzFV3U/rzDNX/zVDx
lFEh+4/krdu4cR7Qdvadv2evTD44ulh1QnIeMN5cPnD1iDLpZGnkclsO5Zx/
JuwNlMnhY8MVwhooF6lUmFRAf19PStutMkX5Exkp/99K5IJtWh5HCLKsdohm
kBK5yiNm7+9+ZBultMSriuSeCDfX+id/AGPWJ2n7NXkyeamEc++pRUDrlPv2
bEaaPC5abdT9ewn9PXDX1X62meQh5Uc2m9MIWm/6vV1QlLRXz5yyVGAhaCOv
5yT2CpFRMUL8F5WRcwL3Om0RIvO+R8imqyKLxAa85Bcip2+6Hx/Yjqw78fpW
92oyYmlXpZcOck/sDXG/1WRuXfu1q1bIAef67PJXkT8teSVfxiHT+GP7FARJ
vyD/g2JTyOnBBwRK+UjZkUCe8Fnk7kj1sig+ssMyuHb0D7J/cV30CT5yu3rU
zvJlywiaZMnEUxofOfvj9mYLAeTJ4w4/DXnJAEs4cVUeOalJXOM7Nxmkxp44
cxpZOD96RouTVMrkMrayRxYIHm0V4iR7+PlXvHLC1s3sHOEgwY+1FxLckdM3
Tljf5iBpmVtsFS8ityR4W82vIEP4jbfapuB+cYV8JDt5ZTixtakJWeXyag5n
NjK0vb/hzzvkwYZTNvrINRpVsv8hMwzLP0uzkSFpHwtCPiL3Vgfu7WMlgw5K
xGwbxPtlrM2zZiV9y57pp7GwEjQPiTJ262WkU9S7l65qyPUXJf39aaSjn0TR
LQ1kU/XXm47TSAc7n8d1O5H9lYWGdtNIO611t8X3INMeufWy0sjTE9b+/xkj
Ez+cKjf/hceOjanudkSOCyE07BehkRx/Ds8tvF9DvOL6eWhZ756z5Q5ef+bZ
k6E56ODQkqObjjzWw3m2ZA4yMuMfMh4gW3v1p1rMQabI6keTz3D9KlpX8iwU
5V6X1/0G169rS9s0A0d+bGY+XkRmXAzwPjUJ5yIvM1/T2NB5jVqs1Cchu2wf
c4AVmbx/IoR7EorZ3S8S40IWKI/zLvkND3fLPE9ag+zx4AGL0G/44q1CWaAy
rl+pmt4xDqOfbCONTmNHp46u/AWlrWVPP7FDpinDxFc/YYWgyDI+J2RrVd7i
8z/hmN/i3mY3ZLHAAtdvo/Cwdk2dWSBy7/yjtBcjULTdrNniBjIDRhZeGYaP
aa491o143tiHf90HoE6h1aXKFrz+6DIP1QHYY28qtrkN+9Mh06l+KPBmq823
Lmy66anAfuidPN9vP4j7JxY8iu2DmnIRo86sy1G/P1X3G77ChkP3Frx3INPq
5vI2fobPrnztur0LmXys513TA289Fy+tAthfggace6Dz+nQfAV3sEO7m0k+Q
81vqz0cH8fpyg7RT3VDf63rv17PIDPGrmQ2dUCXrvwpOd+zs998DOqHwh9V3
VLywt4U1y3fC7zsSLYP8cb+muMuxHTCMJe79uivIRHnTWat2+CoussY0DfdX
JR+u+w8+rqrP9MvA+efx2tY2mDS5IjgtC/dr4AmMaYN2R8N2j+TiXN7q0fI2
yCZ2uTj8Oc4L+Hn+vIfa+YE5FS04f9OhzfIOko3u1xRY2VF/17P9ow1QbTXB
fYMd2/tUT2ADzDkmEMXChcwwY+PmbYCx3wvCPwhgc72ZVXkNrVgmQhgbcX2+
wWxYHVxQ8z7ftgP7sIawcw30uLBvVms3tkVAOHcN7Ktc7feQwGbTEcirhm9M
iryD9LA3TztOV8FbTtPusubYry8vS6qEO1L9HQI9sGsLZ5ZVwMdf9fsHzmEf
sw51fAnFtqyzM/Oj1pcKNL2AHMWlp6WDsDe+XJ9RDjua50+0XMUWOZdpVQp9
WS8ekszG9nn3VK0IDhsYv4/JxZYaq3jOhFZxG8zmnmDLhN7cxYQ6GypMmpjY
C49z9xfC1Rp/DfyrsN2eDwQ9hc+cg4m3n7CvH1RxewzVbKzrpb9gZxpk5D2C
xZbANLgPW7ROcSIXluovntr2A3tNZkjIQ0hKn7+UPovNvHmx7gHU3nh0xZ8/
1Pk8FcQewGohjVjzv9gtz19fuA9r2abSuNhXID8mSjWzYONXjwrvVdimFS2f
MqBJ1wHd5jXYLeeOGGfAlndKTVtEsDcapsN02EaOfOoRwx77XHP0LuxKc1rU
V8L2WNhkdBueuK535R4dm4O20eIW7ImW5l1Sw2YzM7C/Cb8E9okWamIzvy0k
3ICDx6x3bTDAjoh9LJcEnQ+CGj8jbLWEoROJcMRgo9H7A9j1uUuJCfDX9u7j
4RbYSVzhAvFwes3RC+O21HqF9svXoD+fBquRIzW/acTWq3Bu+ZqrD5yxZd9r
j0TChcnWW8c9sVMygv3DIWvrgbJXQdhk4dBcCAxtUNIWC8Gmpeb8CobsVbwN
AVeo87Y3jjIg19M3ncrXsBmdU8uD4LWc3NNRsVQeULQ1EPKmRw71JWBbZ2V4
BkCBWL25mzepfm+tN/jBhDDp4MlUbLGSvigfuDpoOeeBdGyCc2aFN1zrWi3M
lk31F5ZT8YQpdpnpVrlUfexckTsUOREsW/qE6hdweYsr3LgfbHdjYveG8Z9x
gj8rzy7GPKfWe1yzdIBwe0pVfhnl3ay2dtBaetxonMROLxiA1lDlzgZBwRpq
//Z8KSvIstqwXbWO8pmUP8dgJsu9096N1PrkBHVz6OXfLJ3cQu0fWZByEO79
9edHUStl49EtpnC1g+zTDx+o+s3p7/bDvu7DvjOdVN5GPtSDRYeCNYU/UflD
o497YVjDE9qOXsrnDtsT0GJP1yvLb1R9Umv0TihTwn41YICyttaSGpxV2mp6
e4jyWX4RFVh//5TQixHKbj0VMvCm6LWu7l+Uh/luikHnxJK7ixOUvfmChOBO
rn67jdOUrcOYHJA7eKUcmKPs0b04XdE9s/vXqQXKjCqHrorHbs5Mxl/KtLHc
SxWB/dfPZyzjoHKdlDcVxieqtaqWU1YR9xur2Nj6i/UbB+WCwnBW+NNA9DUr
D2XTrrqVsILUj5Hkp7xQuFkUxmr4HNIRpPz1kYMktM7LEHYQolxr1SsPVaSa
PoUJU2Y9v1sV0lLnM7PXU97qvU4DvhOUcarfSJnNLmQXzIw8pDgkTjlbV3MP
9KIxJjilsBlG6wP2wb1+j5/LyVK5UNuCHlz9syNwvzzlxeSq/bDoI31FNB2b
rBngPAjDDlq9faKGTZD1Joehxeuo+CYNqj7rYqEFnC3+tl5Ai6o3KOw6DusV
Bb6o7KHy51apVvBm1q4HZvuo9SrrKqzhzoRklURDKjezaLCFXJxVU4XG2OlM
wsEefrz0s6zNlOp3xlXAEQa66umsOULZpSLGGVboz1netMUW+9K8xhPGQKlN
ZQ5Uf+4lES94atvBvq4zVL9BhtQ5SJN85CbqQeVZYsY+cO/fE5fvBlL3UbOy
7zxMjxIZYmVQubaP6gW4INRh4nSZyk9bhwfCYoVDIvQoyvEH912CsscMnlbd
oHzp4eUQyFOk/rn/GXbc0H9vIqAT8XufYTF2Qc7O9Ej46k1Bbl4ptkr8tG8U
DPoq7+tHYltf1pS/Bsf4N/NyNmH3jp17EgvbnPk0FYaw/dMswxKhyvSb9LgR
bFl7XloSjA6OZJ/6xUF9rxkBSVA3he39y2lsp6Rrnsmw5NW80wE2TjzP6gjH
GzBV7Pt1r03YHfyPXG9Duw9wosQcO1WsozsDCnxpSP52FNs633F9Jiz/8d92
vhPYY/7zlplQkGUkyNYGu+S8eHsmhPLC3Hzu2P5g17t7UCTYQ8I2gvLF4ar7
8J28+GHecuwXtVtiH8LAbQozGhXU/vtcGh5C2T0at2wqOanvvd/yXBhkYdz7
vA6bZvA1IBcqBJ93sWmjcqtPNo9gxId3oc9HsbtzNkk/gVrBIUWnxbiQJyVk
txfAmV2ppwMlsNmmA0wLYMFsEe8NaWz/1jSnAijhMWT/VgF7de6RlALIccp0
jcYObI8/l6YKYOuujX48B7EH07UfPIXXZjUkZMyxeXhcy59CXaZZ856j2AVq
p1uewhL5KzJ+VtgvZO7PPYVpIiPtX5yx1TrjDJ5Bp9nS7c8vYzvLZvc8g+LM
1r53YdihR/eMPYNd7qNxI5HYCoV3WQqh8XexIfE47LCKbIlCqPoh/Oa1VOwe
p092hXAkPkMn+y52sWi8dyG8b1w+XpmJ7dvKHloIhV/9NJjJoc5jrpFZCBcL
zedPF2GnHX3wsRAWu7s/CCzBrnplO1QIPeQjD94ox87y+zJdCL9mvsh9W4l9
eEh0JRPWx0sc12jCZojGajNhsPHuFQffYW97YWDChDs5jxS6tFHnN6i2ZMIn
jCjuzC7spvQJdyZMcB8v5/mOPVaqdZMJ20Eqx9lh7Ii1L+8xoaiAnvnrUWr9
89EnTJhdkPrzyiTV38i+kglHGHqafTPY09yPG5hQ1WwiXPsPtsj9rFYmfDGu
J/6XhRvvt/JRHxOyVE24nlyOnVJZMsKEugl3yso5sK1Z/SeZ8J3q70P+/Nii
PNysRXANa1r6B0HsadjDWQRPtOqPqq3BdvlsK1AEB86lhY2LYnubhYgWQfl9
Bq0HxLC3Z6zfXAQ9Vk9uypPAHrFwkCmCxX1pLjwy2Fq+NgpF8A/ToNRZDruF
TYBeBIkrk8tfK2KrcbmrF8Ew87sHZejYAnGXdhTBN1KGd6+oYS9k7NldBAWm
J39808D2Ny4iiqB57d3t2prYXJlde4vgreuGV9K1sCWfPtUtgr0OU++W9mCr
xuw0KIJSGukbT+pgB5r47C+Cziv2ny3Xx9bmtDEuggXtU8/XGWFXtNMOFMGp
7HQ2/wPYP9vMTIvgTv/9Zh8OYtdvMDcrgpf0p++oWVDzv+M6WARrhDOGEyy5
qe/JOWSuof0a4yewLRaikQ+UTl8+YI0tXX4cOSkyo+WJLXaoVzfq12VptIHH
ETvTUAB5k9zMGWdnbDvXGTSP3XxGcb0r9gP2BJMi+LDBiFXGk7qfvb1GRfDn
rZkDV7yp+Q5/NSyCamczU7/5YRPOKfpF8Lym8dCeC9hHny9D91PBPaueHkTV
e4ij+2PrzgxZCsZe3TgJiqDBY+PmE1ewo9gu7iqCMYGz68sjqNysbHsRbDW6
57TuGvU8/HyM/r8vvMGkyC+Wep5EzFWK4L2X90zUrmM/FqmTLoKD0Sa3E25i
j3nFixdBJau572Op2PrWguh5KlkyCX5yD9tp1Q70vC02zTVyZ1PP45nP6HnU
vpsl4pxL7e+3Gz2vjWC+UPopdsCg+BQTfmXcH7hbgc0+nPQfE/q23PGoqcQO
GrjeyIRcYtfnB2uo30f+xCv0/sAwPtU32HKFdCYTXl503FbTTr0f3wRimVDY
2Joc7MI+Yax+hQkfpx415O3B5rDZdIEJ2zQNrCz6sL3e6TgwoWSAXNjgGFU/
1reDCUtebxbgncQOawZKTGi0bv0t+gx2HIvtZib0LuHOC1ik6mtZuZjw1fTI
fzxcPPj71VfyoRA6nMuXoktgL9ut41AI56uy882lsbWvmR0phDGC6TsCtmDn
EQr66Hv2NM64WhnbOshkSyFcMebpY74Lm5314NAzmOOi9uq8ObZkZpH1M/jD
vtSuKhx7om69ylPI06AdK3cVO7V6nchTqKD0tjQhBtum7CfrU+gy3cNnm4w9
KSvWXgBHwthKWe9hm0oUXkDOPsCrU4GtZmQZmA9/DvUX1U1ie/wwOvYYjrkK
rmg8zYv/njPDmffhKbMhtz922IeNjEPuwyY18sMWJ+wTwcKm9+HjP64Pwtyw
nUxqfmRBp8jXOsQFbH3ReIks2JvFCC1Mwpa8Mp+cCZs//mS5VYct9th1/V2o
BV+dqW/Atm7IeZEGH2emvptuxD7KULNKg1FnDDMOtVE5qZN5B+rO3Cd4v2Bz
gHClVFghePISYx57tmG75U2YZ/BmwUGRD3/vNsiyJUH5ngLXKyrYHJH5zESY
43W9595WbOGIcvtEmHn7NNm7A7tl1OF1Akwenbl8TJeqX6F6Ix4Gxktym5zC
NuW9eDsGzklxBbrYYI+dseKLgb5lv0ai7LF7X3mGREOPb2VNdWexC7ZruF2D
tupmCXv8sePy/Q5HQcPOi+vU47HFQgJPhsE6V9uoQ0nYDLOzfVfgvmUGfzxv
YKukPHS5ArXkV3/Ku4NNbhEJDoX0i7npsrnYRM6v0hAoLN4uI1pNeR3ZEQST
i16k7Kyl5jl2b2UQFDTM5LR8TTlGx/gi5Dnn+iO5Gdu6pOHtBfi3hjWfv5ta
HzQy4g8HnFS2sU5hp3PWPj0Hf63M1rOfpXKfBs5zcLZsg2XdHyov57L3gpy8
3IFXl/HjfovbpTyhwtP+ylUC2MRVlRRXqH7sRKvPKmzGw/gLLlCLtbWvfQ02
rVjf/iw0NSdXpG6gzJq+/ww8N3fLWFKecoKyrT0MzFx5KkyJ6rftkr8dDN0f
4TFIp/pFDCbawut3fBIfb6fqP3zpPg3v6o5k8e2i6kNOcp2GOb9sij0AVU80
7LaGZXtMO9V0KRckuJyE1cO1w9cNqPXB4dPH4dvE3QuzRlR+f+nqMfipX27T
y0NUPsrZeQTSopbb65ymfNt/9iDk3Brom21Hedj5oxkU7J4I53Si1gdM1JtC
CaXe3EY3Kjf0CDOGCu0WL5S9KBtZ3d0P1RiNjfE+lI8ee2sAdd+XjZkHUi4x
OK0LD1ygLyu5RNk1rX4fPCqZs0rkMuXf1dp7obNv8raeSMobFd0IeG4Tjz4R
TTk1ZLcWDKwPscyMo5wVU6kJo0U8Ah1uULazU9aA16sHoutvUQ56vFYdprmc
vCuXRnnZf5u2wmyhtoJrGZSFBfXosKDCsOpnFuUI6XXKsNSxstU0h3LOis/y
sEpge/+zR5RdVvfIwjYbKQ6/Z5StSxgS8BN36rrOIsot5WLicIApKK9Z+i8P
798Af56M3HXnxb9+n4bWwRl2mslf+O9+7huugbQC31Onqylvn2ZdBTksRz2q
aymTbSsF4MpldiFSDZRp9r1cUORRV2J4I+XeLnV26NWa9jW/hbKA5cll8PUf
G3pHK2WG3MxihZikDIPWTpn4LThb4W/0o0m2i3J6zt+Jihbv/A1mn/7lB06O
VsjeOedyvvff/ps2D1QwXmmUZ3z71y9GubeiffQPZ8PAP1c1fqhQWkMenRj6
N1/2vaaKMK3QbJHRfx4+Ul3R46A/rT32z6buxRXbYnl0zv7+5wJadkXM85bE
xOl/JhwTK/o/J30tn/tnxoBvxS4OS3rfwj/TzulWGKbwEew0gX+mpbz0fezh
eIvl/27W18ok38cosf4zw8Jfq6lNrbiK7Z/FziVpzQ9e/2TB/s8jO3O0pBdn
2X6s+GeVp8+1Dq48rnCJ858nQ2q0gqReHlrF/c+eh1q0Hu7YdCGb55/r3Du0
2oyDMzX5KDNivb5o0Wy+vW7m/+cbLINaCr4647YrKZMF7GNaR6OyhWcF/9nl
86RWaBoncW31v34v7s5rFTw76yi2hrL1gTwa6K5tjGGupWyan8wGOD4qF+uv
o9xbLcAJ1H7Ff+oW+bfeX44PWLNOsnmKUi4ZmV4Jrq21UFi+kXI6z1YhUCJf
cujmpn/9dZuFQR8QuaAoTrnD4p0oEDgcmFm5mTIz7K4Y2OXU89pckrKaFL8E
cAwkxoekKC8wyqRAQlymcJAM5azULFlQkcVGCG6hnBLaIg+GSxwcH8hR1jfZ
owzWNNbH7FSgrM1zkQ60v8gVNylSrl9+aStwm7r2yUaZcpRCjjqo3WCmcFWV
8nCg704wQS88tEnt33nHNu4GG3WFLhSqUz4qMQWA4TG/TD0Nyt9tL+4BPm6d
rz9upxz4WngvSA/RHHffSbn6buM+8Pb6HWG2XZSda1N1gSQ87agAKMvFRRsC
09bqGJKgLPK3wAgEfpcqPqxNWcViwgS08Q+zXdShzLJ9yAzQJI0UVupRPhW5
4xBQ2J536L4+5bq8W4fBZWuvzMb92IwO2/gjYHJJ9NZl43+/72tDS+Bwpy5+
xwHKWw1FjgPDLtHg+wcp2ystWYEX/nX+xw9Tlv0VaQ2U1np5rLSg7CWecRoI
Hq47ddGScvGPKVsQOuF5ZOtxar/jdDV7MB0nemDoBDb5UIHhADobPbXMran6
/ofaZ0C6nugGRUdsQrr8gjsQHKhd/c2JyufepXiA0FBPnpvOVL51VaAncKys
/cPmRtlc68Q50HHK83eZO7Xf1ShLb2C4tP6Hhye1387BUz5ASdOzq9ubqhfM
jPAD6Z3r3yf4UvVhdo/8gaB/7Wt9fyrnXN5xHkwz15cyL1Drjz87EAheKtXe
uBaC3fvL6DMDKDV6xGqHYot5CN4OBuln14fPXqHWv7l7IgSE5nj42kVS690u
j18GRpvXm++Ko87z7rp9OKggXxlNxFN5SeXBCKByymNfTiK2tWSabiRYlfpq
6+ob1HxB/dpXQZeQh+DIHSq3WxUfC4yYIlyZd6n9Plw/HgcqDr5iOZpB1e8P
mIgDGbEi49VZ2HE3lyskACfOV823H1H7tf5tTgJd2e51Zk+o+RPjLicDI10R
uCKfWq8VpHkdqFx2zzv3DLvAobjkBphZWBe9vxTb4/614Vtg7Pf+yLkyar37
XMVtMDh88Ur2C2oeLamUVNDV8eUiK/nve0CzTAMVzIdu5bXYpodOcWeA548+
Op+px9ZfHR2ZAQoyeR3XNmCnL9lwZYKMOM9T5xqxx1gUV98DoS47TOXbqH6l
Ogb3wUXbs0ad/1HzapKf7gPfY3f0w9uxBdRVfB4AR32WPd+6qH5pwk+ygaHk
a/rtL9R8CzLauUCg++gq7l9UP4etywsAZ2sUf+kYds3NyDMFYFnDC27HCezJ
jfnNBeD3czG26inst5lBGU/Bh8TByYAF7FSv5uOFoDlKZFx2iapvBM2FoD7Y
aPTDX+r+45/sY4JS94J+VdaVyEyJm+pFIHW//4dhTuyxUEuV5yBZO/d9Cje2
3fBJ5nMQs6O7SZcXO8kzbmcJuCRD1GUKYNfw3TQuBTasHCXH1mIL8PyIKQey
5TduNkhiLx2Q0iZBvacH87g0tr6gVTwJnGQNmkdksCM8n38hwcPkeTZ+eWo/
q/YrlUDO46THITq2nJFodxWQl5LQ696N/aJ9f/Ur8Pbjn9OuANuh9YdULXBJ
aAtcIrDjGj9G1oLHf688E9uHLahWYl4HFLoGN9gbYk9ylS/WA6XYvMlRC+zr
WmXxb0GTTjj/paPY9XmdXI3AbeGUnMAxqn7NxSuNIP/MSmvVk9R5zp281ARU
9nm/8bXF3hIwod0CVOd2ZP51xz7+Nd7jPXifL/gyzhObf+2qsvfAy+FHu/g5
7E35XmytoLA1lXefL/argLbbrUAt769/RCC2yJYj/7UBddtXB1ZGYmems/u0
A9GsgZ01Udi+Vc1t7WBZ/wppv2vU/f2qUu8ATQ6GC92x2Ecg/U8HcHBuzsm5
jl1yICCpC6R4drIQWdj2pjysPSDo2fzIxH3sXUWFvj3A7vf6jvvZ2LMyBT96
gIqPVR73I2zTi4Wdn8Fr/2/H2p8iM75/WPetF8xfGi10gzhvyng//hX0knx3
xStxfnLiz7ZvoJZFJaqtCnuP5vfAbyDxspf1zlrslA5O7j6gED7Dw96I13M9
yFXpBydjWBzudOHc8PyLzO+ATBUSfjuFvYrtruIoMLnzSdxmBtfvHiwOHwUf
79yXn53FHud48HUUTKepA8kF6v66+W//BIoZ5g6BywQJGvn5+gbuMXDrfjJT
gR/7cFb67XEg++BkRZUAMm1OhmweB0UPpOqPCmKrOhxhmwAt2UUfQ4WwRbeP
uU2AFbn/Lfu0Hvv52S8Gv4F3npBZtCy2RZvv2imwLP/TMQk5bFl9r0NTIDb/
vl2pPDLR4TMROwVyC9T9+5WwU6xCuabBl2fmd3erIzMWNNjZZ4DJ8+TR0T14
vXDB3rVzQJYUijI5jvPr//XlLIJd6+xTuk/g+aVA+tQiMPNiPnC2wrnc12nt
JRAgeag67DT2Vd/zn5fA24i4hQpHZLH9L6f5aYSnGbe7sjfevzmi4BQLEZZ7
7OJLH1yfGbTpKgtxizX36n4/7Kir34pZiJoi/RzHAOzmThf+ZcQakbAvdxnI
6Q9H42uWEWVfaYcFonG/peIkwEY0aZrapMUgW+fIxHmwEd+S7nooxGGXZg1m
sBE8elrR+ol4/tz3z5YvJ049ulDLuIk9dKns3XKCzXt6+/h93G+8gydwBWG8
fGTD+wo8v7V82AZuImfw8kIwifv5XHa15iaWvV3/kV6F3Ks4/eEeN1GSsD8l
/hW2mPhWBR5is9gjQbO31P26Su3lJaZ3Oq9o6cQusLkdxU+keQyONU4ie+w6
na4tSMweYjRfnMb3/+jYpIsgcUhDOE9xFs8zOJ58Q5DgWNI7G/0HuUDwQfWo
IOF1NbvfaNkqgqZyZbztzipC74FD1xt+ZNqet0q8QsTYx77q13LI6bmf38sL
ExNBEpUnFJDjgiulTgoTk+I2Fb8UkVt0w+tjhIlZx88lQnTkgic6fyeECdpk
55PTGsiMCrNdcB0hwNN8Y24vMnm+a7/jekJlV+nZLSeRx2Tars5uJFQ/zzi9
sEL2KOxPU9tEqIVsczhgjftnFfN5biK21xda+9ji+dgM2H9sIojDeeaVZ5A7
HsYXeIoRpi73gKUvrrfbseqcOOGeGr0qMhbZdJ9c6G0J4i2L5C/DeFyfocBS
I0HIOZY18CQiW5/8So5IEH3078Fx1/H+e4o5gSRxtI4Yu3EHz6uo1jAgSWhP
/H774BGyWL6Y2V5pYo3+sbCaOmQBON+luoU492TsdNhr7NSv5nZbiBbB8N36
b7APMzZe30Jc/VQ4+aYJWfij2a35LQTtHK9t63/IhFaMbp0cMXyHBF+/4f3f
nK9xVyD0WI+sz+rH523m1nugQGQ5jU7bf8f3O2aw4ZMCcWqrSN7QMDKH7KHa
/YpEW/050fFxZP1QRyFFJYKuxDX77Ddy/XFpwkGJiElMb/WeQo7oyq28q0QY
WDVGzc5iF9xoWKVMPKi2dSibx/sbNBw0USbYtszvCVzA/XmPbI1UJk7HxG3Q
WkI+OnLPpUaZqPgtPff3L74/hbV//yoT/wNP/4Dh
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{480., 360.},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 5}, {-18.00914685357725, 59.1289333402422}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.872507526585408*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
hk5acPvrft+O1ie4frWaRfOGjIirArT+QHTh7Tn0PMxZLwbqoHqFtYtV83RS
2uO/jrr9KN/J2tP2h06u+W7AFDyI7KDi824Bnc+qIvbkUVQfaPelZBGdr031
bI4V8jajPVeX0Pn2Z+v+tkPzG14o1P9LJz9Urd+sdRbZ18ViHLl2R9xihCea
JzxY/wpNlSwuYOts9UO5K2sOG4sq+UDmPHNjEOoHNie6I19PG409E4psNCVT
ixwmZHOWGYXmkbgQyrFMlfS99kH3bxzKs2/WbkN2YN2/2fAGynk38pghWwTA
xaQ7yHMvvI4g645v7fx8D9UHCAobIm9zymHK5aL9xTLXbUGW/iwa51OAzNae
NIn2W2MRf5YsRvX/sWY/Rl7euFyP+yXKv9m4miHzuKbafqpGOefRLx3oPKt5
tzLyG1B+6eiYAbLok9epwe+QT+2GWej8ksbWpYc6UL11hdcQui+F0en/pD6j
fNBTWRhZLTp6YqYf3Y9k4zo6ut9dipL8DSPIKyUt1ND972ssk0/9jc6T/JBj
M/p9jFzN9N3mUX7V3Xwe/Z6HeQftCJYZQHY6WL9Ev7etsVBaH98MYNzjINim
6aTz6KOyYiGUF44dj0DPj1e0dnuEKLLDlZqZCToZ0uguoCg3A4jweo6b6PmL
cmVX/KsyA2jX8uXeoOczgfeOwTsN1C+MKTX0g05mGjeE+Oggq0upDqHnO3fU
+q6eEaovqo14g57/Z9Ez5esOof6fx7VvfaOTlY2SUy+tUb33L+fFHjpZ71q+
Ms4R7bdiRjShm0628B5UsnFD+fOJslVddLLX+JIjeyDqZ/9+T08bnaQ1dXaa
3ED93qRIJb2mkxxuHtNiaWi9cdjXRPQ+C/CtWPU7C60/YHg9GL3vYiZqRjee
oXyDl73MSzoJmmIqPjeifuoa9PR89D64SX182obqnXLVVj2mkyZ8L2Yuf0T1
m5ar+uTQSSuTIRXZIeQPeTfZM+hkUNPeex5ss4DW+y7OJh69j25dUJt7FpA7
jnSYRtPJGD7P7tWCKP8kJaQcSSfvmKQJlW5C+Xb+4XIGnXzRNBvOojkLiJDY
YyLudPJP0xOXBM9Z9P8FFZLNgE5ufHf69j5/VJ+dQBfeRye1W4UapoNQ7mPz
ZwNAv0f7RZnj11A+tJqdRZ1OCvcaf5XIRnmo64SMGHqfx0ePFHUjT5lkCUyq
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
      "]]}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.019444444444444445`], AbsoluteThickness[1.6], 
      PointBox[{{0., 576.}, {0.5, 133.984375}, {1., 0.}, {1.5, -17.578125}, {
       2., -8.}, {2.5, -1.265625}, {3., 0.}, {3.5, -0.078125}, {4., 0.}, {4.5,
        0.984375}, {5., 16.}}]}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{480., 360.},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 5}, {-18.00914685357725, 59.1289333402422}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.872507526685012*^9}]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{},
  ContentSelectable->True,
  ImageSize->{480., 360.},
  PlotRange->{{0, 480/360}, {0, 1}}]], "Input"]
},
WindowSize->{767, 697},
WindowMargins->{{Automatic, 376}, {24, Automatic}},
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (December 4, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 4160, 140, 332, "Input"],
Cell[4743, 164, 1089, 39, 102, "Output"],
Cell[5835, 205, 1087, 39, 102, "Output"],
Cell[6925, 246, 891, 30, 183, "Output"],
Cell[7819, 278, 2632, 94, 182, "Output"],
Cell[10454, 374, 1052, 28, 375, "Output"],
Cell[11509, 404, 15928, 272, 375, "Output"],
Cell[27440, 678, 16256, 277, 375, "Output"]
}, Open  ]],
Cell[43711, 958, 132, 4, 375, "Input"]
}
]
*)

(* End of internal cache information *)
